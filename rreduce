; SLIME 2014-07-29
CL-USER> (ql:quickload :steenrod)
; Evaluation aborted on #<QUICKLISP-CLIENT:SYSTEM-NOT-FOUND {100445ACB3}>.
CL-USER> asdf/cl:*load-pathname*
NIL
CL-USER> (push #P "." asdf/cl:*load-pathname*)
; in: PUSH #P"."
;     (SETQ *LOAD-PATHNAME* #:NEW1017)
; ==>
;   (THE (OR PATHNAME NULL) #:NEW1017)
; 
; caught WARNING:
;   Derived type of (CONS #:G1018 *LOAD-PATHNAME*) is
;     (VALUES CONS &OPTIONAL),
;   conflicting with its asserted type
;     (OR PATHNAME NULL).
;   See also:
;     The SBCL Manual, Node "Handling of Types"
; 
; compilation unit finished
;   caught 1 WARNING condition
; in: PUSH #P"."
;     (SETQ *LOAD-PATHNAME* #:NEW1019)
; ==>
;   (THE (OR PATHNAME NULL) #:NEW1019)
; 
; caught WARNING:
;   Derived type of (CONS #:G1020 *LOAD-PATHNAME*) is
;     (VALUES CONS &OPTIONAL),
;   conflicting with its asserted type
;     (OR PATHNAME NULL).
;   See also:
;     The SBCL Manual, Node "Handling of Types"
; 
; compilation unit finished
;   caught 1 WARNING condition
; Evaluation aborted on #<SIMPLE-TYPE-ERROR expected-type: (OR PATHNAME NULL) datum: (#P".")>.
CL-USER> (push #P"./" asdf/cl:*load-pathname*)
; in: PUSH #P"./"
;     (SETQ *LOAD-PATHNAME* #:NEW1021)
; ==>
;   (THE (OR PATHNAME NULL) #:NEW1021)
; 
; caught WARNING:
;   Derived type of (CONS #:G1022 *LOAD-PATHNAME*) is
;     (VALUES CONS &OPTIONAL),
;   conflicting with its asserted type
;     (OR PATHNAME NULL).
;   See also:
;     The SBCL Manual, Node "Handling of Types"
; 
; compilation unit finished
;   caught 1 WARNING condition
; Evaluation aborted on #<SIMPLE-TYPE-ERROR expected-type: (OR PATHNAME NULL) datum: (#P"./")>.
CL-USER> asdf/find-system:*central-registry*
(#P"./" #P"/home/brian/quicklisp/quicklisp/")
CL-USER> (ql:quickload #:steenrod)
; Evaluation aborted on #<UNBOUND-VARIABLE STEENROD {1004479603}>.
CL-USER> (ql:quickload :steenrod)
(:STEENROD)
CL-USER> (ql:quickload :steenrod)
To load "steenrod":
  Load 1 ASDF system:
    steenrod
; Loading "steenrod"
[package alexandria.0.dev]........................
[package closer-mop]..............................
[package closer-common-lisp]......................
[package closer-common-lisp-user].................
[package optima.core].............................
[package optima]..................................
[package optima.extra]............................
[package iterate].................................
[package marshal].................................
[package checkl]..................................
[package steenrod].........
(:STEENROD)
CL-USER> (in-package :steenrod)
#<PACKAGE "STEENROD">
STEENROD> (flip '(:step (0 1 0)))
NIL
STEENROD> (flip '(:step 0 1 0))
NIL
STEENROD> (permute '(0 1) '(0 1))
; Evaluation aborted on #<TYPE-ERROR expected-type: UNSIGNED-BYTE datum: -1>.
STEENROD> (permute '(0 1 0) '(0 1))
STYLE-WARNING: redefining STEENROD::PERMUTE in DEFUN
; Evaluation aborted on #<TYPE-ERROR expected-type: UNSIGNED-BYTE datum: -1>.
STEENROD> (permute '(0 1) '(0 1))
(1 0)
STEENROD> (permute '(0 1 2) '(0 1 2))
(1 2 0)
; in: DEFUN PERMUTE-STEP
;     (CAR :STEP
;          (MAPCAR (STEENROD::PARTIAL #'STEENROD::PERMUTE STEENROD::PERMUTATION)
;                  (CDR STEP)))
; 
; caught WARNING:
;   The function was called with two arguments, but wants exactly one.
; 
; compilation unit finished
;   caught 1 WARNING condition
; compiling (DEFUN PERMUTE-STEP ...)

; file: /tmp/file9911ax
; in: DEFUN PERMUTE-STEP
;     (CAR :STEP
;          (MAPCAR (STEENROD::PARTIAL #'STEENROD::PERMUTE STEENROD::PERMUTATION)
;                  (CDR STEP)))
; 
; caught WARNING:
;   The function was called with two arguments, but wants exactly one.
; 
; compilation unit finished
;   caught 1 WARNING condition
STYLE-WARNING: redefining STEENROD::PERMUTE-STEP in DEFUN
; compiling (DEFUN PERMUTE-STEP ...)

; file: /tmp/filefq9e9r
; in: DEFUN PERMUTE-STEP
;     (CAR :STEP
;          (MAPCAR (STEENROD::PARTIAL #'STEENROD::PERMUTE STEENROD::PERMUTATION)
;                  (CDR STEP)))
; 
; caught WARNING:
;   The function was called with two arguments, but wants exactly one.
; 
; compilation unit finished
;   caught 1 WARNING condition
; compiling (DEFUN PERMUTE-STEP ...); in: (LIST _ JOIN-OP ST1 ST2) (JOIN-TWO JOIN-OP ST1 ST2)
;     ((LIST STEENROD::_ STEENROD::JOIN-OP STEENROD::ST1 STEENROD::ST2)
;      (STEENROD::JOIN-TWO STEENROD::JOIN-OP STEENROD::ST1 STEENROD::ST2))
; 
; caught ERROR:
;   illegal function call
; 
; compilation unit finished
;   caught 1 ERROR condition
; in: FOR X
;     (ITERATE:FOR STEENROD::X ITERATE:IN
;      '((STEENROD::JOIN-TWO '(:STEP 0 1) '(:STEP 0 1 0 1) '(:STEP 0))
;        (STEENROD::JOIN-TWO '(:STEP 0 1 0) '(:STEP 0 1 0) '(:STEP 0))
;        (STEENROD::JOIN-TWO '(:STEP (0 1 0 1)) '(:STEP (0 1)) '(:STEP (0)))))
; 
; caught STYLE-WARNING:
;   undefined function: FOR
; 
; caught WARNING:
;   undefined variable: IN
; 
; caught WARNING:
;   undefined variable: X
; 
; compilation unit finished
;   Undefined function:
;     FOR
;   Undefined variables:
;     IN X
;   caught 2 WARNING conditions
;   caught 1 STYLE-WARNING condition
STYLE-WARNING: redefining STEENROD::PERMUTE-STEP in DEFUN

STEENROD> (declaim #'(optimize (speed 0) (safety 3) (debug 3)))
; Evaluation aborted on #<SIMPLE-ERROR "Cannot proclaim TYPE of a non-symbol: ~S" {10041A5073}>.
STEENROD> (declaim '(optimize (speed 0) (safety 3) (debug 3)))
WARNING:
   unrecognized declaration '(OPTIMIZE (SPEED 0) (SAFETY 3) (DEBUG 3))
; No value
STEENROD> (declaim (optimize (speed 0) (safety 3) (debug 3)))
; No value
STEENROD> 
; No value
STEENROD> (ql:quickload :steenrod)
To load "steenrod":
  Load 1 ASDF system:
    steenrod
; Loading "steenrod"
[package steenrod].......
(:STEENROD)
; compiling (DEFUN JOIN-TWO ...)
STYLE-WARNING: redefining STEENROD::PERMUTE-STEP in DEFUN
STYLE-WARNING: redefining STEENROD::PERMUTE-STEP in DEFUN
STYLE-WARNING: redefining STEENROD::PERMUTE-STEP in DEFUN
STYLE-WARNING: redefining STEENROD::PERMUTE-STEP in DEFUN
STYLE-WARNING: redefining STEENROD::PERMUTE-STEP in DEFUN
STYLE-WARNING: redefining STEENROD::PERMUTE-STEP in DEFUN

STEENROD> *deg4*
((+ (:STEP (0 1 0 1 2))) (+ (:STEP (1 0 0 1 2)))
 (+ (:STEP (0 2 0 1 0)) (:STEP (0 1 2 1 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (1 2 1 0 0)) (:STEP (1 0 2 0 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (0 2 0 1 2)) (:STEP (0 1 2 1 2)))
 (+ (:STEP (1 2 1 0 2)) (:STEP (1 0 2 0 2))))
STEENROD> (permute '(0 1) '(0 1 2))
(1 0 2)
STEENROD> (permute '() '(0 1 2))
(0 1 2)
STEENROD> *deg3*
((:STEP (:STEP (0 1 0 2))) (:STEP ((0 1 0 2) :STEP)) (:STEP (:STEP NIL))
 (:STEP (:STEP (0 1 0 2))) (:STEP (:STEP NIL)) (:STEP (:STEP NIL))
 (:STEP (:STEP (1 0 0 2))) (:STEP ((1 0 0 2) :STEP)) (:STEP (:STEP NIL))
 (:STEP (:STEP (1 0 0 2))) (:STEP (:STEP NIL)) (:STEP (:STEP NIL))
 (:STEP (:STEP (0 2 0 1))) (:STEP ((0 2 0 1) :STEP)) (:STEP (:STEP NIL))
 (:STEP (:STEP (0 2 0 1))) (:STEP (:STEP NIL)) (:STEP (:STEP NIL))
 (:STEP (:STEP (1 2 1 0))) (:STEP ((1 2 1 0) :STEP)) (:STEP (:STEP NIL))
 (:STEP (:STEP (1 2 1 0))) (:STEP (:STEP NIL)) (:STEP (:STEP NIL)))
STYLE-WARNING: redefining STEENROD::S3-ACT in DEFUN
STEENROD> *pre-flip-deg3*
((+ (:STEP (0 1 0 2))) (+ (:STEP (1 0 0 2)))
 (+ (:STEP (0 2 0 1)) (:STEP (0 1 2 1)))
 (+ (:STEP (1 2 1 0)) (:STEP (1 0 2 0))))
STEENROD> (mapcar (partial #'permute () *pre-flip-deg3*))
; Evaluation aborted on #<SB-INT:SIMPLE-PROGRAM-ERROR "~S called with invalid number of arguments: ~S" {100827BAA3}>.
STEENROD> (mapcar (partial #'permute ()) *pre-flip-deg3*)
((+ (:STEP (0 1 0 2))) (+ (:STEP (1 0 0 2)))
 (+ (:STEP (0 2 0 1)) (:STEP (0 1 2 1)))
 (+ (:STEP (1 2 1 0)) (:STEP (1 0 2 0))))
STEENROD> (mapcar (partial #'permute (0 1)) *pre-flip-deg3*)
; in: MAPCAR (PARTIAL #'PERMUTE (0 1))
;     (0 1)
; 
; caught ERROR:
;   illegal function call
; 
; compilation unit finished
;   caught 1 ERROR condition
; Evaluation aborted on #<SB-INT:COMPILED-PROGRAM-ERROR {10085949B3}>.
STEENROD> (mapcar (partial #'permute '(0 1)) *pre-flip-deg3*)
(((:STEP (0 1 0 2)) +) ((:STEP (1 0 0 2)) +)
 ((:STEP (0 2 0 1)) + (:STEP (0 1 2 1)))
 ((:STEP (1 2 1 0)) + (:STEP (1 0 2 0))))
STEENROD> *deg3*
(((:STEP (:STEP (0 1 0 2))) (:STEP (:STEP (1 0 0 2))) (:STEP (:STEP (0 2 0 1)))
  (:STEP (:STEP (1 2 1 0))))
 ((:STEP ((0 1 0 2) :STEP)) (:STEP ((1 0 0 2) :STEP)) (:STEP ((0 2 0 1) :STEP))
  (:STEP ((1 2 1 0) :STEP)))
 ((:STEP (NIL (0 1 0 2))) (:STEP (NIL (1 0 0 2))) (:STEP (NIL (0 2 0 1)))
  (:STEP (NIL (1 2 1 0))))
 ((:STEP (:STEP NIL)) (:STEP (:STEP NIL)) (:STEP (:STEP NIL))
  (:STEP (:STEP NIL)))
 ((:STEP ((0 1 0 2) NIL)) (:STEP ((1 0 0 2) NIL)) (:STEP ((0 2 0 1) NIL))
  (:STEP ((1 2 1 0) NIL)))
 ((:STEP (NIL :STEP)) (:STEP (NIL :STEP)) (:STEP (NIL :STEP))
  (:STEP (NIL :STEP))))
STEENROD> (s3-act *pre-flip-deg3*)
(((:STEP (:STEP (0 1 0 2))) (:STEP (:STEP (1 0 0 2))) (:STEP (:STEP (0 2 0 1)))
  (:STEP (:STEP (1 2 1 0))))
 ((:STEP ((0 1 0 2) :STEP)) (:STEP ((1 0 0 2) :STEP)) (:STEP ((0 2 0 1) :STEP))
  (:STEP ((1 2 1 0) :STEP)))
 ((:STEP (NIL (0 1 0 2))) (:STEP (NIL (1 0 0 2))) (:STEP (NIL (0 2 0 1)))
  (:STEP (NIL (1 2 1 0))))
 ((:STEP (:STEP NIL)) (:STEP (:STEP NIL)) (:STEP (:STEP NIL))
  (:STEP (:STEP NIL)))
 ((:STEP ((0 1 0 2) NIL)) (:STEP ((1 0 0 2) NIL)) (:STEP ((0 2 0 1) NIL))
  (:STEP ((1 2 1 0) NIL)))
 ((:STEP (NIL :STEP)) (:STEP (NIL :STEP)) (:STEP (NIL :STEP))
  (:STEP (NIL :STEP))))
STEENROD> *s3*
(NIL (0 1) (0 2) (1 2) (0 1 2) (0 2 1))
STEENROD> (mapcar (partial #'permute '(0 1 2)) *pre-flip-deg3*)
(((:STEP (0 1 0 2)) NIL) ((:STEP (1 0 0 2)) NIL)
 ((:STEP (0 2 0 1)) (:STEP (0 1 2 1)) +)
 ((:STEP (1 2 1 0)) (:STEP (1 0 2 0)) +))
STEENROD> (mapcar (partial #'PERMUTE-STEP '(0 1 2)) *pre-flip-deg3*)
((:STEP ((0 1 0 2) NIL)) (:STEP ((1 0 0 2) NIL)) (:STEP ((0 2 0 1) NIL))
 (:STEP ((1 2 1 0) NIL)))
STEENROD> (mapcar (partial #'PERMUTE-STEP '()) *pre-flip-deg3*)
((:STEP (:STEP (0 1 0 2))) (:STEP (:STEP (1 0 0 2))) (:STEP (:STEP (0 2 0 1)))
 (:STEP (:STEP (1 2 1 0))))
STEENROD> *pre-flip-deg3*
((+ (:STEP (0 1 0 2))) (+ (:STEP (1 0 0 2)))
 (+ (:STEP (0 2 0 1)) (:STEP (0 1 2 1)))
 (+ (:STEP (1 2 1 0)) (:STEP (1 0 2 0))))
; compiling (DEFUN PERMUTE-STEP ...)

; file: /tmp/filexfd0Wd
; in: DEFUN PERMUTE-STEP
;     (STEENROD::CALL
;      (LAMBDA (STEENROD::PERM-TERM)
;        (STEENROD::CALL (LAMBDA (STEENROD::STEP-TERM))
;                        (LIST :STEP (STEENROD::PERM STEENROD::PERMUTATION #)))))
; 
; caught STYLE-WARNING:
;   The function was called with one argument, but wants exactly two.

;     (DEFUN STEENROD::PERMUTE-STEP (STEENROD::PERMUTATION STEP)
;       (STEENROD::CALL
;        (LAMBDA (STEENROD::PERM-TERM) (STEENROD::CALL (LAMBDA #) (LIST :STEP #)))))
; --> PROGN 
; ==>
;   (SB-IMPL::%DEFUN 'STEENROD::PERMUTE-STEP
;                    (SB-INT:NAMED-LAMBDA STEENROD::PERMUTE-STEP
;                        (STEENROD::PERMUTATION STEP)
;                      (BLOCK STEENROD::PERMUTE-STEP
;                        (STEENROD::CALL (LAMBDA # #))))
;                    NIL 'NIL (SB-C:SOURCE-LOCATION))
; 
; caught STYLE-WARNING:
;   The variable STEP is defined but never used.

;     (LAMBDA (STEENROD::PERM-TERM)
;       (STEENROD::CALL (LAMBDA (STEENROD::STEP-TERM))
;                       (LIST :STEP
;                             (STEENROD::PERM STEENROD::PERMUTATION
;                              (SECOND STEENROD::STEP-TERM)))))
; ==>
;   #'(LAMBDA (STEENROD::PERM-TERM)
;       (STEENROD::CALL (LAMBDA (STEENROD::STEP-TERM))
;                       (LIST :STEP
;                             (STEENROD::PERM STEENROD::PERMUTATION
;                              (SECOND STEENROD::STEP-TERM)))))
; 
; caught STYLE-WARNING:
;   The variable PERM-TERM is defined but never used.

;     (LAMBDA (STEENROD::STEP-TERM))
; ==>
;   #'(LAMBDA (STEENROD::STEP-TERM))
; 
; caught STYLE-WARNING:
;   The variable STEP-TERM is defined but never used.

;     (STEENROD::PERM STEENROD::PERMUTATION (SECOND STEENROD::STEP-TERM))
; 
; caught STYLE-WARNING:
;   undefined function: PERM

;     (SECOND STEENROD::STEP-TERM)
; --> CADR CAR 
; ==>
;   (CDR STEENROD::STEP-TERM)
; 
; caught WARNING:
;   undefined variable: STEP-TERM
; 
; compilation unit finished
;   Undefined function:
;     PERM
;   Undefined variable:
;     STEP-TERM
;   caught 1 WARNING condition
;   caught 5 STYLE-WARNING conditions
STYLE-WARNING: redefining STEENROD::PERMUTE-STEP in DEFUN
; in: DEFUN PERMUTE-STEP
;     (STEENROD::CALL
;      (LAMBDA (STEENROD::PERM-TERM)
;        (STEENROD::CALL (LAMBDA (STEENROD::STEP-TERM))
;                        (LIST :STEP
;                              (STEENROD::PERM-TERM STEENROD::PERMUTATION #)))))
; 
; caught STYLE-WARNING:
;   The function was called with one argument, but wants exactly two.

;     (SB-INT:NAMED-LAMBDA STEENROD::PERMUTE-STEP
;         (STEENROD::PERMUTATION STEP)
;       (BLOCK STEENROD::PERMUTE-STEP
;         (STEENROD::CALL (LAMBDA (STEENROD::PERM-TERM) (STEENROD::CALL # #)))))
; 
; caught STYLE-WARNING:
;   The variable STEP is defined but never used.

;     (LAMBDA (STEENROD::PERM-TERM)
;       (STEENROD::CALL (LAMBDA (STEENROD::STEP-TERM))
;                       (LIST :STEP
;                             (STEENROD::PERM-TERM STEENROD::PERMUTATION
;                              (SECOND STEENROD::STEP-TERM)))))
; ==>
;   #'(LAMBDA (STEENROD::PERM-TERM)
;       (STEENROD::CALL (LAMBDA (STEENROD::STEP-TERM))
;                       (LIST :STEP
;                             (STEENROD::PERM-TERM STEENROD::PERMUTATION
;                              (SECOND STEENROD::STEP-TERM)))))
; 
; caught STYLE-WARNING:
;   The variable PERM-TERM is defined but never used.

;     (LAMBDA (STEENROD::STEP-TERM))
; ==>
;   #'(LAMBDA (STEENROD::STEP-TERM))
; 
; caught STYLE-WARNING:
;   The variable STEP-TERM is defined but never used.

;     (STEENROD::PERM-TERM STEENROD::PERMUTATION (SECOND STEENROD::STEP-TERM))
; 
; caught STYLE-WARNING:
;   undefined function: PERM-TERM

;     (SECOND STEENROD::STEP-TERM)
; --> CADR CAR 
; ==>
;   (CDR STEENROD::STEP-TERM)
; 
; caught WARNING:
;   undefined variable: STEP-TERM
; 
; compilation unit finished
;   Undefined function:
;     PERM-TERM
;   Undefined variable:
;     STEP-TERM
;   caught 1 WARNING condition
;   caught 5 STYLE-WARNING conditions
STYLE-WARNING: redefining STEENROD::PERMUTE-STEP in DEFUN
; compiling (DEFUN PERMUTE-STEP ...)

; file: /tmp/fileE2gq2h
; in: DEFUN PERMUTE-STEP
;     (STEENROD::CALL
;      (LAMBDA (STEENROD::PERM-TERM)
;        (STEENROD::CALL (LAMBDA (STEENROD::STEP-TERM))
;                        (LIST :STEP
;                              (STEENROD::PERM-TERM STEENROD::PERMUTATION #)))))
; 
; caught STYLE-WARNING:
;   The function was called with one argument, but wants exactly two.

;     (DEFUN STEENROD::PERMUTE-STEP (STEENROD::PERMUTATION STEP)
;       (STEENROD::CALL
;        (LAMBDA (STEENROD::PERM-TERM) (STEENROD::CALL (LAMBDA #) (LIST :STEP #)))))
; --> PROGN 
; ==>
;   (SB-IMPL::%DEFUN 'STEENROD::PERMUTE-STEP
;                    (SB-INT:NAMED-LAMBDA STEENROD::PERMUTE-STEP
;                        (STEENROD::PERMUTATION STEP)
;                      (BLOCK STEENROD::PERMUTE-STEP
;                        (STEENROD::CALL (LAMBDA # #))))
;                    NIL 'NIL (SB-C:SOURCE-LOCATION))
; 
; caught STYLE-WARNING:
;   The variable STEP is defined but never used.

;     (LAMBDA (STEENROD::PERM-TERM)
;       (STEENROD::CALL (LAMBDA (STEENROD::STEP-TERM))
;                       (LIST :STEP
;                             (STEENROD::PERM-TERM STEENROD::PERMUTATION
;                              (SECOND STEENROD::STEP-TERM)))))
; ==>
;   #'(LAMBDA (STEENROD::PERM-TERM)
;       (STEENROD::CALL (LAMBDA (STEENROD::STEP-TERM))
;                       (LIST :STEP
;                             (STEENROD::PERM-TERM STEENROD::PERMUTATION
;                              (SECOND STEENROD::STEP-TERM)))))
; 
; caught STYLE-WARNING:
;   The variable PERM-TERM is defined but never used.

;     (LAMBDA (STEENROD::STEP-TERM))
; ==>
;   #'(LAMBDA (STEENROD::STEP-TERM))
; 
; caught STYLE-WARNING:
;   The variable STEP-TERM is defined but never used.

;     (STEENROD::PERM-TERM STEENROD::PERMUTATION (SECOND STEENROD::STEP-TERM))
; 
; caught STYLE-WARNING:
;   undefined function: PERM-TERM

;     (SECOND STEENROD::STEP-TERM)
; --> CADR CAR 
; ==>
;   (CDR STEENROD::STEP-TERM)
; 
; caught WARNING:
;   undefined variable: STEP-TERM
; 
; compilation unit finished
;   Undefined function:
;     PERM-TERM
;   Undefined variable:
;     STEP-TERM
;   caught 1 WARNING condition
;   caught 5 STYLE-WARNING conditions
STYLE-WARNING: redefining STEENROD::PERMUTE-STEP in DEFUN
; compiling (DEFUN PERMUTE-STEP ...)

; file: /tmp/filedSaCRq
; in: DEFUN PERMUTE-STEP
;     (LAMBDA (STEENROD::PERM-TERM)
;       (STEENROD::CALL
;        (LAMBDA (STEENROD::STEP-TERM)
;          (LIST :STEP (STEENROD::PERM-TERM STEENROD::PERMUTATION #)))
;        STEP))
; ==>
;   #'(LAMBDA (STEENROD::PERM-TERM)
;       (STEENROD::CALL
;        (LAMBDA (STEENROD::STEP-TERM)
;          (LIST :STEP (STEENROD::PERM-TERM STEENROD::PERMUTATION #)))
;        STEP))
; 
; caught STYLE-WARNING:
;   The variable PERM-TERM is defined but never used.

;     (STEENROD::PERM-TERM STEENROD::PERMUTATION (SECOND STEENROD::STEP-TERM))
; 
; caught STYLE-WARNING:
;   undefined function: PERM-TERM
; 
; compilation unit finished
;   Undefined function:
;     PERM-TERM
;   caught 2 STYLE-WARNING conditions
; compiling (DEFUN PERMUTE-STEP ...)
STEENROD> (mapcar (partial #'PERMUTE-STEP '()) *pre-flip-deg3*)
; in: DEFUN PERMUTE-STEP
;     (FLET (STEENROD::PRM-STEP-MORPH
;            (STEENROD::P)
;            (STEENROD::CALL
;                (STEENROD::PARTIAL (FUNCTION STEENROD::PERMUTE-STEP-BASIS)
;                 STEENROD::P)
;              STEP))
;       (STEENROD::CALL #'STEENROD::PRM-STEP-MORPH STEENROD::PERM))
; 
; caught ERROR:
;   The FLET definition spec PRM-STEP-MORPH is malformed.

;     (SB-INT:NAMED-LAMBDA STEENROD::PERMUTE-STEP
;         (STEENROD::PERM STEP)
;       (BLOCK STEENROD::PERMUTE-STEP
;         (FLET (STEENROD::PRM-STEP-MORPH
;                (STEENROD::P)
;                (STEENROD::CALL #
;                  STEP))
;           (STEENROD::CALL #'STEENROD::PRM-STEP-MORPH STEENROD::PERM))))
; 
; caught STYLE-WARNING:
;   The variable PERM is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable STEP is defined but never used.
; 
; compilation unit finished
;   caught 1 ERROR condition
;   caught 2 STYLE-WARNING conditions
STYLE-WARNING: redefining STEENROD::PERMUTE-STEP in DEFUN
; compiling (DEFUN PERMUTE-STEP ...)

; file: /tmp/fileUgX2Wa
; in: DEFUN PERMUTE-STEP
;     (FLET (STEENROD::PRM-STEP-MORPH
;            (STEENROD::P)
;            (STEENROD::CALL
;                (STEENROD::PARTIAL (FUNCTION STEENROD::PERMUTE-STEP-BASIS)
;                 STEENROD::P)
;              STEP))
;       (STEENROD::CALL #'STEENROD::PRM-STEP-MORPH STEENROD::PERM))
; 
; caught ERROR:
;   The FLET definition spec PRM-STEP-MORPH is malformed.

;     (DEFUN STEENROD::PERMUTE-STEP (STEENROD::PERM STEP)
;       (FLET (STEENROD::PRM-STEP-MORPH
;              (STEENROD::P)
;              (STEENROD::CALL (STEENROD::PARTIAL # STEENROD::P)
;                STEP))
;         (STEENROD::CALL #'STEENROD::PRM-STEP-MORPH STEENROD::PERM)))
; --> PROGN 
; ==>
;   (SB-IMPL::%DEFUN 'STEENROD::PERMUTE-STEP
;                    (SB-INT:NAMED-LAMBDA STEENROD::PERMUTE-STEP
;                        (STEENROD::PERM STEP)
;                      (BLOCK STEENROD::PERMUTE-STEP
;                        (FLET (STEENROD::PRM-STEP-MORPH # #)
;                          (STEENROD::CALL #'STEENROD::PRM-STEP-MORPH
;                                          STEENROD::PERM))))
;                    NIL 'NIL (SB-C:SOURCE-LOCATION))
; 
; caught STYLE-WARNING:
;   The variable PERM is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable STEP is defined but never used.
; 
; compilation unit finished
;   caught 1 ERROR condition
;   caught 2 STYLE-WARNING conditions
STYLE-WARNING: redefining STEENROD::PERMUTE-STEP in DEFUN

;     #'STEENROD::PERMUTE-STEP-BASIS
; 
; caught STYLE-WARNING:
;   undefined function: PERMUTE-STEP-BASIS
; 
; compilation unit finished
;   Undefined function:
;     PERMUTE-STEP-BASIS
;   caught 1 STYLE-WARNING condition
STYLE-WARNING: redefining STEENROD::PERMUTE-STEP in DEFUN
; compiling (DEFUN PERMUTE-STEP ...)

; file: /tmp/filekxm7dB
; in: DEFUN PERMUTE-STEP
;     #'STEENROD::PERMUTE-STEP-BASIS
; 
; caught STYLE-WARNING:
;   undefined function: PERMUTE-STEP-BASIS
; 
; compilation unit finished
;   Undefined function:
;     PERMUTE-STEP-BASIS
;   caught 1 STYLE-WARNING condition
STYLE-WARNING: redefining STEENROD::PERMUTE-STEP in DEFUN
; compiling (DEFUN PERMUTE-STEP ...)

; file: /tmp/filefiXMUd
; in: DEFUN PERMUTE-STEP
;     #'STEENROD::PERMUTE-STEP-BASIS
; 
; caught STYLE-WARNING:
;   undefined function: PERMUTE-STEP-BASIS
; 
; compilation unit finished
;   Undefined function:
;     PERMUTE-STEP-BASIS
;   caught 1 STYLE-WARNING condition
; Evaluation aborted on #<TYPE-ERROR expected-type: LIST datum: 1>.
STEENROD> (mapcar (partial #'PERMUTE-STEP '()) *pre-flip-deg3*)
; compiling (DEFUN PERMUTE-STEP-BASIS ...)

; file: /tmp/fileMAlmJp
; in: DEFUN PERMUTE-STEP-BASIS
;     (DEFUN STEENROD::PERMUTE-STEP-BASIS (STEENROD::PERMUTATION STEP)
;       (LIST :STEP
;             (STEENROD::PERMUTE-STEP STEENROD::PERM-TERM
;                                     (SECOND STEENROD::STEP-TERM))))
; --> PROGN 
; ==>
;   (SB-IMPL::%DEFUN 'STEENROD::PERMUTE-STEP-BASIS
;                    (SB-INT:NAMED-LAMBDA STEENROD::PERMUTE-STEP-BASIS
;                        (STEENROD::PERMUTATION STEP)
;                      (BLOCK STEENROD::PERMUTE-STEP-BASIS
;                        (LIST :STEP
;                              (STEENROD::PERMUTE-STEP STEENROD::PERM-TERM #))))
;                    NIL 'NIL (SB-C:SOURCE-LOCATION))
; 
; caught STYLE-WARNING:
;   The variable PERMUTATION is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable STEP is defined but never used.

;     (STEENROD::PERMUTE-STEP STEENROD::PERM-TERM (SECOND STEENROD::STEP-TERM))
; 
; caught WARNING:
;   undefined variable: PERM-TERM

;     (SECOND STEENROD::STEP-TERM)
; --> CADR CAR 
; ==>
;   (CDR STEENROD::STEP-TERM)
; 
; caught WARNING:
;   undefined variable: STEP-TERM
; 
; compilation unit finished
;   Undefined variables:
;     PERM-TERM STEP-TERM
;   caught 2 WARNING conditions
;   caught 2 STYLE-WARNING conditions
; compiling (DEFUN PERMUTE-STEP-BASIS ...)
; compiling (DEFUN PERMUTE-STEP ...)
; compiling (PERMUTE-STEP (QUOTE #) ...)
; compiling (PERMUTE-STEP-BASIS (QUOTE #) ...)
; compiling (DEFUN PERMUTE-STEP-BASIS ...)
; compiling (PERMUTE-STEP (QUOTE #) ...)
; in: DEFUN S3-ACT
;     (STEENROD::MAPCAT
;      (LAMBDA (STEENROD::PERM)
;        (MAPCAR (LAMBDA (STEP) (STEENROD::PERMUTE-STEP STEENROD::PERM STEP))
;                STEENROD::STEPS))
;      STEENROD::*S3*)
; 
; caught STYLE-WARNING:
;   undefined function: MAPCAT
; 
; compilation unit finished
;   Undefined function:
;     MAPCAT
;   caught 1 STYLE-WARNING condition
STYLE-WARNING: redefining STEENROD::S3-ACT in DEFUN
STYLE-WARNING: redefining STEENROD::S3-ACT in DEFUN
; Evaluation aborted on #<UNDEFINED-FUNCTION PERMUTE-STEP-BASIS {1006A95533}>.
STEENROD> *deg3*
((:STEP (0 1 0 2)) (:STEP (1 0 0 2)) (+ (:STEP (0 2 0 1)) (:STEP (0 1 2 1)))
 (+ (:STEP (1 2 1 0)) (:STEP (1 0 2 0))) (:STEP (1 0 0 2)) (:STEP (0 1 0 2))
 (+ (:STEP (2 0 0 1)) (:STEP (1 0 2 1)))
 (+ (:STEP (2 1 1 0)) (:STEP (0 1 2 0))) (:STEP (0 1 0 2)) (:STEP (0 0 1 2))
 (+ (:STEP (0 2 0 1)) (:STEP (2 1 0 1)))
 (+ (:STEP (1 2 1 0)) (:STEP (2 0 1 0))) (:STEP (0 0 1 2)) (:STEP (1 0 0 2))
 (+ (:STEP (0 0 2 1)) (:STEP (0 2 1 1)))
 (+ (:STEP (1 1 2 0)) (:STEP (1 2 0 0))) (:STEP (1 0 0 2)) (:STEP (0 0 1 2))
 (+ (:STEP (2 0 0 1)) (:STEP (1 2 0 1)))
 (+ (:STEP (2 1 1 0)) (:STEP (0 2 1 0))) (:STEP (0 0 1 2)) (:STEP (0 1 0 2))
 (+ (:STEP (0 0 2 1)) (:STEP (2 0 1 1)))
 (+ (:STEP (1 1 2 0)) (:STEP (2 1 0 0))))
STEENROD> *deg4*
((:STEP (0 1 0 1 2)) (:STEP (1 0 0 1 2))
 (+ (:STEP (0 2 0 1 0)) (:STEP (0 1 2 1 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (1 2 1 0 0)) (:STEP (1 0 2 0 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (0 2 0 1 2)) (:STEP (0 1 2 1 2)))
 (+ (:STEP (1 2 1 0 2)) (:STEP (1 0 2 0 2))) (:STEP (1 0 0 1 2))
 (:STEP (0 1 0 1 2))
 (+ (:STEP (2 0 0 1 0)) (:STEP (1 0 2 1 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (2 1 1 0 0)) (:STEP (0 1 2 0 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (2 0 0 1 2)) (:STEP (1 0 2 1 2)))
 (+ (:STEP (2 1 1 0 2)) (:STEP (0 1 2 0 2))) (:STEP (0 1 0 1 2))
 (:STEP (0 0 1 1 2))
 (+ (:STEP (0 2 0 1 0)) (:STEP (2 1 0 1 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (1 2 1 0 0)) (:STEP (2 0 1 0 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (0 2 0 1 2)) (:STEP (2 1 0 1 2)))
 (+ (:STEP (1 2 1 0 2)) (:STEP (2 0 1 0 2))) (:STEP (0 0 1 1 2))
 (:STEP (1 0 0 1 2))
 (+ (:STEP (0 0 2 1 0)) (:STEP (0 2 1 1 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (1 1 2 0 0)) (:STEP (1 2 0 0 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (0 0 2 1 2)) (:STEP (0 2 1 1 2)))
 (+ (:STEP (1 1 2 0 2)) (:STEP (1 2 0 0 2))) (:STEP (1 0 0 1 2))
 (:STEP (0 0 1 1 2))
 (+ (:STEP (2 0 0 1 0)) (:STEP (1 2 0 1 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (2 1 1 0 0)) (:STEP (0 2 1 0 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (2 0 0 1 2)) (:STEP (1 2 0 1 2)))
 (+ (:STEP (2 1 1 0 2)) (:STEP (0 2 1 0 2))) (:STEP (0 0 1 1 2))
 (:STEP (0 1 0 1 2))
 (+ (:STEP (0 0 2 1 0)) (:STEP (2 0 1 1 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (1 1 2 0 0)) (:STEP (2 1 0 0 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (0 0 2 1 2)) (:STEP (2 0 1 1 2)))
 (+ (:STEP (1 1 2 0 2)) (:STEP (2 1 0 0 2))))
STEENROD> *bdd*
((+ (:STEP 1 0 1 2) (:STEP 0 1 0 2) (:STEP 0 1 0 1))
 (+ (:STEP 0 0 1 2) (:STEP 1 0 0 2) (:STEP 1 0 0 1))
 (+ (:STEP 2 0 1 0) (:STEP 0 2 0 1) (:STEP 1 2 1 0) (:STEP 0 1 2 1)
    (:STEP 1 0 2 0) (:STEP 0 1 0 2))
 (+ (:STEP 2 1 0 0) (:STEP 0 2 0 0) (:STEP 0 0 2 0) (:STEP 1 0 0 2))
 (+ (:STEP 2 0 1 2) (:STEP 0 2 0 2) (:STEP 0 2 0 1) (:STEP 1 2 1 2)
    (:STEP 0 1 2 1))
 (+ (:STEP 2 1 0 2) (:STEP 1 2 1 2) (:STEP 1 2 1 0) (:STEP 0 2 0 2)
    (:STEP 1 0 2 0))
 (+ (:STEP 0 0 1 2) (:STEP 1 0 0 2) (:STEP 1 0 0 1))
 (+ (:STEP 1 0 1 2) (:STEP 0 1 0 2) (:STEP 0 1 0 1))
 (+ (:STEP 0 0 1 0) (:STEP 2 0 0 1) (:STEP 0 2 1 0) (:STEP 1 2 1 0)
    (:STEP 1 0 1 0) (:STEP 1 0 2 0) (:STEP 1 0 2 1) (:STEP 0 0 2 0)
    (:STEP 1 0 0 2))
 (+ (:STEP 1 1 0 0) (:STEP 1 2 0 0) (:STEP 0 2 0 0) (:STEP 0 1 0 0)
    (:STEP 0 1 2 0) (:STEP 1 0 2 0) (:STEP 0 1 0 2))
 (+ (:STEP 0 0 1 2) (:STEP 2 0 0 2) (:STEP 2 0 0 1) (:STEP 0 2 1 2)
    (:STEP 1 2 1 2) (:STEP 1 0 1 2) (:STEP 1 0 2 1))
 (+ (:STEP 1 1 0 2) (:STEP 2 1 1 2) (:STEP 2 1 1 0) (:STEP 1 2 0 2)
    (:STEP 0 2 0 2) (:STEP 0 1 0 2) (:STEP 0 1 2 0))
 (+ (:STEP 1 0 1 2) (:STEP 0 1 0 2) (:STEP 0 1 0 1)) (:STEP 0 0 1 1)
 (+ (:STEP 0 2 1 0) (:STEP 0 2 0 1) (:STEP 1 0 1 0) (:STEP 2 1 0 1)
    (:STEP 1 0 2 0) (:STEP 0 1 2 0) (:STEP 0 1 0 2))
 (+ (:STEP 1 2 0 0) (:STEP 0 1 0 0) (:STEP 0 0 2 0) (:STEP 0 0 1 0)
    (:STEP 0 0 1 2))
 (+ (:STEP 0 2 1 2) (:STEP 0 2 0 2) (:STEP 0 2 0 1) (:STEP 1 0 1 2)
    (:STEP 2 1 0 2) (:STEP 2 1 0 1))
 (+ (:STEP 1 2 0 2) (:STEP 1 2 1 2) (:STEP 1 2 1 0) (:STEP 0 1 0 2)
    (:STEP 2 0 1 2) (:STEP 2 0 1 0))
 (:STEP 0 0 1 1) (+ (:STEP 0 0 1 2) (:STEP 1 0 0 2) (:STEP 1 0 0 1))
 (+ (:STEP 0 0 2 1) (:STEP 2 1 1 0) (:STEP 0 1 1 0) (:STEP 0 2 1 1)
    (:STEP 0 0 1 2))
 (+ (:STEP 1 1 0 0) (:STEP 2 0 0 0) (:STEP 1 0 0 0) (:STEP 0 0 2 0)
    (:STEP 1 0 0 2))
 (+ (:STEP 0 0 1 2) (:STEP 0 0 2 1) (:STEP 2 1 1 2) (:STEP 0 1 1 2)
    (:STEP 0 2 1 1))
 (+ (:STEP 1 1 0 2) (:STEP 1 1 2 0) (:STEP 2 0 0 2) (:STEP 1 0 0 2)
    (:STEP 1 2 0 0))
 (+ (:STEP 0 0 1 2) (:STEP 1 0 0 2) (:STEP 1 0 0 1)) (:STEP 0 0 1 1)
 (+ (:STEP 0 0 1 0) (:STEP 2 0 1 0) (:STEP 2 0 0 1) (:STEP 1 0 1 0)
    (:STEP 1 2 1 0) (:STEP 1 2 0 1) (:STEP 0 0 2 0) (:STEP 1 0 0 2))
 (+ (:STEP 1 1 0 0) (:STEP 2 1 0 0) (:STEP 0 1 0 0) (:STEP 0 2 0 0)
    (:STEP 0 0 2 0) (:STEP 0 0 1 0) (:STEP 0 0 1 2))
 (+ (:STEP 0 0 1 2) (:STEP 2 0 1 2) (:STEP 2 0 0 2) (:STEP 2 0 0 1)
    (:STEP 1 0 1 2) (:STEP 1 2 1 2) (:STEP 1 2 0 2) (:STEP 1 2 0 1))
 (+ (:STEP 1 1 0 2) (:STEP 2 1 0 2) (:STEP 2 1 1 2) (:STEP 2 1 1 0)
    (:STEP 0 1 0 2) (:STEP 0 2 0 2) (:STEP 0 2 1 2) (:STEP 0 2 1 0))
 (:STEP 0 0 1 1) (+ (:STEP 1 0 1 2) (:STEP 0 1 0 2) (:STEP 0 1 0 1))
 (+ (:STEP 0 0 2 1) (:STEP 0 1 1 0) (:STEP 2 1 1 0) (:STEP 2 0 1 1)
    (:STEP 0 0 1 2))
 (+ (:STEP 1 1 0 0) (:STEP 1 0 0 0) (:STEP 2 0 0 0) (:STEP 1 0 2 0)
    (:STEP 0 1 2 0) (:STEP 0 1 0 2))
 (+ (:STEP 0 0 1 2) (:STEP 0 0 2 1) (:STEP 0 1 1 2) (:STEP 2 1 1 2)
    (:STEP 2 0 1 1))
 (+ (:STEP 1 1 0 2) (:STEP 1 1 2 0) (:STEP 1 0 0 2) (:STEP 2 0 0 2)
    (:STEP 2 1 0 0)))
; in: DEFUN GET-LEAVES
;     (OPTIMA:MATCH EXP
;       ((LIST* '+ STEENROD::_ STEENROD::ARGS)
;        (MAPCAN #'STEENROD::OPTREE-LEAVES STEENROD::ARGS))
;       ((LIST* :STEP STEENROD::_) (LIST EXP))
;       (LIST* STEENROD::STUFF)
;       (STEENROD::GET-LEAVES (CONS '+ EXP)))
; --> OPTIMA::%OR BLOCK TAGBODY RETURN-FROM OPTIMA::%OR BLOCK TAGBODY 
; --> RETURN-FROM SYMBOL-MACROLET OPTIMA::%OR BLOCK TAGBODY RETURN-FROM 
; --> SYMBOL-MACROLET 
; ==>
;   (LET ((LIST* EXP))
;     STEENROD::STUFF)
; 
; caught STYLE-WARNING:
;   The variable LIST* is defined but never used.

; in: DEFUN GET-LEAVES
;     (OPTIMA:MATCH EXP
;       ((LIST* '+ STEENROD::_ STEENROD::ARGS)
;        (MAPCAN #'STEENROD::OPTREE-LEAVES STEENROD::ARGS))
;       ((LIST* :STEP STEENROD::_) (LIST EXP))
;       (LIST* STEENROD::STUFF)
;       (STEENROD::GET-LEAVES (CONS '+ EXP)))
; --> OPTIMA::%OR BLOCK TAGBODY RETURN-FROM OPTIMA::%OR BLOCK TAGBODY 
; --> RETURN-FROM SYMBOL-MACROLET OPTIMA::%OR BLOCK TAGBODY RETURN-FROM 
; --> SYMBOL-MACROLET 
; ==>
;   (LET ((LIST* EXP))
;     STEENROD::STUFF)
; 
; caught WARNING:
;   undefined variable: STUFF
; 
; compilation unit finished
;   Undefined variable:
;     STUFF
;   caught 1 WARNING condition
;   caught 1 STYLE-WARNING condition
; compiling (DEFUN GET-LEAVES ...)

; file: /tmp/fileCu4Y0S
; in: DEFUN GET-LEAVES
;     (OPTIMA:MATCH EXP
;       ((LIST* '+ STEENROD::_ STEENROD::ARGS)
;        (MAPCAN #'STEENROD::OPTREE-LEAVES STEENROD::ARGS))
;       ((LIST* :STEP STEENROD::_) (LIST EXP))
;       ((LIST* STEENROD::STUFF))
;       (STEENROD::GET-LEAVES (CONS '+ EXP)))
; --> OPTIMA::%OR BLOCK TAGBODY RETURN-FROM OPTIMA::%OR BLOCK TAGBODY 
; --> RETURN-FROM SYMBOL-MACROLET OPTIMA::%OR BLOCK TAGBODY RETURN-FROM 
; --> SYMBOL-MACROLET LET 
; ==>
;   (LET ((STEENROD::STUFF EXP))
;     (IF (AND (TYPEP #:IT2 'LIST))
;         NIL
;         (OPTIMA:FAIL)))
; 
; caught STYLE-WARNING:
;   The variable STUFF is defined but never used.

; --> OPTIMA::%OR BLOCK TAGBODY RETURN-FROM OPTIMA::%OR BLOCK TAGBODY 
; --> RETURN-FROM SYMBOL-MACROLET OPTIMA::%OR BLOCK TAGBODY RETURN-FROM 
; ==>
;   (LET ((STEENROD::GET-LEAVES EXP))
;     (CONS '+ EXP))
; 
; caught STYLE-WARNING:
;   The variable GET-LEAVES is defined but never used.
; 
; compilation unit finished
;   caught 2 STYLE-WARNING conditions
STYLE-WARNING: redefining STEENROD::GET-LEAVES in DEFUN
; compiling (DEFUN GET-LEAVES ...)

; file: /tmp/file8yG6vL
; in: DEFUN GET-LEAVES
;     (OPTIMA:MATCH EXP
;       ((LIST* '+ STEENROD::_ STEENROD::ARGS)
;        (MAPCAN #'STEENROD::GET-LEAVES STEENROD::ARGS))
;       ((LIST* :STEP STEENROD::_) (LIST EXP))
;       ((LIST* STEENROD::STUFF))
;       (STEENROD::GET-LEAVES (CONS '+ EXP)))
; --> OPTIMA::%OR BLOCK TAGBODY RETURN-FROM OPTIMA::%OR BLOCK TAGBODY 
; --> RETURN-FROM SYMBOL-MACROLET OPTIMA::%OR BLOCK TAGBODY RETURN-FROM 
; --> SYMBOL-MACROLET LET 
; ==>
;   (LET ((STEENROD::STUFF EXP))
;     (IF (AND (TYPEP #:IT2 'LIST))
;         NIL
;         (OPTIMA:FAIL)))
; 
; caught STYLE-WARNING:
;   The variable STUFF is defined but never used.

; --> OPTIMA::%OR BLOCK TAGBODY RETURN-FROM OPTIMA::%OR BLOCK TAGBODY 
; --> RETURN-FROM SYMBOL-MACROLET OPTIMA::%OR BLOCK TAGBODY RETURN-FROM 
; ==>
;   (LET ((STEENROD::GET-LEAVES EXP))
;     (CONS '+ EXP))
; 
; caught STYLE-WARNING:
;   The variable GET-LEAVES is defined but never used.
; 
; compilation unit finished
;   caught 2 STYLE-WARNING conditions
; compiling (DEFUN GET-LEAVES ...)

; file: /tmp/file1MvDPW
; in: DEFUN GET-LEAVES
;     (OPTIMA:MATCH EXP
;       ((LIST* '+ STEENROD::_ STEENROD::ARGS)
;        (MAPCAN #'STEENROD::GET-LEAVES STEENROD::ARGS))
;       ((LIST* :STEP STEENROD::_) (LIST EXP))
;       ((LIST* STEENROD::STUFF))
;       (STEENROD::GET-LEAVES (CONS '+ EXP)))
; --> OPTIMA::%OR BLOCK TAGBODY RETURN-FROM OPTIMA::%OR BLOCK TAGBODY 
; --> RETURN-FROM SYMBOL-MACROLET OPTIMA::%OR BLOCK TAGBODY RETURN-FROM 
; --> SYMBOL-MACROLET LET 
; ==>
;   (LET ((STEENROD::STUFF EXP))
;     (IF (AND (TYPEP #:IT2 'LIST))
;         NIL
;         (OPTIMA:FAIL)))
; 
; caught STYLE-WARNING:
;   The variable STUFF is defined but never used.

; --> OPTIMA::%OR BLOCK TAGBODY RETURN-FROM OPTIMA::%OR BLOCK TAGBODY 
; --> RETURN-FROM SYMBOL-MACROLET OPTIMA::%OR BLOCK TAGBODY RETURN-FROM 
; ==>
;   (LET ((STEENROD::GET-LEAVES EXP))
;     (CONS '+ EXP))
; 
; caught STYLE-WARNING:
;   The variable GET-LEAVES is defined but never used.
; 
; compilation unit finished
;   caught 2 STYLE-WARNING conditions

STEENROD> 
; No value
STEENROD> 
; No value
STEENROD> 
; No value; compiling (DEFUN GET-LEAVES ...)

; file: /tmp/fileDlMi4k
; in: DEFUN GET-LEAVES
;     (OPTIMA:MATCH EXP
;       ((LIST* '+ STEENROD::_ STEENROD::ARGS)
;        (MAPCAN #'STEENROD::GET-LEAVES STEENROD::ARGS))
;       ((LIST* :STEP STEENROD::_) (LIST EXP))
;       ((LIST* STEENROD::STUFF))
;       (STEENROD::GET-LEAVES (CONS '+ EXP)))
; --> OPTIMA::%OR BLOCK TAGBODY RETURN-FROM OPTIMA::%OR BLOCK TAGBODY 
; --> RETURN-FROM SYMBOL-MACROLET OPTIMA::%OR BLOCK TAGBODY RETURN-FROM 
; --> SYMBOL-MACROLET LET 
; ==>
;   (LET ((STEENROD::STUFF EXP))
;     (IF (AND (TYPEP #:IT2 'LIST))
;         NIL
;         (OPTIMA:FAIL)))
; 
; caught STYLE-WARNING:
;   The variable STUFF is defined but never used.

; --> OPTIMA::%OR BLOCK TAGBODY RETURN-FROM OPTIMA::%OR BLOCK TAGBODY 
; --> RETURN-FROM SYMBOL-MACROLET OPTIMA::%OR BLOCK TAGBODY RETURN-FROM 
; ==>
;   (LET ((STEENROD::GET-LEAVES EXP))
;     (CONS '+ EXP))
; 
; caught STYLE-WARNING:
;   The variable GET-LEAVES is defined but never used.
; 
; compilation unit finished
;   caught 2 STYLE-WARNING conditions
; compiling (DEFUN GET-LEAVES ...)

; file: /tmp/fileQtO1jU
; in: DEFUN GET-LEAVES
;     (OPTIMA:MATCH EXP
;       ((LIST* '+ STEENROD::_ STEENROD::ARGS)
;        (MAPCAN #'STEENROD::GET-LEAVES STEENROD::ARGS))
;       ((LIST* :STEP STEENROD::_) (LIST EXP))
;       ((LIST* STEENROD::_))
;       (STEENROD::GET-LEAVES (CONS '+ EXP)))
; --> OPTIMA::%OR BLOCK TAGBODY RETURN-FROM OPTIMA::%OR BLOCK TAGBODY 
; --> RETURN-FROM SYMBOL-MACROLET OPTIMA::%OR BLOCK TAGBODY RETURN-FROM 
; ==>
;   (LET ((STEENROD::GET-LEAVES EXP))
;     (CONS '+ EXP))
; 
; caught STYLE-WARNING:
;   The variable GET-LEAVES is defined but never used.
; 
; compilation unit finished
;   caught 1 STYLE-WARNING condition

STEENROD> 
; No value; compiling (DEFUN GET-LEAVES ...)

; file: /tmp/fileXBF4cC
; in: DEFUN GET-LEAVES
;     (OPTIMA:MATCH EXP
;       ((LIST* '+ STEENROD::_ STEENROD::ARGS)
;        (MAPCAN #'STEENROD::GET-LEAVES STEENROD::ARGS))
;       ((LIST* :STEP STEENROD::_) (LIST EXP))
;       ((LIST* STEENROD::_))
;       (STEENROD::GET-LEAVES (CONS '+ EXP)))
; --> OPTIMA::%OR BLOCK TAGBODY RETURN-FROM OPTIMA::%OR BLOCK TAGBODY 
; --> RETURN-FROM SYMBOL-MACROLET OPTIMA::%OR BLOCK TAGBODY RETURN-FROM 
; ==>
;   (LET ((STEENROD::GET-LEAVES EXP))
;     (CONS '+ EXP))
; 
; caught STYLE-WARNING:
;   The variable GET-LEAVES is defined but never used.
; 
; compilation unit finished
;   caught 1 STYLE-WARNING condition
; compiling (DEFUN GET-LEAVES ...)
STEENROD> *all-things*

((:STEP (1 0 0 2)) (:STEP (0 1 2 1)) (:STEP (1 0 2 0)) (:STEP (1 0 0 2))
 (:STEP (0 1 0 2)) (:STEP (1 0 2 1)) (:STEP (0 1 2 0)) (:STEP (0 1 0 2))
 (:STEP (0 0 1 2)) (:STEP (2 1 0 1)) (:STEP (2 0 1 0)) (:STEP (0 0 1 2))
 (:STEP (1 0 0 2)) (:STEP (0 2 1 1)) (:STEP (1 2 0 0)) (:STEP (1 0 0 2))
 (:STEP (0 0 1 2)) (:STEP (1 2 0 1)) (:STEP (0 2 1 0)) (:STEP (0 0 1 2))
 (:STEP (0 1 0 2)) (:STEP (2 0 1 1)) (:STEP (2 1 0 0)) (:STEP 0 1 0 2)
 (:STEP 0 1 0 1) (:STEP 1 0 0 2) (:STEP 1 0 0 1) (:STEP 0 2 0 1)
 (:STEP 1 2 1 0) (:STEP 0 1 2 1) (:STEP 1 0 2 0) (:STEP 0 1 0 2)
 (:STEP 0 2 0 0) (:STEP 0 0 2 0) (:STEP 1 0 0 2) (:STEP 0 2 0 2)
 (:STEP 0 2 0 1) (:STEP 1 2 1 2) (:STEP 0 1 2 1) (:STEP 1 2 1 2)
 (:STEP 1 2 1 0) (:STEP 0 2 0 2) (:STEP 1 0 2 0) (:STEP 1 0 0 2)
 (:STEP 1 0 0 1) (:STEP 0 1 0 2) (:STEP 0 1 0 1) (:STEP 2 0 0 1)
 (:STEP 0 2 1 0) (:STEP 1 2 1 0) (:STEP 1 0 1 0) (:STEP 1 0 2 0)
 (:STEP 1 0 2 1) (:STEP 0 0 2 0) (:STEP 1 0 0 2) (:STEP 1 2 0 0)
 (:STEP 0 2 0 0) (:STEP 0 1 0 0) (:STEP 0 1 2 0) (:STEP 1 0 2 0)
 (:STEP 0 1 0 2) (:STEP 2 0 0 2) (:STEP 2 0 0 1) (:STEP 0 2 1 2)
 (:STEP 1 2 1 2) (:STEP 1 0 1 2) (:STEP 1 0 2 1) (:STEP 2 1 1 2)
 (:STEP 2 1 1 0) (:STEP 1 2 0 2) (:STEP 0 2 0 2) (:STEP 0 1 0 2)
 (:STEP 0 1 2 0) (:STEP 0 1 0 2) (:STEP 0 1 0 1) (:STEP 0 0 1 1)
 (:STEP 0 2 0 1) (:STEP 1 0 1 0) (:STEP 2 1 0 1) (:STEP 1 0 2 0)
 (:STEP 0 1 2 0) (:STEP 0 1 0 2) (:STEP 0 1 0 0) (:STEP 0 0 2 0)
 (:STEP 0 0 1 0) (:STEP 0 0 1 2) (:STEP 0 2 0 2) (:STEP 0 2 0 1)
 (:STEP 1 0 1 2) (:STEP 2 1 0 2) (:STEP 2 1 0 1) (:STEP 1 2 1 2)
 (:STEP 1 2 1 0) (:STEP 0 1 0 2) (:STEP 2 0 1 2) (:STEP 2 0 1 0)
 (:STEP 0 0 1 1) (:STEP 1 0 0 2) (:STEP 1 0 0 1) (:STEP 2 1 1 0)
 (:STEP 0 1 1 0) (:STEP 0 2 1 1) (:STEP 0 0 1 2) (:STEP 2 0 0 0)
 (:STEP 1 0 0 0) (:STEP 0 0 2 0) (:STEP 1 0 0 2) (:STEP 0 0 2 1)
 (:STEP 2 1 1 2) (:STEP 0 1 1 2) (:STEP 0 2 1 1) (:STEP 1 1 2 0)
 (:STEP 2 0 0 2) (:STEP 1 0 0 2) (:STEP 1 2 0 0) (:STEP 1 0 0 2)
 (:STEP 1 0 0 1) (:STEP 0 0 1 1) (:STEP 2 0 1 0) (:STEP 2 0 0 1)
 (:STEP 1 0 1 0) (:STEP 1 2 1 0) (:STEP 1 2 0 1) (:STEP 0 0 2 0)
 (:STEP 1 0 0 2) (:STEP 2 1 0 0) (:STEP 0 1 0 0) (:STEP 0 2 0 0)
 (:STEP 0 0 2 0) (:STEP 0 0 1 0) (:STEP 0 0 1 2) (:STEP 2 0 1 2)
 (:STEP 2 0 0 2) (:STEP 2 0 0 1) (:STEP 1 0 1 2) (:STEP 1 2 1 2)
 (:STEP 1 2 0 2) (:STEP 1 2 0 1) (:STEP 2 1 0 2) (:STEP 2 1 1 2)
 (:STEP 2 1 1 0) (:STEP 0 1 0 2) (:STEP 0 2 0 2) (:STEP 0 2 1 2)
 (:STEP 0 2 1 0) (:STEP 0 0 1 1) (:STEP 0 1 0 2) (:STEP 0 1 0 1)
 (:STEP 0 1 1 0) (:STEP 2 1 1 0) (:STEP 2 0 1 1) (:STEP 0 0 1 2)
 (:STEP 1 0 0 0) (:STEP 2 0 0 0) (:STEP 1 0 2 0) (:STEP 0 1 2 0)
 (:STEP 0 1 0 2) (:STEP 0 0 2 1) (:STEP 0 1 1 2) (:STEP 2 1 1 2)
 (:STEP 2 0 1 1) (:STEP 1 1 2 0) (:STEP 1 0 0 2) (:STEP 2 0 0 2)
 (:STEP 2 1 0 0))
STEENROD> (equalp (list 1 2 3)(list 1 2 3))
T
STEENROD> (equal (list 1 2 3)(list 1 2 3))
T
STEENROD> (eql (list 1 2 3)(list 1 2 3))
NIL
; compiling (DEFPARAMETER *ALL-THINGS* ...)
STEENROD> *all-things*

((:STEP (0 1 2 1)) (:STEP (1 0 2 0)) (:STEP (1 0 2 1)) (:STEP (0 1 2 0))
 (:STEP (2 1 0 1)) (:STEP (2 0 1 0)) (:STEP (0 2 1 1)) (:STEP (1 2 0 0))
 (:STEP (1 0 0 2)) (:STEP (1 2 0 1)) (:STEP (0 2 1 0)) (:STEP (0 0 1 2))
 (:STEP (0 1 0 2)) (:STEP (2 0 1 1)) (:STEP (2 1 0 0)))
; compiling (DEFPARAMETER *PRE-FLIP-DEG5* ...); 
                                              ; compilation unit aborted
                                              ;   caught 2 fatal ERROR conditions
; compiling (DEFPARAMETER *PRE-FLIP-DEG5* ...)
; compiling (DEFPARAMETER *PRE-FLIP-DEG4* ...)
STEENROD> *deg4*

((:STEP (0 1 0 1 2)) (:STEP (1 0 0 1 2))
 (+ (:STEP (0 2 0 1 0)) (:STEP (0 1 2 1 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (1 2 1 0 0)) (:STEP (1 0 2 0 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (0 2 0 1 2)) (:STEP (0 1 2 1 2)))
 (+ (:STEP (1 2 1 0 2)) (:STEP (1 0 2 0 2))) (:STEP (1 0 0 1 2))
 (:STEP (0 1 0 1 2))
 (+ (:STEP (2 0 0 1 0)) (:STEP (1 0 2 1 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (2 1 1 0 0)) (:STEP (0 1 2 0 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (2 0 0 1 2)) (:STEP (1 0 2 1 2)))
 (+ (:STEP (2 1 1 0 2)) (:STEP (0 1 2 0 2))) (:STEP (0 1 0 1 2))
 (:STEP (0 0 1 1 2))
 (+ (:STEP (0 2 0 1 0)) (:STEP (2 1 0 1 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (1 2 1 0 0)) (:STEP (2 0 1 0 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (0 2 0 1 2)) (:STEP (2 1 0 1 2)))
 (+ (:STEP (1 2 1 0 2)) (:STEP (2 0 1 0 2))) (:STEP (0 0 1 1 2))
 (:STEP (1 0 0 1 2))
 (+ (:STEP (0 0 2 1 0)) (:STEP (0 2 1 1 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (1 1 2 0 0)) (:STEP (1 2 0 0 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (0 0 2 1 2)) (:STEP (0 2 1 1 2)))
 (+ (:STEP (1 1 2 0 2)) (:STEP (1 2 0 0 2))) (:STEP (1 0 0 1 2))
 (:STEP (0 0 1 1 2))
 (+ (:STEP (2 0 0 1 0)) (:STEP (1 2 0 1 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (2 1 1 0 0)) (:STEP (0 2 1 0 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (2 0 0 1 2)) (:STEP (1 2 0 1 2)))
 (+ (:STEP (2 1 1 0 2)) (:STEP (0 2 1 0 2))) (:STEP (0 0 1 1 2))
 (:STEP (0 1 0 1 2))
 (+ (:STEP (0 0 2 1 0)) (:STEP (2 0 1 1 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (1 1 2 0 0)) (:STEP (2 1 0 0 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (0 0 2 1 2)) (:STEP (2 0 1 1 2)))
 (+ (:STEP (1 1 2 0 2)) (:STEP (2 1 0 0 2))))
STEENROD> *deg5*
; compiling (DEFPARAMETER *PRE-FLIP-DEG5* ...)
; compiling (DEFPARAMETER *PRE-FLIP-DEG5* ...); Evaluation aborted on #<UNBOUND-VARIABLE *DEG5* {100775F3E3}>.
STEENROD> *deg5*
; Evaluation aborted on #<UNBOUND-VARIABLE *DEG5* {1007C90B43}>.
STEENROD> *pre-flip-deg5*

((+ (:STEP (0 1 0 1 0 2))) (+ (:STEP (1 0 0 1 0 2)))
 (+ (:STEP (0 2 0 1 0 1)) (:STEP (0 1 2 1 0 1)) (:STEP (0 1 0 2 0 1))
    (:STEP (0 1 0 1 2 1)))
 (+ (:STEP (1 2 1 0 0 1)) (:STEP (1 0 2 0 0 1)) (:STEP (1 0 0 2 0 1))
    (:STEP (1 0 0 1 2 1)))
 (+ (:STEP (0 2 0 1 0 2)) (:STEP (0 1 2 1 0 2)) (:STEP (0 1 0 2 0 2)))
 (+ (:STEP (1 2 1 0 0 2)) (:STEP (1 0 2 0 0 2)) (:STEP (1 0 0 2 0 2)))
 (+ (:STEP (0 2 0 2 0 1)) (:STEP (0 2 0 1 2 1)) (:STEP (0 1 2 1 2 1)))
 (+ (:STEP (1 2 1 2 1 0)) (:STEP (1 2 1 0 2 0)) (:STEP (1 0 2 0 2 0))))
; compiling (DEFPARAMETER *DEG4* ...)
; compiling (DEFPARAMETER *DEG5* ...)
STEENROD> *deg5*

((:STEP (0 1 0 1 0 2)) (:STEP (1 0 0 1 0 2))
 (+ (:STEP (0 2 0 1 0 1)) (:STEP (0 1 2 1 0 1)) (:STEP (0 1 0 2 0 1))
    (:STEP (0 1 0 1 2 1)))
 (+ (:STEP (1 2 1 0 0 1)) (:STEP (1 0 2 0 0 1)) (:STEP (1 0 0 2 0 1))
    (:STEP (1 0 0 1 2 1)))
 (+ (:STEP (0 2 0 1 0 2)) (:STEP (0 1 2 1 0 2)) (:STEP (0 1 0 2 0 2)))
 (+ (:STEP (1 2 1 0 0 2)) (:STEP (1 0 2 0 0 2)) (:STEP (1 0 0 2 0 2)))
 (+ (:STEP (0 2 0 2 0 1)) (:STEP (0 2 0 1 2 1)) (:STEP (0 1 2 1 2 1)))
 (+ (:STEP (1 2 1 2 1 0)) (:STEP (1 2 1 0 2 0)) (:STEP (1 0 2 0 2 0)))
 (:STEP (1 0 0 1 0 2)) (:STEP (0 1 0 1 0 2))
 (+ (:STEP (2 0 0 1 0 1)) (:STEP (1 0 2 1 0 1)) (:STEP (1 0 0 2 0 1))
    (:STEP (1 0 0 1 2 1)))
 (+ (:STEP (2 1 1 0 0 1)) (:STEP (0 1 2 0 0 1)) (:STEP (0 1 0 2 0 1))
    (:STEP (0 1 0 1 2 1)))
 (+ (:STEP (2 0 0 1 0 2)) (:STEP (1 0 2 1 0 2)) (:STEP (1 0 0 2 0 2)))
 (+ (:STEP (2 1 1 0 0 2)) (:STEP (0 1 2 0 0 2)) (:STEP (0 1 0 2 0 2)))
 (+ (:STEP (2 0 0 2 0 1)) (:STEP (2 0 0 1 2 1)) (:STEP (1 0 2 1 2 1)))
 (+ (:STEP (2 1 1 2 1 0)) (:STEP (2 1 1 0 2 0)) (:STEP (0 1 2 0 2 0)))
 (:STEP (0 1 0 1 0 2)) (:STEP (0 0 1 1 0 2))
 (+ (:STEP (0 2 0 1 0 1)) (:STEP (2 1 0 1 0 1)) (:STEP (0 1 0 2 0 1))
    (:STEP (0 1 0 1 2 1)))
 (+ (:STEP (1 2 1 0 0 1)) (:STEP (2 0 1 0 0 1)) (:STEP (0 0 1 2 0 1))
    (:STEP (0 0 1 1 2 1)))
 (+ (:STEP (0 2 0 1 0 2)) (:STEP (2 1 0 1 0 2)) (:STEP (0 1 0 2 0 2)))
 (+ (:STEP (1 2 1 0 0 2)) (:STEP (2 0 1 0 0 2)) (:STEP (0 0 1 2 0 2)))
 (+ (:STEP (0 2 0 2 0 1)) (:STEP (0 2 0 1 2 1)) (:STEP (2 1 0 1 2 1)))
 (+ (:STEP (1 2 1 2 1 0)) (:STEP (1 2 1 0 2 0)) (:STEP (2 0 1 0 2 0)))
 (:STEP (0 0 1 1 0 2)) (:STEP (1 0 0 1 0 2))
 (+ (:STEP (0 0 2 1 0 1)) (:STEP (0 2 1 1 0 1)) (:STEP (0 0 1 2 0 1))
    (:STEP (0 0 1 1 2 1)))
 (+ (:STEP (1 1 2 0 0 1)) (:STEP (1 2 0 0 0 1)) (:STEP (1 0 0 2 0 1))
    (:STEP (1 0 0 1 2 1)))
 (+ (:STEP (0 0 2 1 0 2)) (:STEP (0 2 1 1 0 2)) (:STEP (0 0 1 2 0 2)))
 (+ (:STEP (1 1 2 0 0 2)) (:STEP (1 2 0 0 0 2)) (:STEP (1 0 0 2 0 2)))
 (+ (:STEP (0 0 2 2 0 1)) (:STEP (0 0 2 1 2 1)) (:STEP (0 2 1 1 2 1)))
 (+ (:STEP (1 1 2 2 1 0)) (:STEP (1 1 2 0 2 0)) (:STEP (1 2 0 0 2 0)))
 (:STEP (1 0 0 1 0 2)) (:STEP (0 0 1 1 0 2))
 (+ (:STEP (2 0 0 1 0 1)) (:STEP (1 2 0 1 0 1)) (:STEP (1 0 0 2 0 1))
    (:STEP (1 0 0 1 2 1)))
 (+ (:STEP (2 1 1 0 0 1)) (:STEP (0 2 1 0 0 1)) (:STEP (0 0 1 2 0 1))
    (:STEP (0 0 1 1 2 1)))
 (+ (:STEP (2 0 0 1 0 2)) (:STEP (1 2 0 1 0 2)) (:STEP (1 0 0 2 0 2)))
 (+ (:STEP (2 1 1 0 0 2)) (:STEP (0 2 1 0 0 2)) (:STEP (0 0 1 2 0 2)))
 (+ (:STEP (2 0 0 2 0 1)) (:STEP (2 0 0 1 2 1)) (:STEP (1 2 0 1 2 1)))
 (+ (:STEP (2 1 1 2 1 0)) (:STEP (2 1 1 0 2 0)) (:STEP (0 2 1 0 2 0)))
 (:STEP (0 0 1 1 0 2)) (:STEP (0 1 0 1 0 2))
 (+ (:STEP (0 0 2 1 0 1)) (:STEP (2 0 1 1 0 1)) (:STEP (0 0 1 2 0 1))
    (:STEP (0 0 1 1 2 1)))
 (+ (:STEP (1 1 2 0 0 1)) (:STEP (2 1 0 0 0 1)) (:STEP (0 1 0 2 0 1))
    (:STEP (0 1 0 1 2 1)))
 (+ (:STEP (0 0 2 1 0 2)) (:STEP (2 0 1 1 0 2)) (:STEP (0 0 1 2 0 2)))
 (+ (:STEP (1 1 2 0 0 2)) (:STEP (2 1 0 0 0 2)) (:STEP (0 1 0 2 0 2)))
 (+ (:STEP (0 0 2 2 0 1)) (:STEP (0 0 2 1 2 1)) (:STEP (2 0 1 1 2 1)))
 (+ (:STEP (1 1 2 2 1 0)) (:STEP (1 1 2 0 2 0)) (:STEP (2 1 0 0 2 0))))
; compiling (DEFPARAMETER *ALL-THINGS* ...)
STEENROD> *all-things*

((:STEP (0 1 2 1 0)) (:STEP (1 0 2 0 0)) (:STEP (0 1 2 1 2))
 (:STEP (1 0 2 0 2)) (:STEP (1 0 2 1 0)) (:STEP (0 1 2 0 0))
 (:STEP (1 0 2 1 2)) (:STEP (0 1 2 0 2)) (:STEP (2 1 0 1 0))
 (:STEP (2 0 1 0 0)) (:STEP (2 1 0 1 2)) (:STEP (2 0 1 0 2))
 (:STEP (0 2 1 1 0)) (:STEP (1 2 0 0 0)) (:STEP (0 2 1 1 2))
 (:STEP (1 2 0 0 2)) (:STEP (1 0 0 1 2)) (:STEP (1 2 0 1 0))
 (:STEP (1 0 0 2 0)) (:STEP (0 2 1 0 0)) (:STEP (1 2 0 1 2))
 (:STEP (0 2 1 0 2)) (:STEP (0 0 1 1 2)) (:STEP (0 1 0 1 2))
 (:STEP (2 0 1 1 0)) (:STEP (0 0 1 2 0)) (:STEP (2 1 0 0 0))
 (:STEP (0 1 0 2 0)) (:STEP (2 0 1 1 2)) (:STEP (2 1 0 0 2)) (:STEP 0 1 2 1)
 (:STEP 1 0 2 1) (:STEP 0 2 0 1) (:STEP 2 1 0 1) (:STEP 0 2 1 1)
 (:STEP 1 2 0 0) (:STEP 1 0 0 1) (:STEP 2 0 1 0) (:STEP 1 0 1 0)
 (:STEP 1 2 1 0) (:STEP 0 1 0 0) (:STEP 0 2 0 0) (:STEP 0 0 2 0)
 (:STEP 0 0 1 0) (:STEP 2 0 1 2) (:STEP 2 0 0 1) (:STEP 1 0 1 2)
 (:STEP 1 2 1 2) (:STEP 1 2 0 2) (:STEP 1 2 0 1) (:STEP 2 1 0 2)
 (:STEP 0 2 0 2) (:STEP 0 2 1 2) (:STEP 0 2 1 0) (:STEP 0 0 1 1)
 (:STEP 0 1 0 1) (:STEP 0 1 1 0) (:STEP 2 1 1 0) (:STEP 0 0 1 2)
 (:STEP 1 0 0 0) (:STEP 2 0 0 0) (:STEP 1 0 2 0) (:STEP 0 1 2 0)
 (:STEP 0 1 0 2) (:STEP 0 0 2 1) (:STEP 0 1 1 2) (:STEP 2 1 1 2)
 (:STEP 2 0 1 1) (:STEP 1 1 2 0) (:STEP 1 0 0 2) (:STEP 2 0 0 2)
 (:STEP 2 1 0 0))
; compiling (DEFPARAMETER *ALL-THINGS* ...)
STEENROD> *all-things*

#((:STEP (0 1 2 1 0)) (:STEP (1 0 2 0 0)) (:STEP (0 1 2 1 2))
  (:STEP (1 0 2 0 2)) (:STEP (1 0 2 1 0)) (:STEP (0 1 2 0 0))
  (:STEP (1 0 2 1 2)) (:STEP (0 1 2 0 2)) (:STEP (2 1 0 1 0))
  (:STEP (2 0 1 0 0)) (:STEP (2 1 0 1 2)) (:STEP (2 0 1 0 2))
  (:STEP (0 2 1 1 0)) (:STEP (1 2 0 0 0)) (:STEP (0 2 1 1 2))
  (:STEP (1 2 0 0 2)) (:STEP (1 0 0 1 2)) (:STEP (1 2 0 1 0))
  (:STEP (1 0 0 2 0)) (:STEP (0 2 1 0 0)) (:STEP (1 2 0 1 2))
  (:STEP (0 2 1 0 2)) (:STEP (0 0 1 1 2)) (:STEP (0 1 0 1 2))
  (:STEP (2 0 1 1 0)) (:STEP (0 0 1 2 0)) (:STEP (2 1 0 0 0))
  (:STEP (0 1 0 2 0)) (:STEP (2 0 1 1 2)) (:STEP (2 1 0 0 2)) (:STEP 0 1 2 1)
  (:STEP 1 0 2 1) (:STEP 0 2 0 1) (:STEP 2 1 0 1) (:STEP 0 2 1 1)
  (:STEP 1 2 0 0) (:STEP 1 0 0 1) (:STEP 2 0 1 0) (:STEP 1 0 1 0)
  (:STEP 1 2 1 0) (:STEP 0 1 0 0) (:STEP 0 2 0 0) (:STEP 0 0 2 0)
  (:STEP 0 0 1 0) (:STEP 2 0 1 2) (:STEP 2 0 0 1) (:STEP 1 0 1 2)
  (:STEP 1 2 1 2) (:STEP 1 2 0 2) (:STEP 1 2 0 1) (:STEP 2 1 0 2)
  (:STEP 0 2 0 2) (:STEP 0 2 1 2) (:STEP 0 2 1 0) (:STEP 0 0 1 1)
  (:STEP 0 1 0 1) (:STEP 0 1 1 0) (:STEP 2 1 1 0) (:STEP 0 0 1 2)
  (:STEP 1 0 0 0) (:STEP 2 0 0 0) (:STEP 1 0 2 0) (:STEP 0 1 2 0)
  (:STEP 0 1 0 2) (:STEP 0 0 2 1) (:STEP 0 1 1 2) (:STEP 2 1 1 2)
  (:STEP 2 0 1 1) (:STEP 1 1 2 0) (:STEP 1 0 0 2) (:STEP 2 0 0 2)
  (:STEP 2 1 0 0))
; compiling (DEFPARAMETER *DEG4QUAD-BASIS* ...)
STEENROD> *DEG4QUAD-BASIS*

((:STEP (0 1 0 1 2)) (:STEP (1 0 0 1 2))
 (+ (:STEP (0 2 0 1 0)) (:STEP (0 1 2 1 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (1 2 1 0 0)) (:STEP (1 0 2 0 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (0 2 0 1 2)) (:STEP (0 1 2 1 2)))
 (+ (:STEP (1 2 1 0 2)) (:STEP (1 0 2 0 2))) (:STEP (1 0 0 1 2))
 (:STEP (0 1 0 1 2))
 (+ (:STEP (2 0 0 1 0)) (:STEP (1 0 2 1 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (2 1 1 0 0)) (:STEP (0 1 2 0 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (2 0 0 1 2)) (:STEP (1 0 2 1 2)))
 (+ (:STEP (2 1 1 0 2)) (:STEP (0 1 2 0 2))) (:STEP (0 1 0 1 2))
 (:STEP (0 0 1 1 2))
 (+ (:STEP (0 2 0 1 0)) (:STEP (2 1 0 1 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (1 2 1 0 0)) (:STEP (2 0 1 0 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (0 2 0 1 2)) (:STEP (2 1 0 1 2)))
 (+ (:STEP (1 2 1 0 2)) (:STEP (2 0 1 0 2))) (:STEP (0 0 1 1 2))
 (:STEP (1 0 0 1 2))
 (+ (:STEP (0 0 2 1 0)) (:STEP (0 2 1 1 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (1 1 2 0 0)) (:STEP (1 2 0 0 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (0 0 2 1 2)) (:STEP (0 2 1 1 2)))
 (+ (:STEP (1 1 2 0 2)) (:STEP (1 2 0 0 2))) (:STEP (1 0 0 1 2))
 (:STEP (0 0 1 1 2))
 (+ (:STEP (2 0 0 1 0)) (:STEP (1 2 0 1 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (2 1 1 0 0)) (:STEP (0 2 1 0 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (2 0 0 1 2)) (:STEP (1 2 0 1 2)))
 (+ (:STEP (2 1 1 0 2)) (:STEP (0 2 1 0 2))) (:STEP (0 0 1 1 2))
 (:STEP (0 1 0 1 2))
 (+ (:STEP (0 0 2 1 0)) (:STEP (2 0 1 1 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (1 1 2 0 0)) (:STEP (2 1 0 0 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (0 0 2 1 2)) (:STEP (2 0 1 1 2)))
 (+ (:STEP (1 1 2 0 2)) (:STEP (2 1 0 0 2)))
 (+ (:STEP 1 0 1 2) (:STEP 0 1 0 2) (:STEP 0 1 0 1))
 (+ (:STEP 0 0 1 2) (:STEP 1 0 0 2) (:STEP 1 0 0 1))
 (+ (:STEP 2 0 1 0) (:STEP 0 2 0 1) (:STEP 1 2 1 0) (:STEP 0 1 2 1)
    (:STEP 1 0 2 0) (:STEP 0 1 0 2))
 (+ (:STEP 2 1 0 0) (:STEP 0 2 0 0) (:STEP 0 0 2 0) (:STEP 1 0 0 2))
 (+ (:STEP 2 0 1 2) (:STEP 0 2 0 2) (:STEP 0 2 0 1) (:STEP 1 2 1 2)
    (:STEP 0 1 2 1))
 (+ (:STEP 2 1 0 2) (:STEP 1 2 1 2) (:STEP 1 2 1 0) (:STEP 0 2 0 2)
    (:STEP 1 0 2 0))
 (+ (:STEP 0 0 1 2) (:STEP 1 0 0 2) (:STEP 1 0 0 1))
 (+ (:STEP 1 0 1 2) (:STEP 0 1 0 2) (:STEP 0 1 0 1))
 (+ (:STEP 0 0 1 0) (:STEP 2 0 0 1) (:STEP 0 2 1 0) (:STEP 1 2 1 0)
    (:STEP 1 0 1 0) (:STEP 1 0 2 0) (:STEP 1 0 2 1) (:STEP 0 0 2 0)
    (:STEP 1 0 0 2))
 (+ (:STEP 1 1 0 0) (:STEP 1 2 0 0) (:STEP 0 2 0 0) (:STEP 0 1 0 0)
    (:STEP 0 1 2 0) (:STEP 1 0 2 0) (:STEP 0 1 0 2))
 (+ (:STEP 0 0 1 2) (:STEP 2 0 0 2) (:STEP 2 0 0 1) (:STEP 0 2 1 2)
    (:STEP 1 2 1 2) (:STEP 1 0 1 2) (:STEP 1 0 2 1))
 (+ (:STEP 1 1 0 2) (:STEP 2 1 1 2) (:STEP 2 1 1 0) (:STEP 1 2 0 2)
    (:STEP 0 2 0 2) (:STEP 0 1 0 2) (:STEP 0 1 2 0))
 (+ (:STEP 1 0 1 2) (:STEP 0 1 0 2) (:STEP 0 1 0 1)) (:STEP 0 0 1 1)
 (+ (:STEP 0 2 1 0) (:STEP 0 2 0 1) (:STEP 1 0 1 0) (:STEP 2 1 0 1)
    (:STEP 1 0 2 0) (:STEP 0 1 2 0) (:STEP 0 1 0 2))
 (+ (:STEP 1 2 0 0) (:STEP 0 1 0 0) (:STEP 0 0 2 0) (:STEP 0 0 1 0)
    (:STEP 0 0 1 2))
 (+ (:STEP 0 2 1 2) (:STEP 0 2 0 2) (:STEP 0 2 0 1) (:STEP 1 0 1 2)
    (:STEP 2 1 0 2) (:STEP 2 1 0 1))
 (+ (:STEP 1 2 0 2) (:STEP 1 2 1 2) (:STEP 1 2 1 0) (:STEP 0 1 0 2)
    (:STEP 2 0 1 2) (:STEP 2 0 1 0))
 (:STEP 0 0 1 1) (+ (:STEP 0 0 1 2) (:STEP 1 0 0 2) (:STEP 1 0 0 1))
 (+ (:STEP 0 0 2 1) (:STEP 2 1 1 0) (:STEP 0 1 1 0) (:STEP 0 2 1 1)
    (:STEP 0 0 1 2))
 (+ (:STEP 1 1 0 0) (:STEP 2 0 0 0) (:STEP 1 0 0 0) (:STEP 0 0 2 0)
    (:STEP 1 0 0 2))
 (+ (:STEP 0 0 1 2) (:STEP 0 0 2 1) (:STEP 2 1 1 2) (:STEP 0 1 1 2)
    (:STEP 0 2 1 1))
 (+ (:STEP 1 1 0 2) (:STEP 1 1 2 0) (:STEP 2 0 0 2) (:STEP 1 0 0 2)
    (:STEP 1 2 0 0))
 (+ (:STEP 0 0 1 2) (:STEP 1 0 0 2) (:STEP 1 0 0 1)) (:STEP 0 0 1 1)
 (+ (:STEP 0 0 1 0) (:STEP 2 0 1 0) (:STEP 2 0 0 1) (:STEP 1 0 1 0)
    (:STEP 1 2 1 0) (:STEP 1 2 0 1) (:STEP 0 0 2 0) (:STEP 1 0 0 2))
 (+ (:STEP 1 1 0 0) (:STEP 2 1 0 0) (:STEP 0 1 0 0) (:STEP 0 2 0 0)
    (:STEP 0 0 2 0) (:STEP 0 0 1 0) (:STEP 0 0 1 2))
 (+ (:STEP 0 0 1 2) (:STEP 2 0 1 2) (:STEP 2 0 0 2) (:STEP 2 0 0 1)
    (:STEP 1 0 1 2) (:STEP 1 2 1 2) (:STEP 1 2 0 2) (:STEP 1 2 0 1))
 (+ (:STEP 1 1 0 2) (:STEP 2 1 0 2) (:STEP 2 1 1 2) (:STEP 2 1 1 0)
    (:STEP 0 1 0 2) (:STEP 0 2 0 2) (:STEP 0 2 1 2) (:STEP 0 2 1 0))
 (:STEP 0 0 1 1) (+ (:STEP 1 0 1 2) (:STEP 0 1 0 2) (:STEP 0 1 0 1))
 (+ (:STEP 0 0 2 1) (:STEP 0 1 1 0) (:STEP 2 1 1 0) (:STEP 2 0 1 1)
    (:STEP 0 0 1 2))
 (+ (:STEP 1 1 0 0) (:STEP 1 0 0 0) (:STEP 2 0 0 0) (:STEP 1 0 2 0)
    (:STEP 0 1 2 0) (:STEP 0 1 0 2))
 (+ (:STEP 0 0 1 2) (:STEP 0 0 2 1) (:STEP 0 1 1 2) (:STEP 2 1 1 2)
    (:STEP 2 0 1 1))
 (+ (:STEP 1 1 0 2) (:STEP 1 1 2 0) (:STEP 1 0 0 2) (:STEP 2 0 0 2)
    (:STEP 2 1 0 0)))
STEENROD> (length *DEG4QUAD-BASIS*)
72
STEENROD> (length *all-things*)
72
STEENROD> 
; No value
STEENROD> (find '(:step 0 0 1 2) *all-things*)
NIL
STEENROD> (find '(:step 0 0 1 2) *all-things* :test #'equal)
(:STEP 0 0 1 2)
STEENROD> (position '(:step 0 0 1 2) *all-things* :test #'equal)
58
; compiling (DEFUN TRANSLATE ...)
; compiling (DEFUN TRANSLATE ...)

; file: /tmp/fileMnyqMJ
; in: DEFUN TRANSLATE
;     (:VEC (POSITION STEP STEENROD::*ALL-THINGS* :TEST #'EQUAL))
; 
; caught STYLE-WARNING:
;   undefined function: :VEC
; 
; compilation unit finished
;   Undefined function:
;     :VEC
;   caught 1 STYLE-WARNING condition
; compiling (DEFUN TRANSLATE ...)
; compiling (DEF-MORPHISM TRANSLATE ...)
STEENROD> (translate '(+ (:step 0 0 1 2)))

(:VEC 58)
STEENROD> (mapcar #'translate *deg4quad-basis*)
((:VEC 23) (:VEC 16) (+ (:VEC NIL) (:VEC 0) (:VEC 27))
 (+ (:VEC NIL) (:VEC 1) (:VEC 18)) (+ (:VEC NIL) (:VEC 2))
 (+ (:VEC NIL) (:VEC 3)) (:VEC 16) (:VEC 23) (+ (:VEC NIL) (:VEC 4) (:VEC 18))
 (+ (:VEC NIL) (:VEC 5) (:VEC 27)) (+ (:VEC NIL) (:VEC 6))
 (+ (:VEC NIL) (:VEC 7)) (:VEC 23) (:VEC 22) (+ (:VEC NIL) (:VEC 8) (:VEC 27))
 (+ (:VEC NIL) (:VEC 9) (:VEC 25)) (+ (:VEC NIL) (:VEC 10))
 (+ (:VEC NIL) (:VEC 11)) (:VEC 22) (:VEC 16)
 (+ (:VEC NIL) (:VEC 12) (:VEC 25)) (+ (:VEC NIL) (:VEC 13) (:VEC 18))
 (+ (:VEC NIL) (:VEC 14)) (+ (:VEC NIL) (:VEC 15)) (:VEC 16) (:VEC 22)
 (+ (:VEC NIL) (:VEC 17) (:VEC 18)) (+ (:VEC NIL) (:VEC 19) (:VEC 25))
 (+ (:VEC NIL) (:VEC 20)) (+ (:VEC NIL) (:VEC 21)) (:VEC 22) (:VEC 23)
 (+ (:VEC NIL) (:VEC 24) (:VEC 25)) (+ (:VEC NIL) (:VEC 26) (:VEC 27))
 (+ (:VEC NIL) (:VEC 28)) (+ (:VEC NIL) (:VEC 29))
 (+ (:VEC 46) (:VEC 63) (:VEC 55)) (+ (:VEC 58) (:VEC 69) (:VEC 36))
 (+ (:VEC 37) (:VEC 32) (:VEC 39) (:VEC 30) (:VEC 61) (:VEC 63))
 (+ (:VEC 71) (:VEC 41) (:VEC 42) (:VEC 69))
 (+ (:VEC 44) (:VEC 51) (:VEC 32) (:VEC 47) (:VEC 30))
 (+ (:VEC 50) (:VEC 47) (:VEC 39) (:VEC 51) (:VEC 61))
 (+ (:VEC 58) (:VEC 69) (:VEC 36)) (+ (:VEC 46) (:VEC 63) (:VEC 55))
 (+ (:VEC 43) (:VEC 45) (:VEC 53) (:VEC 39) (:VEC 38) (:VEC 61) (:VEC 31)
    (:VEC 42) (:VEC 69))
 (+ (:VEC NIL) (:VEC 35) (:VEC 41) (:VEC 40) (:VEC 62) (:VEC 61) (:VEC 63))
 (+ (:VEC 58) (:VEC 70) (:VEC 45) (:VEC 52) (:VEC 47) (:VEC 46) (:VEC 31))
 (+ (:VEC NIL) (:VEC 66) (:VEC 57) (:VEC 48) (:VEC 51) (:VEC 63) (:VEC 62))
 (+ (:VEC 46) (:VEC 63) (:VEC 55)) (:VEC 54)
 (+ (:VEC 53) (:VEC 32) (:VEC 38) (:VEC 33) (:VEC 61) (:VEC 62) (:VEC 63))
 (+ (:VEC 35) (:VEC 40) (:VEC 42) (:VEC 43) (:VEC 58))
 (+ (:VEC 52) (:VEC 51) (:VEC 32) (:VEC 46) (:VEC 50) (:VEC 33))
 (+ (:VEC 48) (:VEC 47) (:VEC 39) (:VEC 63) (:VEC 44) (:VEC 37)) (:VEC 54)
 (+ (:VEC 58) (:VEC 69) (:VEC 36))
 (+ (:VEC 64) (:VEC 57) (:VEC 56) (:VEC 34) (:VEC 58))
 (+ (:VEC NIL) (:VEC 60) (:VEC 59) (:VEC 42) (:VEC 69))
 (+ (:VEC 58) (:VEC 64) (:VEC 66) (:VEC 65) (:VEC 34))
 (+ (:VEC NIL) (:VEC 68) (:VEC 70) (:VEC 69) (:VEC 35))
 (+ (:VEC 58) (:VEC 69) (:VEC 36)) (:VEC 54)
 (+ (:VEC 43) (:VEC 37) (:VEC 45) (:VEC 38) (:VEC 39) (:VEC 49) (:VEC 42)
    (:VEC 69))
 (+ (:VEC NIL) (:VEC 71) (:VEC 40) (:VEC 41) (:VEC 42) (:VEC 43) (:VEC 58))
 (+ (:VEC 58) (:VEC 44) (:VEC 70) (:VEC 45) (:VEC 46) (:VEC 47) (:VEC 48)
    (:VEC 49))
 (+ (:VEC NIL) (:VEC 50) (:VEC 66) (:VEC 57) (:VEC 63) (:VEC 51) (:VEC 52)
    (:VEC 53))
 (:VEC 54) (+ (:VEC 46) (:VEC 63) (:VEC 55))
 (+ (:VEC 64) (:VEC 56) (:VEC 57) (:VEC 67) (:VEC 58))
 (+ (:VEC NIL) (:VEC 59) (:VEC 60) (:VEC 61) (:VEC 62) (:VEC 63))
 (+ (:VEC 58) (:VEC 64) (:VEC 65) (:VEC 66) (:VEC 67))
 (+ (:VEC NIL) (:VEC 68) (:VEC 69) (:VEC 70) (:VEC 71)))
STEENROD> (mapcar #'cdr (mapcar #'translate *deg4quad-basis*))
((23) (16) ((:VEC NIL) (:VEC 0) (:VEC 27)) ((:VEC NIL) (:VEC 1) (:VEC 18))
 ((:VEC NIL) (:VEC 2)) ((:VEC NIL) (:VEC 3)) (16) (23)
 ((:VEC NIL) (:VEC 4) (:VEC 18)) ((:VEC NIL) (:VEC 5) (:VEC 27))
 ((:VEC NIL) (:VEC 6)) ((:VEC NIL) (:VEC 7)) (23) (22)
 ((:VEC NIL) (:VEC 8) (:VEC 27)) ((:VEC NIL) (:VEC 9) (:VEC 25))
 ((:VEC NIL) (:VEC 10)) ((:VEC NIL) (:VEC 11)) (22) (16)
 ((:VEC NIL) (:VEC 12) (:VEC 25)) ((:VEC NIL) (:VEC 13) (:VEC 18))
 ((:VEC NIL) (:VEC 14)) ((:VEC NIL) (:VEC 15)) (16) (22)
 ((:VEC NIL) (:VEC 17) (:VEC 18)) ((:VEC NIL) (:VEC 19) (:VEC 25))
 ((:VEC NIL) (:VEC 20)) ((:VEC NIL) (:VEC 21)) (22) (23)
 ((:VEC NIL) (:VEC 24) (:VEC 25)) ((:VEC NIL) (:VEC 26) (:VEC 27))
 ((:VEC NIL) (:VEC 28)) ((:VEC NIL) (:VEC 29)) ((:VEC 46) (:VEC 63) (:VEC 55))
 ((:VEC 58) (:VEC 69) (:VEC 36))
 ((:VEC 37) (:VEC 32) (:VEC 39) (:VEC 30) (:VEC 61) (:VEC 63))
 ((:VEC 71) (:VEC 41) (:VEC 42) (:VEC 69))
 ((:VEC 44) (:VEC 51) (:VEC 32) (:VEC 47) (:VEC 30))
 ((:VEC 50) (:VEC 47) (:VEC 39) (:VEC 51) (:VEC 61))
 ((:VEC 58) (:VEC 69) (:VEC 36)) ((:VEC 46) (:VEC 63) (:VEC 55))
 ((:VEC 43) (:VEC 45) (:VEC 53) (:VEC 39) (:VEC 38) (:VEC 61) (:VEC 31)
  (:VEC 42) (:VEC 69))
 ((:VEC NIL) (:VEC 35) (:VEC 41) (:VEC 40) (:VEC 62) (:VEC 61) (:VEC 63))
 ((:VEC 58) (:VEC 70) (:VEC 45) (:VEC 52) (:VEC 47) (:VEC 46) (:VEC 31))
 ((:VEC NIL) (:VEC 66) (:VEC 57) (:VEC 48) (:VEC 51) (:VEC 63) (:VEC 62))
 ((:VEC 46) (:VEC 63) (:VEC 55)) (54)
 ((:VEC 53) (:VEC 32) (:VEC 38) (:VEC 33) (:VEC 61) (:VEC 62) (:VEC 63))
 ((:VEC 35) (:VEC 40) (:VEC 42) (:VEC 43) (:VEC 58))
 ((:VEC 52) (:VEC 51) (:VEC 32) (:VEC 46) (:VEC 50) (:VEC 33))
 ((:VEC 48) (:VEC 47) (:VEC 39) (:VEC 63) (:VEC 44) (:VEC 37)) (54)
 ((:VEC 58) (:VEC 69) (:VEC 36))
 ((:VEC 64) (:VEC 57) (:VEC 56) (:VEC 34) (:VEC 58))
 ((:VEC NIL) (:VEC 60) (:VEC 59) (:VEC 42) (:VEC 69))
 ((:VEC 58) (:VEC 64) (:VEC 66) (:VEC 65) (:VEC 34))
 ((:VEC NIL) (:VEC 68) (:VEC 70) (:VEC 69) (:VEC 35))
 ((:VEC 58) (:VEC 69) (:VEC 36)) (54)
 ((:VEC 43) (:VEC 37) (:VEC 45) (:VEC 38) (:VEC 39) (:VEC 49) (:VEC 42)
  (:VEC 69))
 ((:VEC NIL) (:VEC 71) (:VEC 40) (:VEC 41) (:VEC 42) (:VEC 43) (:VEC 58))
 ((:VEC 58) (:VEC 44) (:VEC 70) (:VEC 45) (:VEC 46) (:VEC 47) (:VEC 48)
  (:VEC 49))
 ((:VEC NIL) (:VEC 50) (:VEC 66) (:VEC 57) (:VEC 63) (:VEC 51) (:VEC 52)
  (:VEC 53))
 (54) ((:VEC 46) (:VEC 63) (:VEC 55))
 ((:VEC 64) (:VEC 56) (:VEC 57) (:VEC 67) (:VEC 58))
 ((:VEC NIL) (:VEC 59) (:VEC 60) (:VEC 61) (:VEC 62) (:VEC 63))
 ((:VEC 58) (:VEC 64) (:VEC 65) (:VEC 66) (:VEC 67))
 ((:VEC NIL) (:VEC 68) (:VEC 69) (:VEC 70) (:VEC 71)))
STEENROD> *all-things*
#((:STEP (0 1 2 1 0)) (:STEP (1 0 2 0 0)) (:STEP (0 1 2 1 2))
  (:STEP (1 0 2 0 2)) (:STEP (1 0 2 1 0)) (:STEP (0 1 2 0 0))
  (:STEP (1 0 2 1 2)) (:STEP (0 1 2 0 2)) (:STEP (2 1 0 1 0))
  (:STEP (2 0 1 0 0)) (:STEP (2 1 0 1 2)) (:STEP (2 0 1 0 2))
  (:STEP (0 2 1 1 0)) (:STEP (1 2 0 0 0)) (:STEP (0 2 1 1 2))
  (:STEP (1 2 0 0 2)) (:STEP (1 0 0 1 2)) (:STEP (1 2 0 1 0))
  (:STEP (1 0 0 2 0)) (:STEP (0 2 1 0 0)) (:STEP (1 2 0 1 2))
  (:STEP (0 2 1 0 2)) (:STEP (0 0 1 1 2)) (:STEP (0 1 0 1 2))
  (:STEP (2 0 1 1 0)) (:STEP (0 0 1 2 0)) (:STEP (2 1 0 0 0))
  (:STEP (0 1 0 2 0)) (:STEP (2 0 1 1 2)) (:STEP (2 1 0 0 2)) (:STEP 0 1 2 1)
  (:STEP 1 0 2 1) (:STEP 0 2 0 1) (:STEP 2 1 0 1) (:STEP 0 2 1 1)
  (:STEP 1 2 0 0) (:STEP 1 0 0 1) (:STEP 2 0 1 0) (:STEP 1 0 1 0)
  (:STEP 1 2 1 0) (:STEP 0 1 0 0) (:STEP 0 2 0 0) (:STEP 0 0 2 0)
  (:STEP 0 0 1 0) (:STEP 2 0 1 2) (:STEP 2 0 0 1) (:STEP 1 0 1 2)
  (:STEP 1 2 1 2) (:STEP 1 2 0 2) (:STEP 1 2 0 1) (:STEP 2 1 0 2)
  (:STEP 0 2 0 2) (:STEP 0 2 1 2) (:STEP 0 2 1 0) (:STEP 0 0 1 1)
  (:STEP 0 1 0 1) (:STEP 0 1 1 0) (:STEP 2 1 1 0) (:STEP 0 0 1 2)
  (:STEP 1 0 0 0) (:STEP 2 0 0 0) (:STEP 1 0 2 0) (:STEP 0 1 2 0)
  (:STEP 0 1 0 2) (:STEP 0 0 2 1) (:STEP 0 1 1 2) (:STEP 2 1 1 2)
  (:STEP 2 0 1 1) (:STEP 1 1 2 0) (:STEP 1 0 0 2) (:STEP 2 0 0 2)
  (:STEP 2 1 0 0))
STEENROD> *bdd*
((+ (:STEP 1 0 1 2) (:STEP 0 1 0 2) (:STEP 0 1 0 1))
 (+ (:STEP 0 0 1 2) (:STEP 1 0 0 2) (:STEP 1 0 0 1))
 (+ (:STEP 2 0 1 0) (:STEP 0 2 0 1) (:STEP 1 2 1 0) (:STEP 0 1 2 1)
    (:STEP 1 0 2 0) (:STEP 0 1 0 2))
 (+ (:STEP 2 1 0 0) (:STEP 0 2 0 0) (:STEP 0 0 2 0) (:STEP 1 0 0 2))
 (+ (:STEP 2 0 1 2) (:STEP 0 2 0 2) (:STEP 0 2 0 1) (:STEP 1 2 1 2)
    (:STEP 0 1 2 1))
 (+ (:STEP 2 1 0 2) (:STEP 1 2 1 2) (:STEP 1 2 1 0) (:STEP 0 2 0 2)
    (:STEP 1 0 2 0))
 (+ (:STEP 0 0 1 2) (:STEP 1 0 0 2) (:STEP 1 0 0 1))
 (+ (:STEP 1 0 1 2) (:STEP 0 1 0 2) (:STEP 0 1 0 1))
 (+ (:STEP 0 0 1 0) (:STEP 2 0 0 1) (:STEP 0 2 1 0) (:STEP 1 2 1 0)
    (:STEP 1 0 1 0) (:STEP 1 0 2 0) (:STEP 1 0 2 1) (:STEP 0 0 2 0)
    (:STEP 1 0 0 2))
 (+ (:STEP 1 1 0 0) (:STEP 1 2 0 0) (:STEP 0 2 0 0) (:STEP 0 1 0 0)
    (:STEP 0 1 2 0) (:STEP 1 0 2 0) (:STEP 0 1 0 2))
 (+ (:STEP 0 0 1 2) (:STEP 2 0 0 2) (:STEP 2 0 0 1) (:STEP 0 2 1 2)
    (:STEP 1 2 1 2) (:STEP 1 0 1 2) (:STEP 1 0 2 1))
 (+ (:STEP 1 1 0 2) (:STEP 2 1 1 2) (:STEP 2 1 1 0) (:STEP 1 2 0 2)
    (:STEP 0 2 0 2) (:STEP 0 1 0 2) (:STEP 0 1 2 0))
 (+ (:STEP 1 0 1 2) (:STEP 0 1 0 2) (:STEP 0 1 0 1)) (:STEP 0 0 1 1)
 (+ (:STEP 0 2 1 0) (:STEP 0 2 0 1) (:STEP 1 0 1 0) (:STEP 2 1 0 1)
    (:STEP 1 0 2 0) (:STEP 0 1 2 0) (:STEP 0 1 0 2))
 (+ (:STEP 1 2 0 0) (:STEP 0 1 0 0) (:STEP 0 0 2 0) (:STEP 0 0 1 0)
    (:STEP 0 0 1 2))
 (+ (:STEP 0 2 1 2) (:STEP 0 2 0 2) (:STEP 0 2 0 1) (:STEP 1 0 1 2)
    (:STEP 2 1 0 2) (:STEP 2 1 0 1))
 (+ (:STEP 1 2 0 2) (:STEP 1 2 1 2) (:STEP 1 2 1 0) (:STEP 0 1 0 2)
    (:STEP 2 0 1 2) (:STEP 2 0 1 0))
 (:STEP 0 0 1 1) (+ (:STEP 0 0 1 2) (:STEP 1 0 0 2) (:STEP 1 0 0 1))
 (+ (:STEP 0 0 2 1) (:STEP 2 1 1 0) (:STEP 0 1 1 0) (:STEP 0 2 1 1)
    (:STEP 0 0 1 2))
 (+ (:STEP 1 1 0 0) (:STEP 2 0 0 0) (:STEP 1 0 0 0) (:STEP 0 0 2 0)
    (:STEP 1 0 0 2))
 (+ (:STEP 0 0 1 2) (:STEP 0 0 2 1) (:STEP 2 1 1 2) (:STEP 0 1 1 2)
    (:STEP 0 2 1 1))
 (+ (:STEP 1 1 0 2) (:STEP 1 1 2 0) (:STEP 2 0 0 2) (:STEP 1 0 0 2)
    (:STEP 1 2 0 0))
 (+ (:STEP 0 0 1 2) (:STEP 1 0 0 2) (:STEP 1 0 0 1)) (:STEP 0 0 1 1)
 (+ (:STEP 0 0 1 0) (:STEP 2 0 1 0) (:STEP 2 0 0 1) (:STEP 1 0 1 0)
    (:STEP 1 2 1 0) (:STEP 1 2 0 1) (:STEP 0 0 2 0) (:STEP 1 0 0 2))
 (+ (:STEP 1 1 0 0) (:STEP 2 1 0 0) (:STEP 0 1 0 0) (:STEP 0 2 0 0)
    (:STEP 0 0 2 0) (:STEP 0 0 1 0) (:STEP 0 0 1 2))
 (+ (:STEP 0 0 1 2) (:STEP 2 0 1 2) (:STEP 2 0 0 2) (:STEP 2 0 0 1)
    (:STEP 1 0 1 2) (:STEP 1 2 1 2) (:STEP 1 2 0 2) (:STEP 1 2 0 1))
 (+ (:STEP 1 1 0 2) (:STEP 2 1 0 2) (:STEP 2 1 1 2) (:STEP 2 1 1 0)
    (:STEP 0 1 0 2) (:STEP 0 2 0 2) (:STEP 0 2 1 2) (:STEP 0 2 1 0))
 (:STEP 0 0 1 1) (+ (:STEP 1 0 1 2) (:STEP 0 1 0 2) (:STEP 0 1 0 1))
 (+ (:STEP 0 0 2 1) (:STEP 0 1 1 0) (:STEP 2 1 1 0) (:STEP 2 0 1 1)
    (:STEP 0 0 1 2))
 (+ (:STEP 1 1 0 0) (:STEP 1 0 0 0) (:STEP 2 0 0 0) (:STEP 1 0 2 0)
    (:STEP 0 1 2 0) (:STEP 0 1 0 2))
 (+ (:STEP 0 0 1 2) (:STEP 0 0 2 1) (:STEP 0 1 1 2) (:STEP 2 1 1 2)
    (:STEP 2 0 1 1))
 (+ (:STEP 1 1 0 2) (:STEP 1 1 2 0) (:STEP 1 0 0 2) (:STEP 2 0 0 2)
    (:STEP 2 1 0 0)))
STEENROD> (boundary (:step (0 1 2)))
; in: BOUNDARY (:STEP (0 1 2))
;     (0 1 2)
; 
; caught ERROR:
;   illegal function call

; in: BOUNDARY (:STEP (0 1 2))
;     (:STEP (0 1 2))
; 
; caught STYLE-WARNING:
;   undefined function: :STEP
; 
; compilation unit finished
;   Undefined function:
;     :STEP
;   caught 1 ERROR condition
;   caught 1 STYLE-WARNING condition
; Evaluation aborted on #<SB-INT:COMPILED-PROGRAM-ERROR {1003574213}>.
STEENROD> (boundary (:step 0 1 2))
; Evaluation aborted on #<UNDEFINED-FUNCTION STEP {100462A543}>.
STEENROD> (boundary '(:step (0 1 2)))
(+ (:STEP 1 2) (:STEP 0 2) (:STEP 0 1))
; compiling (DEFMETHOD BDD-DISPATCH ...)
STEENROD> (boundary '(:step (0 1 2)))

((:STEP 1 2) (:STEP 0 2) (:STEP 0 1))
; compiling (DEFMETHOD BDD-DISPATCH ...)
; compiling (DEFMETHOD BDD-DISPATCH ...)
STEENROD> (boundary '(:step (0 1 2)))

(+ (:STEP (1 2)) (:STEP (0 2)) (:STEP (0 1)))
; compiling (DEFPARAMETER *DEG5* ...)
; compiling (DEFPARAMETER *BDD* ...)
; compiling (DEFPARAMETER *DEG4QUAD-BASIS* ...)
; compiling (DEFPARAMETER *ALL-THINGS* ...)
STEENROD> (length *all-things*)

87
STEENROD> (length *deq4quad-basis*)
; compiling (DEFPARAMETER *DEG4QUAD-BASIS* ...); Evaluation aborted on #<UNBOUND-VARIABLE *DEQ4QUAD-BASIS* {100721C533}>.
STEENROD> *DEG4QUAD-BASIS*

((:STEP (0 1 0 1 2)) (:STEP (1 0 0 1 2))
 (+ (:STEP (0 2 0 1 0)) (:STEP (0 1 2 1 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (1 2 1 0 0)) (:STEP (1 0 2 0 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (0 2 0 1 2)) (:STEP (0 1 2 1 2)))
 (+ (:STEP (1 2 1 0 2)) (:STEP (1 0 2 0 2))) (:STEP (1 0 0 1 2))
 (:STEP (0 1 0 1 2))
 (+ (:STEP (2 0 0 1 0)) (:STEP (1 0 2 1 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (2 1 1 0 0)) (:STEP (0 1 2 0 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (2 0 0 1 2)) (:STEP (1 0 2 1 2)))
 (+ (:STEP (2 1 1 0 2)) (:STEP (0 1 2 0 2))) (:STEP (0 1 0 1 2))
 (:STEP (0 0 1 1 2))
 (+ (:STEP (0 2 0 1 0)) (:STEP (2 1 0 1 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (1 2 1 0 0)) (:STEP (2 0 1 0 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (0 2 0 1 2)) (:STEP (2 1 0 1 2)))
 (+ (:STEP (1 2 1 0 2)) (:STEP (2 0 1 0 2))) (:STEP (0 0 1 1 2))
 (:STEP (1 0 0 1 2))
 (+ (:STEP (0 0 2 1 0)) (:STEP (0 2 1 1 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (1 1 2 0 0)) (:STEP (1 2 0 0 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (0 0 2 1 2)) (:STEP (0 2 1 1 2)))
 (+ (:STEP (1 1 2 0 2)) (:STEP (1 2 0 0 2))) (:STEP (1 0 0 1 2))
 (:STEP (0 0 1 1 2))
 (+ (:STEP (2 0 0 1 0)) (:STEP (1 2 0 1 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (2 1 1 0 0)) (:STEP (0 2 1 0 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (2 0 0 1 2)) (:STEP (1 2 0 1 2)))
 (+ (:STEP (2 1 1 0 2)) (:STEP (0 2 1 0 2))) (:STEP (0 0 1 1 2))
 (:STEP (0 1 0 1 2))
 (+ (:STEP (0 0 2 1 0)) (:STEP (2 0 1 1 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (1 1 2 0 0)) (:STEP (2 1 0 0 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (0 0 2 1 2)) (:STEP (2 0 1 1 2)))
 (+ (:STEP (1 1 2 0 2)) (:STEP (2 1 0 0 2)))
 (+ (:STEP (1 0 1 0 2)) (:STEP (0 1 0 1 2)) (:STEP (0 1 0 1 0)))
 (+ (:STEP (0 0 1 0 2)) (:STEP (1 0 0 1 2)) (:STEP (1 0 0 1 0)))
 (+ (:STEP (2 0 1 0 1)) (:STEP (0 2 0 1 0)) (:STEP (1 2 1 0 1))
    (:STEP (0 1 2 1 0)) (:STEP (1 0 2 0 1)) (:STEP (0 1 0 2 0))
    (:STEP (1 0 1 2 1)) (:STEP (0 1 0 1 2)))
 (+ (:STEP (2 1 0 0 1)) (:STEP (1 2 1 0 0)) (:STEP (0 2 0 0 1))
    (:STEP (1 0 2 0 0)) (:STEP (0 0 2 0 1)) (:STEP (1 0 0 2 0))
    (:STEP (0 0 1 2 1)) (:STEP (1 0 0 1 2)))
 (+ (:STEP (2 0 1 0 2)) (:STEP (0 2 0 1 2)) (:STEP (0 2 0 1 0))
    (:STEP (1 2 1 0 2)) (:STEP (0 1 2 1 2)) (:STEP (0 1 2 1 0))
    (:STEP (1 0 2 0 2)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (2 1 0 0 2)) (:STEP (1 2 1 0 0)) (:STEP (0 2 0 0 2))
    (:STEP (1 0 2 0 0)) (:STEP (0 0 2 0 2)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (2 0 2 0 1)) (:STEP (0 2 0 2 0)) (:STEP (2 0 1 2 1))
    (:STEP (0 2 0 1 2)) (:STEP (1 2 1 2 1)) (:STEP (0 1 2 1 2)))
 (+ (:STEP (2 1 2 1 0)) (:STEP (1 2 1 2 1)) (:STEP (2 1 0 2 0))
    (:STEP (1 2 1 0 2)) (:STEP (0 2 0 2 0)) (:STEP (1 0 2 0 2)))
 (+ (:STEP (0 0 1 0 2)) (:STEP (1 0 0 1 2)) (:STEP (1 0 0 1 0)))
 (+ (:STEP (1 0 1 0 2)) (:STEP (0 1 0 1 2)) (:STEP (0 1 0 1 0)))
 (+ (:STEP (0 0 1 0 1)) (:STEP (2 0 0 1 0)) (:STEP (0 2 1 0 1))
    (:STEP (1 2 1 0 1)) (:STEP (1 0 1 0 1)) (:STEP (1 0 2 0 1))
    (:STEP (1 0 2 1 0)) (:STEP (0 0 2 0 1)) (:STEP (1 0 0 2 0))
    (:STEP (0 0 1 2 1)) (:STEP (1 0 0 1 2)))
 (+ (:STEP (1 1 0 0 1)) (:STEP (2 1 1 0 0)) (:STEP (1 2 0 0 1))
    (:STEP (0 2 0 0 1)) (:STEP (0 1 0 0 1)) (:STEP (0 1 2 0 1))
    (:STEP (0 1 2 0 0)) (:STEP (1 0 2 0 1)) (:STEP (0 1 0 2 0))
    (:STEP (1 0 1 2 1)) (:STEP (0 1 0 1 2)))
 (+ (:STEP (0 0 1 0 2)) (:STEP (2 0 0 1 2)) (:STEP (2 0 0 1 0))
    (:STEP (0 2 1 0 2)) (:STEP (1 2 1 0 2)) (:STEP (1 0 1 0 2))
    (:STEP (1 0 2 0 2)) (:STEP (1 0 2 1 2)) (:STEP (1 0 2 1 0))
    (:STEP (0 0 2 0 2)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (1 1 0 0 2)) (:STEP (2 1 1 0 0)) (:STEP (1 2 0 0 2))
    (:STEP (0 2 0 0 2)) (:STEP (0 1 0 0 2)) (:STEP (0 1 2 0 2))
    (:STEP (0 1 2 0 0)) (:STEP (1 0 2 0 2)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (0 0 2 0 1)) (:STEP (2 0 0 2 0)) (:STEP (0 0 1 2 1))
    (:STEP (2 0 0 1 2)) (:STEP (0 2 1 2 1)) (:STEP (1 2 1 2 1))
    (:STEP (1 0 1 2 1)) (:STEP (1 0 2 1 2)))
 (+ (:STEP (1 1 2 1 0)) (:STEP (2 1 1 2 1)) (:STEP (1 1 0 2 0))
    (:STEP (2 1 1 0 2)) (:STEP (1 2 0 2 0)) (:STEP (0 2 0 2 0))
    (:STEP (0 1 0 2 0)) (:STEP (0 1 2 0 2)))
 (+ (:STEP (1 0 1 0 2)) (:STEP (0 1 0 1 2)) (:STEP (0 1 0 1 0)))
 (+ (:STEP (0 0 1 1 2)) (:STEP (0 0 1 1 0)))
 (+ (:STEP (0 2 1 0 1)) (:STEP (0 2 0 1 0)) (:STEP (1 0 1 0 1))
    (:STEP (2 1 0 1 0)) (:STEP (1 0 2 0 1)) (:STEP (0 1 2 0 1))
    (:STEP (0 1 0 2 0)) (:STEP (1 0 1 2 1)) (:STEP (0 1 0 1 2)))
 (+ (:STEP (1 2 0 0 1)) (:STEP (1 2 1 0 0)) (:STEP (0 1 0 0 1))
    (:STEP (2 0 1 0 0)) (:STEP (0 0 2 0 1)) (:STEP (0 0 1 0 1))
    (:STEP (0 0 1 2 1)) (:STEP (0 0 1 2 0)) (:STEP (0 0 1 1 2)))
 (+ (:STEP (0 2 1 0 2)) (:STEP (0 2 0 1 2)) (:STEP (0 2 0 1 0))
    (:STEP (1 0 1 0 2)) (:STEP (2 1 0 1 2)) (:STEP (2 1 0 1 0))
    (:STEP (1 0 2 0 2)) (:STEP (0 1 2 0 2)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (1 2 0 0 2)) (:STEP (1 2 1 0 0)) (:STEP (0 1 0 0 2))
    (:STEP (2 0 1 0 0)) (:STEP (0 0 2 0 2)) (:STEP (0 0 1 0 2))
    (:STEP (0 0 1 2 0)))
 (+ (:STEP (2 0 2 0 1)) (:STEP (0 2 0 2 0)) (:STEP (0 2 1 2 1))
    (:STEP (0 2 0 1 2)) (:STEP (1 0 1 2 1)) (:STEP (2 1 0 2 1))
    (:STEP (2 1 0 1 2)))
 (+ (:STEP (2 1 2 1 0)) (:STEP (1 2 1 2 1)) (:STEP (1 2 0 2 0))
    (:STEP (1 2 1 0 2)) (:STEP (0 1 0 2 0)) (:STEP (2 0 1 2 0))
    (:STEP (2 0 1 0 2)))
 (+ (:STEP (0 0 1 1 2)) (:STEP (0 0 1 1 0)))
 (+ (:STEP (0 0 1 0 2)) (:STEP (1 0 0 1 2)) (:STEP (1 0 0 1 0)))
 (+ (:STEP (0 0 2 1 0)) (:STEP (2 1 1 0 1)) (:STEP (0 1 1 0 1))
    (:STEP (0 2 1 1 0)) (:STEP (0 0 1 2 1)) (:STEP (0 0 1 2 0))
    (:STEP (0 0 1 1 2)))
 (+ (:STEP (1 1 0 0 1)) (:STEP (1 1 2 0 0)) (:STEP (2 0 0 0 1))
    (:STEP (1 0 0 0 1)) (:STEP (1 2 0 0 0)) (:STEP (0 0 2 0 1))
    (:STEP (1 0 0 2 0)) (:STEP (0 0 1 2 1)) (:STEP (1 0 0 1 2)))
 (+ (:STEP (0 0 2 1 2)) (:STEP (0 0 2 1 0)) (:STEP (2 1 1 0 2))
    (:STEP (0 1 1 0 2)) (:STEP (0 2 1 1 2)) (:STEP (0 2 1 1 0))
    (:STEP (0 0 1 2 0)))
 (+ (:STEP (1 1 0 0 2)) (:STEP (1 1 2 0 0)) (:STEP (2 0 0 0 2))
    (:STEP (1 0 0 0 2)) (:STEP (1 2 0 0 0)) (:STEP (0 0 2 0 2))
    (:STEP (1 0 0 2 0)))
 (+ (:STEP (0 0 2 2 1)) (:STEP (0 0 2 2 0)) (:STEP (0 0 1 2 1))
    (:STEP (0 0 2 1 2)) (:STEP (2 1 1 2 1)) (:STEP (0 1 1 2 1))
    (:STEP (0 2 1 1 2)))
 (+ (:STEP (1 1 2 2 0)) (:STEP (1 1 2 2 1)) (:STEP (1 1 0 2 0))
    (:STEP (1 1 2 0 2)) (:STEP (2 0 0 2 0)) (:STEP (1 0 0 2 0))
    (:STEP (1 2 0 0 2)))
 (+ (:STEP (0 0 1 0 2)) (:STEP (1 0 0 1 2)) (:STEP (1 0 0 1 0)))
 (+ (:STEP (0 0 1 1 2)) (:STEP (0 0 1 1 0)))
 (+ (:STEP (0 0 1 0 1)) (:STEP (2 0 1 0 1)) (:STEP (2 0 0 1 0))
    (:STEP (1 0 1 0 1)) (:STEP (1 2 1 0 1)) (:STEP (1 2 0 1 0))
    (:STEP (0 0 2 0 1)) (:STEP (1 0 0 2 0)) (:STEP (0 0 1 2 1))
    (:STEP (1 0 0 1 2)))
 (+ (:STEP (1 1 0 0 1)) (:STEP (2 1 0 0 1)) (:STEP (2 1 1 0 0))
    (:STEP (0 1 0 0 1)) (:STEP (0 2 0 0 1)) (:STEP (0 2 1 0 0))
    (:STEP (0 0 2 0 1)) (:STEP (0 0 1 0 1)) (:STEP (0 0 1 2 1))
    (:STEP (0 0 1 2 0)) (:STEP (0 0 1 1 2)))
 (+ (:STEP (0 0 1 0 2)) (:STEP (2 0 1 0 2)) (:STEP (2 0 0 1 2))
    (:STEP (2 0 0 1 0)) (:STEP (1 0 1 0 2)) (:STEP (1 2 1 0 2))
    (:STEP (1 2 0 1 2)) (:STEP (1 2 0 1 0)) (:STEP (0 0 2 0 2))
    (:STEP (1 0 0 2 0)))
 (+ (:STEP (1 1 0 0 2)) (:STEP (2 1 0 0 2)) (:STEP (2 1 1 0 0))
    (:STEP (0 1 0 0 2)) (:STEP (0 2 0 0 2)) (:STEP (0 2 1 0 0))
    (:STEP (0 0 2 0 2)) (:STEP (0 0 1 0 2)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (0 0 2 0 1)) (:STEP (2 0 0 2 0)) (:STEP (0 0 1 2 1))
    (:STEP (2 0 1 2 1)) (:STEP (2 0 0 1 2)) (:STEP (1 0 1 2 1))
    (:STEP (1 2 1 2 1)) (:STEP (1 2 0 2 1)) (:STEP (1 2 0 1 2)))
 (+ (:STEP (1 1 2 1 0)) (:STEP (2 1 1 2 1)) (:STEP (1 1 0 2 0))
    (:STEP (2 1 0 2 0)) (:STEP (2 1 1 0 2)) (:STEP (0 1 0 2 0))
    (:STEP (0 2 0 2 0)) (:STEP (0 2 1 2 0)) (:STEP (0 2 1 0 2)))
 (+ (:STEP (0 0 1 1 2)) (:STEP (0 0 1 1 0)))
 (+ (:STEP (1 0 1 0 2)) (:STEP (0 1 0 1 2)) (:STEP (0 1 0 1 0)))
 (+ (:STEP (0 0 2 1 0)) (:STEP (0 1 1 0 1)) (:STEP (2 1 1 0 1))
    (:STEP (2 0 1 1 0)) (:STEP (0 0 1 2 1)) (:STEP (0 0 1 2 0))
    (:STEP (0 0 1 1 2)))
 (+ (:STEP (1 1 0 0 1)) (:STEP (1 1 2 0 0)) (:STEP (1 0 0 0 1))
    (:STEP (2 0 0 0 1)) (:STEP (2 1 0 0 0)) (:STEP (1 0 2 0 1))
    (:STEP (0 1 2 0 1)) (:STEP (0 1 0 2 0)) (:STEP (1 0 1 2 1))
    (:STEP (0 1 0 1 2)))
 (+ (:STEP (0 0 2 1 2)) (:STEP (0 0 2 1 0)) (:STEP (0 1 1 0 2))
    (:STEP (2 1 1 0 2)) (:STEP (2 0 1 1 2)) (:STEP (2 0 1 1 0))
    (:STEP (0 0 1 2 0)))
 (+ (:STEP (1 1 0 0 2)) (:STEP (1 1 2 0 0)) (:STEP (1 0 0 0 2))
    (:STEP (2 0 0 0 2)) (:STEP (2 1 0 0 0)) (:STEP (1 0 2 0 2))
    (:STEP (0 1 2 0 2)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (0 0 2 2 1)) (:STEP (0 0 2 2 0)) (:STEP (0 0 1 2 1))
    (:STEP (0 0 2 1 2)) (:STEP (0 1 1 2 1)) (:STEP (2 1 1 2 1))
    (:STEP (2 0 1 1 2)))
 (+ (:STEP (1 1 2 2 0)) (:STEP (1 1 2 2 1)) (:STEP (1 1 0 2 0))
    (:STEP (1 1 2 0 2)) (:STEP (1 0 0 2 0)) (:STEP (2 0 0 2 0))
    (:STEP (2 1 0 0 2))))
STEENROD> (length *DEG4QUAD-BASIS*)
84
; compiling (DEFPARAMETER *DEG4QUAD-BASIS* ...)
STEENROD> *DEG4QUAD-BASIS*

((+ (:STEP (0 2 0 1 0)) (:STEP (0 1 2 1 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (1 2 1 0 0)) (:STEP (1 0 2 0 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (0 2 0 1 2)) (:STEP (0 1 2 1 2)))
 (+ (:STEP (1 2 1 0 2)) (:STEP (1 0 2 0 2)))
 (+ (:STEP (2 0 0 1 0)) (:STEP (1 0 2 1 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (2 1 1 0 0)) (:STEP (0 1 2 0 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (2 0 0 1 2)) (:STEP (1 0 2 1 2)))
 (+ (:STEP (2 1 1 0 2)) (:STEP (0 1 2 0 2)))
 (+ (:STEP (0 2 0 1 0)) (:STEP (2 1 0 1 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (1 2 1 0 0)) (:STEP (2 0 1 0 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (0 2 0 1 2)) (:STEP (2 1 0 1 2)))
 (+ (:STEP (1 2 1 0 2)) (:STEP (2 0 1 0 2)))
 (+ (:STEP (0 0 2 1 0)) (:STEP (0 2 1 1 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (1 1 2 0 0)) (:STEP (1 2 0 0 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (0 0 2 1 2)) (:STEP (0 2 1 1 2)))
 (+ (:STEP (1 1 2 0 2)) (:STEP (1 2 0 0 2))) (:STEP (1 0 0 1 2))
 (+ (:STEP (2 0 0 1 0)) (:STEP (1 2 0 1 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (2 1 1 0 0)) (:STEP (0 2 1 0 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (2 0 0 1 2)) (:STEP (1 2 0 1 2)))
 (+ (:STEP (2 1 1 0 2)) (:STEP (0 2 1 0 2))) (:STEP (0 0 1 1 2))
 (:STEP (0 1 0 1 2))
 (+ (:STEP (0 0 2 1 0)) (:STEP (2 0 1 1 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (1 1 2 0 0)) (:STEP (2 1 0 0 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (0 0 2 1 2)) (:STEP (2 0 1 1 2)))
 (+ (:STEP (1 1 2 0 2)) (:STEP (2 1 0 0 2)))
 (+ (:STEP (2 0 1 0 1)) (:STEP (0 2 0 1 0)) (:STEP (1 2 1 0 1))
    (:STEP (0 1 2 1 0)) (:STEP (1 0 2 0 1)) (:STEP (0 1 0 2 0))
    (:STEP (1 0 1 2 1)) (:STEP (0 1 0 1 2)))
 (+ (:STEP (2 1 0 0 1)) (:STEP (1 2 1 0 0)) (:STEP (0 2 0 0 1))
    (:STEP (1 0 2 0 0)) (:STEP (0 0 2 0 1)) (:STEP (1 0 0 2 0))
    (:STEP (0 0 1 2 1)) (:STEP (1 0 0 1 2)))
 (+ (:STEP (2 0 1 0 2)) (:STEP (0 2 0 1 2)) (:STEP (0 2 0 1 0))
    (:STEP (1 2 1 0 2)) (:STEP (0 1 2 1 2)) (:STEP (0 1 2 1 0))
    (:STEP (1 0 2 0 2)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (2 1 0 0 2)) (:STEP (1 2 1 0 0)) (:STEP (0 2 0 0 2))
    (:STEP (1 0 2 0 0)) (:STEP (0 0 2 0 2)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (2 0 2 0 1)) (:STEP (0 2 0 2 0)) (:STEP (2 0 1 2 1))
    (:STEP (0 2 0 1 2)) (:STEP (1 2 1 2 1)) (:STEP (0 1 2 1 2)))
 (+ (:STEP (2 1 2 1 0)) (:STEP (1 2 1 2 1)) (:STEP (2 1 0 2 0))
    (:STEP (1 2 1 0 2)) (:STEP (0 2 0 2 0)) (:STEP (1 0 2 0 2)))
 (+ (:STEP (0 0 1 0 1)) (:STEP (2 0 0 1 0)) (:STEP (0 2 1 0 1))
    (:STEP (1 2 1 0 1)) (:STEP (1 0 1 0 1)) (:STEP (1 0 2 0 1))
    (:STEP (1 0 2 1 0)) (:STEP (0 0 2 0 1)) (:STEP (1 0 0 2 0))
    (:STEP (0 0 1 2 1)) (:STEP (1 0 0 1 2)))
 (+ (:STEP (1 1 0 0 1)) (:STEP (2 1 1 0 0)) (:STEP (1 2 0 0 1))
    (:STEP (0 2 0 0 1)) (:STEP (0 1 0 0 1)) (:STEP (0 1 2 0 1))
    (:STEP (0 1 2 0 0)) (:STEP (1 0 2 0 1)) (:STEP (0 1 0 2 0))
    (:STEP (1 0 1 2 1)) (:STEP (0 1 0 1 2)))
 (+ (:STEP (0 0 1 0 2)) (:STEP (2 0 0 1 2)) (:STEP (2 0 0 1 0))
    (:STEP (0 2 1 0 2)) (:STEP (1 2 1 0 2)) (:STEP (1 0 1 0 2))
    (:STEP (1 0 2 0 2)) (:STEP (1 0 2 1 2)) (:STEP (1 0 2 1 0))
    (:STEP (0 0 2 0 2)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (1 1 0 0 2)) (:STEP (2 1 1 0 0)) (:STEP (1 2 0 0 2))
    (:STEP (0 2 0 0 2)) (:STEP (0 1 0 0 2)) (:STEP (0 1 2 0 2))
    (:STEP (0 1 2 0 0)) (:STEP (1 0 2 0 2)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (0 0 2 0 1)) (:STEP (2 0 0 2 0)) (:STEP (0 0 1 2 1))
    (:STEP (2 0 0 1 2)) (:STEP (0 2 1 2 1)) (:STEP (1 2 1 2 1))
    (:STEP (1 0 1 2 1)) (:STEP (1 0 2 1 2)))
 (+ (:STEP (1 1 2 1 0)) (:STEP (2 1 1 2 1)) (:STEP (1 1 0 2 0))
    (:STEP (2 1 1 0 2)) (:STEP (1 2 0 2 0)) (:STEP (0 2 0 2 0))
    (:STEP (0 1 0 2 0)) (:STEP (0 1 2 0 2)))
 (+ (:STEP (0 2 1 0 1)) (:STEP (0 2 0 1 0)) (:STEP (1 0 1 0 1))
    (:STEP (2 1 0 1 0)) (:STEP (1 0 2 0 1)) (:STEP (0 1 2 0 1))
    (:STEP (0 1 0 2 0)) (:STEP (1 0 1 2 1)) (:STEP (0 1 0 1 2)))
 (+ (:STEP (1 2 0 0 1)) (:STEP (1 2 1 0 0)) (:STEP (0 1 0 0 1))
    (:STEP (2 0 1 0 0)) (:STEP (0 0 2 0 1)) (:STEP (0 0 1 0 1))
    (:STEP (0 0 1 2 1)) (:STEP (0 0 1 2 0)) (:STEP (0 0 1 1 2)))
 (+ (:STEP (0 2 1 0 2)) (:STEP (0 2 0 1 2)) (:STEP (0 2 0 1 0))
    (:STEP (1 0 1 0 2)) (:STEP (2 1 0 1 2)) (:STEP (2 1 0 1 0))
    (:STEP (1 0 2 0 2)) (:STEP (0 1 2 0 2)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (1 2 0 0 2)) (:STEP (1 2 1 0 0)) (:STEP (0 1 0 0 2))
    (:STEP (2 0 1 0 0)) (:STEP (0 0 2 0 2)) (:STEP (0 0 1 0 2))
    (:STEP (0 0 1 2 0)))
 (+ (:STEP (2 0 2 0 1)) (:STEP (0 2 0 2 0)) (:STEP (0 2 1 2 1))
    (:STEP (0 2 0 1 2)) (:STEP (1 0 1 2 1)) (:STEP (2 1 0 2 1))
    (:STEP (2 1 0 1 2)))
 (+ (:STEP (2 1 2 1 0)) (:STEP (1 2 1 2 1)) (:STEP (1 2 0 2 0))
    (:STEP (1 2 1 0 2)) (:STEP (0 1 0 2 0)) (:STEP (2 0 1 2 0))
    (:STEP (2 0 1 0 2)))
 (+ (:STEP (0 0 2 1 0)) (:STEP (2 1 1 0 1)) (:STEP (0 1 1 0 1))
    (:STEP (0 2 1 1 0)) (:STEP (0 0 1 2 1)) (:STEP (0 0 1 2 0))
    (:STEP (0 0 1 1 2)))
 (+ (:STEP (1 1 0 0 1)) (:STEP (1 1 2 0 0)) (:STEP (2 0 0 0 1))
    (:STEP (1 0 0 0 1)) (:STEP (1 2 0 0 0)) (:STEP (0 0 2 0 1))
    (:STEP (1 0 0 2 0)) (:STEP (0 0 1 2 1)) (:STEP (1 0 0 1 2)))
 (+ (:STEP (0 0 2 1 2)) (:STEP (0 0 2 1 0)) (:STEP (2 1 1 0 2))
    (:STEP (0 1 1 0 2)) (:STEP (0 2 1 1 2)) (:STEP (0 2 1 1 0))
    (:STEP (0 0 1 2 0)))
 (+ (:STEP (1 1 0 0 2)) (:STEP (1 1 2 0 0)) (:STEP (2 0 0 0 2))
    (:STEP (1 0 0 0 2)) (:STEP (1 2 0 0 0)) (:STEP (0 0 2 0 2))
    (:STEP (1 0 0 2 0)))
 (+ (:STEP (0 0 2 2 1)) (:STEP (0 0 2 2 0)) (:STEP (0 0 1 2 1))
    (:STEP (0 0 2 1 2)) (:STEP (2 1 1 2 1)) (:STEP (0 1 1 2 1))
    (:STEP (0 2 1 1 2)))
 (+ (:STEP (1 1 2 2 0)) (:STEP (1 1 2 2 1)) (:STEP (1 1 0 2 0))
    (:STEP (1 1 2 0 2)) (:STEP (2 0 0 2 0)) (:STEP (1 0 0 2 0))
    (:STEP (1 2 0 0 2)))
 (+ (:STEP (0 0 1 0 2)) (:STEP (1 0 0 1 2)) (:STEP (1 0 0 1 0)))
 (+ (:STEP (0 0 1 0 1)) (:STEP (2 0 1 0 1)) (:STEP (2 0 0 1 0))
    (:STEP (1 0 1 0 1)) (:STEP (1 2 1 0 1)) (:STEP (1 2 0 1 0))
    (:STEP (0 0 2 0 1)) (:STEP (1 0 0 2 0)) (:STEP (0 0 1 2 1))
    (:STEP (1 0 0 1 2)))
 (+ (:STEP (1 1 0 0 1)) (:STEP (2 1 0 0 1)) (:STEP (2 1 1 0 0))
    (:STEP (0 1 0 0 1)) (:STEP (0 2 0 0 1)) (:STEP (0 2 1 0 0))
    (:STEP (0 0 2 0 1)) (:STEP (0 0 1 0 1)) (:STEP (0 0 1 2 1))
    (:STEP (0 0 1 2 0)) (:STEP (0 0 1 1 2)))
 (+ (:STEP (0 0 1 0 2)) (:STEP (2 0 1 0 2)) (:STEP (2 0 0 1 2))
    (:STEP (2 0 0 1 0)) (:STEP (1 0 1 0 2)) (:STEP (1 2 1 0 2))
    (:STEP (1 2 0 1 2)) (:STEP (1 2 0 1 0)) (:STEP (0 0 2 0 2))
    (:STEP (1 0 0 2 0)))
 (+ (:STEP (1 1 0 0 2)) (:STEP (2 1 0 0 2)) (:STEP (2 1 1 0 0))
    (:STEP (0 1 0 0 2)) (:STEP (0 2 0 0 2)) (:STEP (0 2 1 0 0))
    (:STEP (0 0 2 0 2)) (:STEP (0 0 1 0 2)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (0 0 2 0 1)) (:STEP (2 0 0 2 0)) (:STEP (0 0 1 2 1))
    (:STEP (2 0 1 2 1)) (:STEP (2 0 0 1 2)) (:STEP (1 0 1 2 1))
    (:STEP (1 2 1 2 1)) (:STEP (1 2 0 2 1)) (:STEP (1 2 0 1 2)))
 (+ (:STEP (1 1 2 1 0)) (:STEP (2 1 1 2 1)) (:STEP (1 1 0 2 0))
    (:STEP (2 1 0 2 0)) (:STEP (2 1 1 0 2)) (:STEP (0 1 0 2 0))
    (:STEP (0 2 0 2 0)) (:STEP (0 2 1 2 0)) (:STEP (0 2 1 0 2)))
 (+ (:STEP (0 0 1 1 2)) (:STEP (0 0 1 1 0)))
 (+ (:STEP (1 0 1 0 2)) (:STEP (0 1 0 1 2)) (:STEP (0 1 0 1 0)))
 (+ (:STEP (0 0 2 1 0)) (:STEP (0 1 1 0 1)) (:STEP (2 1 1 0 1))
    (:STEP (2 0 1 1 0)) (:STEP (0 0 1 2 1)) (:STEP (0 0 1 2 0))
    (:STEP (0 0 1 1 2)))
 (+ (:STEP (1 1 0 0 1)) (:STEP (1 1 2 0 0)) (:STEP (1 0 0 0 1))
    (:STEP (2 0 0 0 1)) (:STEP (2 1 0 0 0)) (:STEP (1 0 2 0 1))
    (:STEP (0 1 2 0 1)) (:STEP (0 1 0 2 0)) (:STEP (1 0 1 2 1))
    (:STEP (0 1 0 1 2)))
 (+ (:STEP (0 0 2 1 2)) (:STEP (0 0 2 1 0)) (:STEP (0 1 1 0 2))
    (:STEP (2 1 1 0 2)) (:STEP (2 0 1 1 2)) (:STEP (2 0 1 1 0))
    (:STEP (0 0 1 2 0)))
 (+ (:STEP (1 1 0 0 2)) (:STEP (1 1 2 0 0)) (:STEP (1 0 0 0 2))
    (:STEP (2 0 0 0 2)) (:STEP (2 1 0 0 0)) (:STEP (1 0 2 0 2))
    (:STEP (0 1 2 0 2)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (0 0 2 2 1)) (:STEP (0 0 2 2 0)) (:STEP (0 0 1 2 1))
    (:STEP (0 0 2 1 2)) (:STEP (0 1 1 2 1)) (:STEP (2 1 1 2 1))
    (:STEP (2 0 1 1 2)))
 (+ (:STEP (1 1 2 2 0)) (:STEP (1 1 2 2 1)) (:STEP (1 1 0 2 0))
    (:STEP (1 1 2 0 2)) (:STEP (1 0 0 2 0)) (:STEP (2 0 0 2 0))
    (:STEP (2 1 0 0 2))))
STEENROD> (length *DEG4QUAD-BASIS*)
66
; compiling (DEFPARAMETER *ALL-THINGS* ...)
STEENROD> (length *all-things*)

87
; compiling (DEFPARAMETER *SPARSE-MX* ...)
STEENROD> *SPARSE-MX*

(((:VEC 8) (:VEC 0) (:VEC 74)) ((:VEC 10) (:VEC 1) (:VEC 84))
 ((:VEC 13) (:VEC 2)) ((:VEC 35) (:VEC 72)) ((:VEC 33) (:VEC 5) (:VEC 84))
 ((:VEC 37) (:VEC 6) (:VEC 74)) ((:VEC 44) (:VEC 7)) ((:VEC 65) (:VEC 73))
 ((:VEC 8) (:VEC 9) (:VEC 74)) ((:VEC 10) (:VEC 11) (:VEC 67))
 ((:VEC 13) (:VEC 15)) ((:VEC 35) (:VEC 32)) ((:VEC 63) (:VEC 18) (:VEC 67))
 ((:VEC 68) (:VEC 19) (:VEC 84)) ((:VEC 77) (:VEC 20)) ((:VEC 83) (:VEC 21))
 (26) ((:VEC 33) (:VEC 36) (:VEC 84)) ((:VEC 37) (:VEC 40) (:VEC 67))
 ((:VEC 44) (:VEC 47)) ((:VEC 65) (:VEC 51)) (56) (62)
 ((:VEC 63) (:VEC 66) (:VEC 67)) ((:VEC 68) (:VEC 71) (:VEC 74))
 ((:VEC 77) (:VEC 80)) ((:VEC 83) (:VEC 86))
 ((:VEC 23) (:VEC 8) (:VEC 25) (:VEC 0) (:VEC 59) (:VEC 74) (:VEC 61)
  (:VEC 62))
 ((:VEC 27) (:VEC 10) (:VEC 29) (:VEC 1) (:VEC 30) (:VEC 84) (:VEC 76)
  (:VEC 26))
 ((:VEC 32) (:VEC 13) (:VEC 8) (:VEC 35) (:VEC 2) (:VEC 0) (:VEC 72) (:VEC 74))
 ((:VEC 86) (:VEC 10) (:VEC 39) (:VEC 1) (:VEC 41) (:VEC 84))
 ((:VEC NIL) (:VEC 49) (:VEC 43) (:VEC 13) (:VEC 45) (:VEC 2))
 ((:VEC NIL) (:VEC 45) (:VEC 48) (:VEC 35) (:VEC 49) (:VEC 72))
 ((:VEC 31) (:VEC 33) (:VEC 3) (:VEC 25) (:VEC 24) (:VEC 59) (:VEC 5) (:VEC 30)
  (:VEC 84) (:VEC 76) (:VEC 26))
 ((:VEC NIL) (:VEC 37) (:VEC 4) (:VEC 29) (:VEC 28) (:VEC 60) (:VEC 6)
  (:VEC 59) (:VEC 74) (:VEC 61) (:VEC 62))
 ((:VEC 42) (:VEC 44) (:VEC 33) (:VEC 51) (:VEC 35) (:VEC 34) (:VEC 72)
  (:VEC 7) (:VEC 5) (:VEC 41) (:VEC 84))
 ((:VEC NIL) (:VEC 37) (:VEC 21) (:VEC 39) (:VEC 38) (:VEC 73) (:VEC 6)
  (:VEC 72) (:VEC 74))
 ((:VEC 30) (:VEC 85) (:VEC 76) (:VEC 44) (:VEC 12) (:VEC 45) (:VEC 61)
  (:VEC 7))
 ((:VEC NIL) (:VEC 79) (:VEC 82) (:VEC 65) (:VEC 16) (:VEC 49) (:VEC 74)
  (:VEC 73))
 ((:VEC 3) (:VEC 8) (:VEC 24) (:VEC 9) (:VEC 59) (:VEC 60) (:VEC 74) (:VEC 61)
  (:VEC 62))
 ((:VEC 4) (:VEC 10) (:VEC 28) (:VEC 11) (:VEC 30) (:VEC 31) (:VEC 76)
  (:VEC 67) (:VEC 56))
 ((:VEC 51) (:VEC 13) (:VEC 8) (:VEC 34) (:VEC 15) (:VEC 9) (:VEC 72) (:VEC 73)
  (:VEC 74))
 ((:VEC 21) (:VEC 10) (:VEC 38) (:VEC 11) (:VEC 41) (:VEC 42) (:VEC 67))
 ((:VEC NIL) (:VEC 49) (:VEC 12) (:VEC 13) (:VEC 61) (:VEC 14) (:VEC 15))
 ((:VEC NIL) (:VEC 45) (:VEC 16) (:VEC 35) (:VEC 74) (:VEC 17) (:VEC 32))
 ((:VEC 63) (:VEC 55) (:VEC 54) (:VEC 18) (:VEC 76) (:VEC 67) (:VEC 56))
 ((:VEC NIL) (:VEC 68) (:VEC 58) (:VEC 57) (:VEC 19) (:VEC 30) (:VEC 84)
  (:VEC 76) (:VEC 26))
 ((:VEC 77) (:VEC 63) (:VEC 65) (:VEC 64) (:VEC 20) (:VEC 18) (:VEC 67))
 ((:VEC NIL) (:VEC 68) (:VEC 70) (:VEC 69) (:VEC 19) (:VEC 41) (:VEC 84))
 ((:VEC NIL) (:VEC 75) (:VEC 76) (:VEC 77) (:VEC 79) (:VEC 78) (:VEC 20))
 ((:VEC NIL) (:VEC 81) (:VEC 82) (:VEC 83) (:VEC 85) (:VEC 84) (:VEC 21))
 ((:VEC 42) (:VEC 26) (:VEC 22))
 ((:VEC 31) (:VEC 23) (:VEC 33) (:VEC 24) (:VEC 25) (:VEC 36) (:VEC 30)
  (:VEC 84) (:VEC 76) (:VEC 26))
 ((:VEC NIL) (:VEC 27) (:VEC 37) (:VEC 28) (:VEC 29) (:VEC 40) (:VEC 30)
  (:VEC 31) (:VEC 76) (:VEC 67) (:VEC 56))
 ((:VEC 42) (:VEC 32) (:VEC 44) (:VEC 33) (:VEC 34) (:VEC 35) (:VEC 47)
  (:VEC 36) (:VEC 41) (:VEC 84))
 ((:VEC NIL) (:VEC 86) (:VEC 37) (:VEC 38) (:VEC 39) (:VEC 40) (:VEC 41)
  (:VEC 42) (:VEC 67))
 ((:VEC 30) (:VEC 85) (:VEC 76) (:VEC 43) (:VEC 44) (:VEC 61) (:VEC 45)
  (:VEC 46) (:VEC 47))
 ((:VEC NIL) (:VEC 79) (:VEC 82) (:VEC 48) (:VEC 65) (:VEC 74) (:VEC 49)
  (:VEC 50) (:VEC 51))
 ((:VEC 56) (:VEC 52)) ((:VEC 34) (:VEC 62) (:VEC 53))
 ((:VEC 63) (:VEC 54) (:VEC 55) (:VEC 66) (:VEC 76) (:VEC 67) (:VEC 56))
 ((:VEC NIL) (:VEC 68) (:VEC 57) (:VEC 58) (:VEC 71) (:VEC 59) (:VEC 60)
  (:VEC 74) (:VEC 61) (:VEC 62))
 ((:VEC 77) (:VEC 63) (:VEC 64) (:VEC 65) (:VEC 80) (:VEC 66) (:VEC 67))
 ((:VEC NIL) (:VEC 68) (:VEC 69) (:VEC 70) (:VEC 71) (:VEC 72) (:VEC 73)
  (:VEC 74))
 ((:VEC NIL) (:VEC 75) (:VEC 76) (:VEC 77) (:VEC 78) (:VEC 79) (:VEC 80))
 ((:VEC NIL) (:VEC 81) (:VEC 82) (:VEC 83) (:VEC 84) (:VEC 85) (:VEC 86)))
; compiling (DEFPARAMETER *DEG4QUAD-BASIS* ...)
STEENROD> *DEG4QUAD-BASIS*

((+ (:STEP (0 2 0 1 0)) (:STEP (0 1 2 1 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (1 2 1 0 0)) (:STEP (1 0 2 0 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (0 2 0 1 2)) (:STEP (0 1 2 1 2)))
 (+ (:STEP (1 2 1 0 2)) (:STEP (1 0 2 0 2)))
 (+ (:STEP (2 0 0 1 0)) (:STEP (1 0 2 1 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (2 1 1 0 0)) (:STEP (0 1 2 0 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (2 0 0 1 2)) (:STEP (1 0 2 1 2)))
 (+ (:STEP (2 1 1 0 2)) (:STEP (0 1 2 0 2)))
 (+ (:STEP (0 2 0 1 0)) (:STEP (2 1 0 1 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (1 2 1 0 0)) (:STEP (2 0 1 0 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (0 2 0 1 2)) (:STEP (2 1 0 1 2)))
 (+ (:STEP (1 2 1 0 2)) (:STEP (2 0 1 0 2)))
 (+ (:STEP (0 0 2 1 0)) (:STEP (0 2 1 1 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (1 1 2 0 0)) (:STEP (1 2 0 0 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (0 0 2 1 2)) (:STEP (0 2 1 1 2)))
 (+ (:STEP (1 1 2 0 2)) (:STEP (1 2 0 0 2))) (:STEP (1 0 0 1 2))
 (+ (:STEP (2 0 0 1 0)) (:STEP (1 2 0 1 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (2 1 1 0 0)) (:STEP (0 2 1 0 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (2 0 0 1 2)) (:STEP (1 2 0 1 2)))
 (+ (:STEP (2 1 1 0 2)) (:STEP (0 2 1 0 2))) (:STEP (0 0 1 1 2))
 (:STEP (0 1 0 1 2))
 (+ (:STEP (0 0 2 1 0)) (:STEP (2 0 1 1 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (1 1 2 0 0)) (:STEP (2 1 0 0 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (0 0 2 1 2)) (:STEP (2 0 1 1 2)))
 (+ (:STEP (1 1 2 0 2)) (:STEP (2 1 0 0 2)))
 (+ (:STEP (2 0 1 0 1)) (:STEP (0 2 0 1 0)) (:STEP (1 2 1 0 1))
    (:STEP (0 1 2 1 0)) (:STEP (1 0 2 0 1)) (:STEP (0 1 0 2 0))
    (:STEP (1 0 1 2 1)) (:STEP (0 1 0 1 2)))
 (+ (:STEP (2 1 0 0 1)) (:STEP (1 2 1 0 0)) (:STEP (0 2 0 0 1))
    (:STEP (1 0 2 0 0)) (:STEP (0 0 2 0 1)) (:STEP (1 0 0 2 0))
    (:STEP (0 0 1 2 1)) (:STEP (1 0 0 1 2)))
 (+ (:STEP (2 0 1 0 2)) (:STEP (0 2 0 1 2)) (:STEP (0 2 0 1 0))
    (:STEP (1 2 1 0 2)) (:STEP (0 1 2 1 2)) (:STEP (0 1 2 1 0))
    (:STEP (1 0 2 0 2)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (2 1 0 0 2)) (:STEP (1 2 1 0 0)) (:STEP (0 2 0 0 2))
    (:STEP (1 0 2 0 0)) (:STEP (0 0 2 0 2)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (2 0 2 0 1)) (:STEP (0 2 0 2 0)) (:STEP (2 0 1 2 1))
    (:STEP (0 2 0 1 2)) (:STEP (1 2 1 2 1)) (:STEP (0 1 2 1 2)))
 (+ (:STEP (2 1 2 1 0)) (:STEP (1 2 1 2 1)) (:STEP (2 1 0 2 0))
    (:STEP (1 2 1 0 2)) (:STEP (0 2 0 2 0)) (:STEP (1 0 2 0 2)))
 (+ (:STEP (0 0 1 0 1)) (:STEP (2 0 0 1 0)) (:STEP (0 2 1 0 1))
    (:STEP (1 2 1 0 1)) (:STEP (1 0 1 0 1)) (:STEP (1 0 2 0 1))
    (:STEP (1 0 2 1 0)) (:STEP (0 0 2 0 1)) (:STEP (1 0 0 2 0))
    (:STEP (0 0 1 2 1)) (:STEP (1 0 0 1 2)))
 (+ (:STEP (1 1 0 0 1)) (:STEP (2 1 1 0 0)) (:STEP (1 2 0 0 1))
    (:STEP (0 2 0 0 1)) (:STEP (0 1 0 0 1)) (:STEP (0 1 2 0 1))
    (:STEP (0 1 2 0 0)) (:STEP (1 0 2 0 1)) (:STEP (0 1 0 2 0))
    (:STEP (1 0 1 2 1)) (:STEP (0 1 0 1 2)))
 (+ (:STEP (0 0 1 0 2)) (:STEP (2 0 0 1 2)) (:STEP (2 0 0 1 0))
    (:STEP (0 2 1 0 2)) (:STEP (1 2 1 0 2)) (:STEP (1 0 1 0 2))
    (:STEP (1 0 2 0 2)) (:STEP (1 0 2 1 2)) (:STEP (1 0 2 1 0))
    (:STEP (0 0 2 0 2)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (1 1 0 0 2)) (:STEP (2 1 1 0 0)) (:STEP (1 2 0 0 2))
    (:STEP (0 2 0 0 2)) (:STEP (0 1 0 0 2)) (:STEP (0 1 2 0 2))
    (:STEP (0 1 2 0 0)) (:STEP (1 0 2 0 2)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (0 0 2 0 1)) (:STEP (2 0 0 2 0)) (:STEP (0 0 1 2 1))
    (:STEP (2 0 0 1 2)) (:STEP (0 2 1 2 1)) (:STEP (1 2 1 2 1))
    (:STEP (1 0 1 2 1)) (:STEP (1 0 2 1 2)))
 (+ (:STEP (1 1 2 1 0)) (:STEP (2 1 1 2 1)) (:STEP (1 1 0 2 0))
    (:STEP (2 1 1 0 2)) (:STEP (1 2 0 2 0)) (:STEP (0 2 0 2 0))
    (:STEP (0 1 0 2 0)) (:STEP (0 1 2 0 2)))
 (+ (:STEP (0 2 1 0 1)) (:STEP (0 2 0 1 0)) (:STEP (1 0 1 0 1))
    (:STEP (2 1 0 1 0)) (:STEP (1 0 2 0 1)) (:STEP (0 1 2 0 1))
    (:STEP (0 1 0 2 0)) (:STEP (1 0 1 2 1)) (:STEP (0 1 0 1 2)))
 (+ (:STEP (1 2 0 0 1)) (:STEP (1 2 1 0 0)) (:STEP (0 1 0 0 1))
    (:STEP (2 0 1 0 0)) (:STEP (0 0 2 0 1)) (:STEP (0 0 1 0 1))
    (:STEP (0 0 1 2 1)) (:STEP (0 0 1 2 0)) (:STEP (0 0 1 1 2)))
 (+ (:STEP (0 2 1 0 2)) (:STEP (0 2 0 1 2)) (:STEP (0 2 0 1 0))
    (:STEP (1 0 1 0 2)) (:STEP (2 1 0 1 2)) (:STEP (2 1 0 1 0))
    (:STEP (1 0 2 0 2)) (:STEP (0 1 2 0 2)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (1 2 0 0 2)) (:STEP (1 2 1 0 0)) (:STEP (0 1 0 0 2))
    (:STEP (2 0 1 0 0)) (:STEP (0 0 2 0 2)) (:STEP (0 0 1 0 2))
    (:STEP (0 0 1 2 0)))
 (+ (:STEP (2 0 2 0 1)) (:STEP (0 2 0 2 0)) (:STEP (0 2 1 2 1))
    (:STEP (0 2 0 1 2)) (:STEP (1 0 1 2 1)) (:STEP (2 1 0 2 1))
    (:STEP (2 1 0 1 2)))
 (+ (:STEP (2 1 2 1 0)) (:STEP (1 2 1 2 1)) (:STEP (1 2 0 2 0))
    (:STEP (1 2 1 0 2)) (:STEP (0 1 0 2 0)) (:STEP (2 0 1 2 0))
    (:STEP (2 0 1 0 2)))
 (+ (:STEP (0 0 2 1 0)) (:STEP (2 1 1 0 1)) (:STEP (0 1 1 0 1))
    (:STEP (0 2 1 1 0)) (:STEP (0 0 1 2 1)) (:STEP (0 0 1 2 0))
    (:STEP (0 0 1 1 2)))
 (+ (:STEP (1 1 0 0 1)) (:STEP (1 1 2 0 0)) (:STEP (2 0 0 0 1))
    (:STEP (1 0 0 0 1)) (:STEP (1 2 0 0 0)) (:STEP (0 0 2 0 1))
    (:STEP (1 0 0 2 0)) (:STEP (0 0 1 2 1)) (:STEP (1 0 0 1 2)))
 (+ (:STEP (0 0 2 1 2)) (:STEP (0 0 2 1 0)) (:STEP (2 1 1 0 2))
    (:STEP (0 1 1 0 2)) (:STEP (0 2 1 1 2)) (:STEP (0 2 1 1 0))
    (:STEP (0 0 1 2 0)))
 (+ (:STEP (1 1 0 0 2)) (:STEP (1 1 2 0 0)) (:STEP (2 0 0 0 2))
    (:STEP (1 0 0 0 2)) (:STEP (1 2 0 0 0)) (:STEP (0 0 2 0 2))
    (:STEP (1 0 0 2 0)))
 (+ (:STEP (0 0 2 2 1)) (:STEP (0 0 2 2 0)) (:STEP (0 0 1 2 1))
    (:STEP (0 0 2 1 2)) (:STEP (2 1 1 2 1)) (:STEP (0 1 1 2 1))
    (:STEP (0 2 1 1 2)))
 (+ (:STEP (1 1 2 2 0)) (:STEP (1 1 2 2 1)) (:STEP (1 1 0 2 0))
    (:STEP (1 1 2 0 2)) (:STEP (2 0 0 2 0)) (:STEP (1 0 0 2 0))
    (:STEP (1 2 0 0 2)))
 (+ (:STEP (0 0 1 0 2)) (:STEP (1 0 0 1 2)) (:STEP (1 0 0 1 0)))
 (+ (:STEP (0 0 1 0 1)) (:STEP (2 0 1 0 1)) (:STEP (2 0 0 1 0))
    (:STEP (1 0 1 0 1)) (:STEP (1 2 1 0 1)) (:STEP (1 2 0 1 0))
    (:STEP (0 0 2 0 1)) (:STEP (1 0 0 2 0)) (:STEP (0 0 1 2 1))
    (:STEP (1 0 0 1 2)))
 (+ (:STEP (1 1 0 0 1)) (:STEP (2 1 0 0 1)) (:STEP (2 1 1 0 0))
    (:STEP (0 1 0 0 1)) (:STEP (0 2 0 0 1)) (:STEP (0 2 1 0 0))
    (:STEP (0 0 2 0 1)) (:STEP (0 0 1 0 1)) (:STEP (0 0 1 2 1))
    (:STEP (0 0 1 2 0)) (:STEP (0 0 1 1 2)))
 (+ (:STEP (0 0 1 0 2)) (:STEP (2 0 1 0 2)) (:STEP (2 0 0 1 2))
    (:STEP (2 0 0 1 0)) (:STEP (1 0 1 0 2)) (:STEP (1 2 1 0 2))
    (:STEP (1 2 0 1 2)) (:STEP (1 2 0 1 0)) (:STEP (0 0 2 0 2))
    (:STEP (1 0 0 2 0)))
 (+ (:STEP (1 1 0 0 2)) (:STEP (2 1 0 0 2)) (:STEP (2 1 1 0 0))
    (:STEP (0 1 0 0 2)) (:STEP (0 2 0 0 2)) (:STEP (0 2 1 0 0))
    (:STEP (0 0 2 0 2)) (:STEP (0 0 1 0 2)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (0 0 2 0 1)) (:STEP (2 0 0 2 0)) (:STEP (0 0 1 2 1))
    (:STEP (2 0 1 2 1)) (:STEP (2 0 0 1 2)) (:STEP (1 0 1 2 1))
    (:STEP (1 2 1 2 1)) (:STEP (1 2 0 2 1)) (:STEP (1 2 0 1 2)))
 (+ (:STEP (1 1 2 1 0)) (:STEP (2 1 1 2 1)) (:STEP (1 1 0 2 0))
    (:STEP (2 1 0 2 0)) (:STEP (2 1 1 0 2)) (:STEP (0 1 0 2 0))
    (:STEP (0 2 0 2 0)) (:STEP (0 2 1 2 0)) (:STEP (0 2 1 0 2)))
 (+ (:STEP (0 0 1 1 2)) (:STEP (0 0 1 1 0)))
 (+ (:STEP (1 0 1 0 2)) (:STEP (0 1 0 1 2)) (:STEP (0 1 0 1 0)))
 (+ (:STEP (0 0 2 1 0)) (:STEP (0 1 1 0 1)) (:STEP (2 1 1 0 1))
    (:STEP (2 0 1 1 0)) (:STEP (0 0 1 2 1)) (:STEP (0 0 1 2 0))
    (:STEP (0 0 1 1 2)))
 (+ (:STEP (1 1 0 0 1)) (:STEP (1 1 2 0 0)) (:STEP (1 0 0 0 1))
    (:STEP (2 0 0 0 1)) (:STEP (2 1 0 0 0)) (:STEP (1 0 2 0 1))
    (:STEP (0 1 2 0 1)) (:STEP (0 1 0 2 0)) (:STEP (1 0 1 2 1))
    (:STEP (0 1 0 1 2)))
 (+ (:STEP (0 0 2 1 2)) (:STEP (0 0 2 1 0)) (:STEP (0 1 1 0 2))
    (:STEP (2 1 1 0 2)) (:STEP (2 0 1 1 2)) (:STEP (2 0 1 1 0))
    (:STEP (0 0 1 2 0)))
 (+ (:STEP (1 1 0 0 2)) (:STEP (1 1 2 0 0)) (:STEP (1 0 0 0 2))
    (:STEP (2 0 0 0 2)) (:STEP (2 1 0 0 0)) (:STEP (1 0 2 0 2))
    (:STEP (0 1 2 0 2)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (0 0 2 2 1)) (:STEP (0 0 2 2 0)) (:STEP (0 0 1 2 1))
    (:STEP (0 0 2 1 2)) (:STEP (0 1 1 2 1)) (:STEP (2 1 1 2 1))
    (:STEP (2 0 1 1 2)))
 (+ (:STEP (1 1 2 2 0)) (:STEP (1 1 2 2 1)) (:STEP (1 1 0 2 0))
    (:STEP (1 1 2 0 2)) (:STEP (1 0 0 2 0)) (:STEP (2 0 0 2 0))
    (:STEP (2 1 0 0 2))))
STEENROD> (length *DEG4QUAD-BASIS*)
66
; compiling (DEFPARAMETER *ALL-THINGS* ...)
STEENROD> (length *all-things*)

87
STEENROD> (translate (:step (0 1 0 2 0)))
; in: TRANSLATE (:STEP (0 1 0 2 0))
;     (0 1 0 2 0)
; 
; caught ERROR:
;   illegal function call
; 
; compilation unit finished
;   caught 1 ERROR condition
; Evaluation aborted on #<SB-INT:COMPILED-PROGRAM-ERROR {1007C304A3}>.
STEENROD> (translate '(:step (0 1 0 2 0)))
(:VEC 74)
STEENROD> *sparse-mx*
(((:VEC 8) (:VEC 0) (:VEC 74)) ((:VEC 10) (:VEC 1) (:VEC 84))
 ((:VEC 13) (:VEC 2)) ((:VEC 35) (:VEC 72)) ((:VEC 33) (:VEC 5) (:VEC 84))
 ((:VEC 37) (:VEC 6) (:VEC 74)) ((:VEC 44) (:VEC 7)) ((:VEC 65) (:VEC 73))
 ((:VEC 8) (:VEC 9) (:VEC 74)) ((:VEC 10) (:VEC 11) (:VEC 67))
 ((:VEC 13) (:VEC 15)) ((:VEC 35) (:VEC 32)) ((:VEC 63) (:VEC 18) (:VEC 67))
 ((:VEC 68) (:VEC 19) (:VEC 84)) ((:VEC 77) (:VEC 20)) ((:VEC 83) (:VEC 21))
 (26) ((:VEC 33) (:VEC 36) (:VEC 84)) ((:VEC 37) (:VEC 40) (:VEC 67))
 ((:VEC 44) (:VEC 47)) ((:VEC 65) (:VEC 51)) (56) (62)
 ((:VEC 63) (:VEC 66) (:VEC 67)) ((:VEC 68) (:VEC 71) (:VEC 74))
 ((:VEC 77) (:VEC 80)) ((:VEC 83) (:VEC 86))
 ((:VEC 23) (:VEC 8) (:VEC 25) (:VEC 0) (:VEC 59) (:VEC 74) (:VEC 61)
  (:VEC 62))
 ((:VEC 27) (:VEC 10) (:VEC 29) (:VEC 1) (:VEC 30) (:VEC 84) (:VEC 76)
  (:VEC 26))
 ((:VEC 32) (:VEC 13) (:VEC 8) (:VEC 35) (:VEC 2) (:VEC 0) (:VEC 72) (:VEC 74))
 ((:VEC 86) (:VEC 10) (:VEC 39) (:VEC 1) (:VEC 41) (:VEC 84))
 ((:VEC NIL) (:VEC 49) (:VEC 43) (:VEC 13) (:VEC 45) (:VEC 2))
 ((:VEC NIL) (:VEC 45) (:VEC 48) (:VEC 35) (:VEC 49) (:VEC 72))
 ((:VEC 31) (:VEC 33) (:VEC 3) (:VEC 25) (:VEC 24) (:VEC 59) (:VEC 5) (:VEC 30)
  (:VEC 84) (:VEC 76) (:VEC 26))
 ((:VEC NIL) (:VEC 37) (:VEC 4) (:VEC 29) (:VEC 28) (:VEC 60) (:VEC 6)
  (:VEC 59) (:VEC 74) (:VEC 61) (:VEC 62))
 ((:VEC 42) (:VEC 44) (:VEC 33) (:VEC 51) (:VEC 35) (:VEC 34) (:VEC 72)
  (:VEC 7) (:VEC 5) (:VEC 41) (:VEC 84))
 ((:VEC NIL) (:VEC 37) (:VEC 21) (:VEC 39) (:VEC 38) (:VEC 73) (:VEC 6)
  (:VEC 72) (:VEC 74))
 ((:VEC 30) (:VEC 85) (:VEC 76) (:VEC 44) (:VEC 12) (:VEC 45) (:VEC 61)
  (:VEC 7))
 ((:VEC NIL) (:VEC 79) (:VEC 82) (:VEC 65) (:VEC 16) (:VEC 49) (:VEC 74)
  (:VEC 73))
 ((:VEC 3) (:VEC 8) (:VEC 24) (:VEC 9) (:VEC 59) (:VEC 60) (:VEC 74) (:VEC 61)
  (:VEC 62))
 ((:VEC 4) (:VEC 10) (:VEC 28) (:VEC 11) (:VEC 30) (:VEC 31) (:VEC 76)
  (:VEC 67) (:VEC 56))
 ((:VEC 51) (:VEC 13) (:VEC 8) (:VEC 34) (:VEC 15) (:VEC 9) (:VEC 72) (:VEC 73)
  (:VEC 74))
 ((:VEC 21) (:VEC 10) (:VEC 38) (:VEC 11) (:VEC 41) (:VEC 42) (:VEC 67))
 ((:VEC NIL) (:VEC 49) (:VEC 12) (:VEC 13) (:VEC 61) (:VEC 14) (:VEC 15))
 ((:VEC NIL) (:VEC 45) (:VEC 16) (:VEC 35) (:VEC 74) (:VEC 17) (:VEC 32))
 ((:VEC 63) (:VEC 55) (:VEC 54) (:VEC 18) (:VEC 76) (:VEC 67) (:VEC 56))
 ((:VEC NIL) (:VEC 68) (:VEC 58) (:VEC 57) (:VEC 19) (:VEC 30) (:VEC 84)
  (:VEC 76) (:VEC 26))
 ((:VEC 77) (:VEC 63) (:VEC 65) (:VEC 64) (:VEC 20) (:VEC 18) (:VEC 67))
 ((:VEC NIL) (:VEC 68) (:VEC 70) (:VEC 69) (:VEC 19) (:VEC 41) (:VEC 84))
 ((:VEC NIL) (:VEC 75) (:VEC 76) (:VEC 77) (:VEC 79) (:VEC 78) (:VEC 20))
 ((:VEC NIL) (:VEC 81) (:VEC 82) (:VEC 83) (:VEC 85) (:VEC 84) (:VEC 21))
 ((:VEC 42) (:VEC 26) (:VEC 22))
 ((:VEC 31) (:VEC 23) (:VEC 33) (:VEC 24) (:VEC 25) (:VEC 36) (:VEC 30)
  (:VEC 84) (:VEC 76) (:VEC 26))
 ((:VEC NIL) (:VEC 27) (:VEC 37) (:VEC 28) (:VEC 29) (:VEC 40) (:VEC 30)
  (:VEC 31) (:VEC 76) (:VEC 67) (:VEC 56))
 ((:VEC 42) (:VEC 32) (:VEC 44) (:VEC 33) (:VEC 34) (:VEC 35) (:VEC 47)
  (:VEC 36) (:VEC 41) (:VEC 84))
 ((:VEC NIL) (:VEC 86) (:VEC 37) (:VEC 38) (:VEC 39) (:VEC 40) (:VEC 41)
  (:VEC 42) (:VEC 67))
 ((:VEC 30) (:VEC 85) (:VEC 76) (:VEC 43) (:VEC 44) (:VEC 61) (:VEC 45)
  (:VEC 46) (:VEC 47))
 ((:VEC NIL) (:VEC 79) (:VEC 82) (:VEC 48) (:VEC 65) (:VEC 74) (:VEC 49)
  (:VEC 50) (:VEC 51))
 ((:VEC 56) (:VEC 52)) ((:VEC 34) (:VEC 62) (:VEC 53))
 ((:VEC 63) (:VEC 54) (:VEC 55) (:VEC 66) (:VEC 76) (:VEC 67) (:VEC 56))
 ((:VEC NIL) (:VEC 68) (:VEC 57) (:VEC 58) (:VEC 71) (:VEC 59) (:VEC 60)
  (:VEC 74) (:VEC 61) (:VEC 62))
 ((:VEC 77) (:VEC 63) (:VEC 64) (:VEC 65) (:VEC 80) (:VEC 66) (:VEC 67))
 ((:VEC NIL) (:VEC 68) (:VEC 69) (:VEC 70) (:VEC 71) (:VEC 72) (:VEC 73)
  (:VEC 74))
 ((:VEC NIL) (:VEC 75) (:VEC 76) (:VEC 77) (:VEC 78) (:VEC 79) (:VEC 80))
 ((:VEC NIL) (:VEC 81) (:VEC 82) (:VEC 83) (:VEC 84) (:VEC 85) (:VEC 86)))
; compiling (DEFPARAMETER *DEG4QUAD-BASIS* ...)
STEENROD> *DEG4QUAD-BASIS*

((+ (:STEP (0 2 0 1 0)) (:STEP (0 1 2 1 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (1 2 1 0 0)) (:STEP (1 0 2 0 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (0 2 0 1 2)) (:STEP (0 1 2 1 2)))
 (+ (:STEP (1 2 1 0 2)) (:STEP (1 0 2 0 2)))
 (+ (:STEP (2 0 0 1 0)) (:STEP (1 0 2 1 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (2 1 1 0 0)) (:STEP (0 1 2 0 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (2 0 0 1 2)) (:STEP (1 0 2 1 2)))
 (+ (:STEP (2 1 1 0 2)) (:STEP (0 1 2 0 2)))
 (+ (:STEP (0 2 0 1 0)) (:STEP (2 1 0 1 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (1 2 1 0 0)) (:STEP (2 0 1 0 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (0 2 0 1 2)) (:STEP (2 1 0 1 2)))
 (+ (:STEP (1 2 1 0 2)) (:STEP (2 0 1 0 2)))
 (+ (:STEP (0 0 2 1 0)) (:STEP (0 2 1 1 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (1 1 2 0 0)) (:STEP (1 2 0 0 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (0 0 2 1 2)) (:STEP (0 2 1 1 2)))
 (+ (:STEP (1 1 2 0 2)) (:STEP (1 2 0 0 2))) (:STEP (1 0 0 1 2))
 (+ (:STEP (2 0 0 1 0)) (:STEP (1 2 0 1 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (2 1 1 0 0)) (:STEP (0 2 1 0 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (2 0 0 1 2)) (:STEP (1 2 0 1 2)))
 (+ (:STEP (2 1 1 0 2)) (:STEP (0 2 1 0 2))) (:STEP (0 0 1 1 2))
 (:STEP (0 1 0 1 2))
 (+ (:STEP (0 0 2 1 0)) (:STEP (2 0 1 1 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (1 1 2 0 0)) (:STEP (2 1 0 0 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (0 0 2 1 2)) (:STEP (2 0 1 1 2)))
 (+ (:STEP (1 1 2 0 2)) (:STEP (2 1 0 0 2)))
 (+ (:STEP (2 0 1 0 1)) (:STEP (0 2 0 1 0)) (:STEP (1 2 1 0 1))
    (:STEP (0 1 2 1 0)) (:STEP (1 0 2 0 1)) (:STEP (0 1 0 2 0))
    (:STEP (1 0 1 2 1)) (:STEP (0 1 0 1 2)))
 (+ (:STEP (2 1 0 0 1)) (:STEP (1 2 1 0 0)) (:STEP (0 2 0 0 1))
    (:STEP (1 0 2 0 0)) (:STEP (0 0 2 0 1)) (:STEP (1 0 0 2 0))
    (:STEP (0 0 1 2 1)) (:STEP (1 0 0 1 2)))
 (+ (:STEP (2 0 1 0 2)) (:STEP (0 2 0 1 2)) (:STEP (0 2 0 1 0))
    (:STEP (1 2 1 0 2)) (:STEP (0 1 2 1 2)) (:STEP (0 1 2 1 0))
    (:STEP (1 0 2 0 2)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (2 1 0 0 2)) (:STEP (1 2 1 0 0)) (:STEP (0 2 0 0 2))
    (:STEP (1 0 2 0 0)) (:STEP (0 0 2 0 2)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (2 0 2 0 1)) (:STEP (0 2 0 2 0)) (:STEP (2 0 1 2 1))
    (:STEP (0 2 0 1 2)) (:STEP (1 2 1 2 1)) (:STEP (0 1 2 1 2)))
 (+ (:STEP (2 1 2 1 0)) (:STEP (1 2 1 2 1)) (:STEP (2 1 0 2 0))
    (:STEP (1 2 1 0 2)) (:STEP (0 2 0 2 0)) (:STEP (1 0 2 0 2)))
 (+ (:STEP (0 0 1 0 1)) (:STEP (2 0 0 1 0)) (:STEP (0 2 1 0 1))
    (:STEP (1 2 1 0 1)) (:STEP (1 0 1 0 1)) (:STEP (1 0 2 0 1))
    (:STEP (1 0 2 1 0)) (:STEP (0 0 2 0 1)) (:STEP (1 0 0 2 0))
    (:STEP (0 0 1 2 1)) (:STEP (1 0 0 1 2)))
 (+ (:STEP (1 1 0 0 1)) (:STEP (2 1 1 0 0)) (:STEP (1 2 0 0 1))
    (:STEP (0 2 0 0 1)) (:STEP (0 1 0 0 1)) (:STEP (0 1 2 0 1))
    (:STEP (0 1 2 0 0)) (:STEP (1 0 2 0 1)) (:STEP (0 1 0 2 0))
    (:STEP (1 0 1 2 1)) (:STEP (0 1 0 1 2)))
 (+ (:STEP (0 0 1 0 2)) (:STEP (2 0 0 1 2)) (:STEP (2 0 0 1 0))
    (:STEP (0 2 1 0 2)) (:STEP (1 2 1 0 2)) (:STEP (1 0 1 0 2))
    (:STEP (1 0 2 0 2)) (:STEP (1 0 2 1 2)) (:STEP (1 0 2 1 0))
    (:STEP (0 0 2 0 2)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (1 1 0 0 2)) (:STEP (2 1 1 0 0)) (:STEP (1 2 0 0 2))
    (:STEP (0 2 0 0 2)) (:STEP (0 1 0 0 2)) (:STEP (0 1 2 0 2))
    (:STEP (0 1 2 0 0)) (:STEP (1 0 2 0 2)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (0 0 2 0 1)) (:STEP (2 0 0 2 0)) (:STEP (0 0 1 2 1))
    (:STEP (2 0 0 1 2)) (:STEP (0 2 1 2 1)) (:STEP (1 2 1 2 1))
    (:STEP (1 0 1 2 1)) (:STEP (1 0 2 1 2)))
 (+ (:STEP (1 1 2 1 0)) (:STEP (2 1 1 2 1)) (:STEP (1 1 0 2 0))
    (:STEP (2 1 1 0 2)) (:STEP (1 2 0 2 0)) (:STEP (0 2 0 2 0))
    (:STEP (0 1 0 2 0)) (:STEP (0 1 2 0 2)))
 (+ (:STEP (0 2 1 0 1)) (:STEP (0 2 0 1 0)) (:STEP (1 0 1 0 1))
    (:STEP (2 1 0 1 0)) (:STEP (1 0 2 0 1)) (:STEP (0 1 2 0 1))
    (:STEP (0 1 0 2 0)) (:STEP (1 0 1 2 1)) (:STEP (0 1 0 1 2)))
 (+ (:STEP (1 2 0 0 1)) (:STEP (1 2 1 0 0)) (:STEP (0 1 0 0 1))
    (:STEP (2 0 1 0 0)) (:STEP (0 0 2 0 1)) (:STEP (0 0 1 0 1))
    (:STEP (0 0 1 2 1)) (:STEP (0 0 1 2 0)) (:STEP (0 0 1 1 2)))
 (+ (:STEP (0 2 1 0 2)) (:STEP (0 2 0 1 2)) (:STEP (0 2 0 1 0))
    (:STEP (1 0 1 0 2)) (:STEP (2 1 0 1 2)) (:STEP (2 1 0 1 0))
    (:STEP (1 0 2 0 2)) (:STEP (0 1 2 0 2)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (1 2 0 0 2)) (:STEP (1 2 1 0 0)) (:STEP (0 1 0 0 2))
    (:STEP (2 0 1 0 0)) (:STEP (0 0 2 0 2)) (:STEP (0 0 1 0 2))
    (:STEP (0 0 1 2 0)))
 (+ (:STEP (2 0 2 0 1)) (:STEP (0 2 0 2 0)) (:STEP (0 2 1 2 1))
    (:STEP (0 2 0 1 2)) (:STEP (1 0 1 2 1)) (:STEP (2 1 0 2 1))
    (:STEP (2 1 0 1 2)))
 (+ (:STEP (2 1 2 1 0)) (:STEP (1 2 1 2 1)) (:STEP (1 2 0 2 0))
    (:STEP (1 2 1 0 2)) (:STEP (0 1 0 2 0)) (:STEP (2 0 1 2 0))
    (:STEP (2 0 1 0 2)))
 (+ (:STEP (0 0 2 1 0)) (:STEP (2 1 1 0 1)) (:STEP (0 1 1 0 1))
    (:STEP (0 2 1 1 0)) (:STEP (0 0 1 2 1)) (:STEP (0 0 1 2 0))
    (:STEP (0 0 1 1 2)))
 (+ (:STEP (1 1 0 0 1)) (:STEP (1 1 2 0 0)) (:STEP (2 0 0 0 1))
    (:STEP (1 0 0 0 1)) (:STEP (1 2 0 0 0)) (:STEP (0 0 2 0 1))
    (:STEP (1 0 0 2 0)) (:STEP (0 0 1 2 1)) (:STEP (1 0 0 1 2)))
 (+ (:STEP (0 0 2 1 2)) (:STEP (0 0 2 1 0)) (:STEP (2 1 1 0 2))
    (:STEP (0 1 1 0 2)) (:STEP (0 2 1 1 2)) (:STEP (0 2 1 1 0))
    (:STEP (0 0 1 2 0)))
 (+ (:STEP (1 1 0 0 2)) (:STEP (1 1 2 0 0)) (:STEP (2 0 0 0 2))
    (:STEP (1 0 0 0 2)) (:STEP (1 2 0 0 0)) (:STEP (0 0 2 0 2))
    (:STEP (1 0 0 2 0)))
 (+ (:STEP (0 0 2 2 1)) (:STEP (0 0 2 2 0)) (:STEP (0 0 1 2 1))
    (:STEP (0 0 2 1 2)) (:STEP (2 1 1 2 1)) (:STEP (0 1 1 2 1))
    (:STEP (0 2 1 1 2)))
 (+ (:STEP (1 1 2 2 0)) (:STEP (1 1 2 2 1)) (:STEP (1 1 0 2 0))
    (:STEP (1 1 2 0 2)) (:STEP (2 0 0 2 0)) (:STEP (1 0 0 2 0))
    (:STEP (1 2 0 0 2)))
 (+ (:STEP (0 0 1 0 2)) (:STEP (1 0 0 1 2)) (:STEP (1 0 0 1 0)))
 (+ (:STEP (0 0 1 0 1)) (:STEP (2 0 1 0 1)) (:STEP (2 0 0 1 0))
    (:STEP (1 0 1 0 1)) (:STEP (1 2 1 0 1)) (:STEP (1 2 0 1 0))
    (:STEP (0 0 2 0 1)) (:STEP (1 0 0 2 0)) (:STEP (0 0 1 2 1))
    (:STEP (1 0 0 1 2)))
 (+ (:STEP (1 1 0 0 1)) (:STEP (2 1 0 0 1)) (:STEP (2 1 1 0 0))
    (:STEP (0 1 0 0 1)) (:STEP (0 2 0 0 1)) (:STEP (0 2 1 0 0))
    (:STEP (0 0 2 0 1)) (:STEP (0 0 1 0 1)) (:STEP (0 0 1 2 1))
    (:STEP (0 0 1 2 0)) (:STEP (0 0 1 1 2)))
 (+ (:STEP (0 0 1 0 2)) (:STEP (2 0 1 0 2)) (:STEP (2 0 0 1 2))
    (:STEP (2 0 0 1 0)) (:STEP (1 0 1 0 2)) (:STEP (1 2 1 0 2))
    (:STEP (1 2 0 1 2)) (:STEP (1 2 0 1 0)) (:STEP (0 0 2 0 2))
    (:STEP (1 0 0 2 0)))
 (+ (:STEP (1 1 0 0 2)) (:STEP (2 1 0 0 2)) (:STEP (2 1 1 0 0))
    (:STEP (0 1 0 0 2)) (:STEP (0 2 0 0 2)) (:STEP (0 2 1 0 0))
    (:STEP (0 0 2 0 2)) (:STEP (0 0 1 0 2)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (0 0 2 0 1)) (:STEP (2 0 0 2 0)) (:STEP (0 0 1 2 1))
    (:STEP (2 0 1 2 1)) (:STEP (2 0 0 1 2)) (:STEP (1 0 1 2 1))
    (:STEP (1 2 1 2 1)) (:STEP (1 2 0 2 1)) (:STEP (1 2 0 1 2)))
 (+ (:STEP (1 1 2 1 0)) (:STEP (2 1 1 2 1)) (:STEP (1 1 0 2 0))
    (:STEP (2 1 0 2 0)) (:STEP (2 1 1 0 2)) (:STEP (0 1 0 2 0))
    (:STEP (0 2 0 2 0)) (:STEP (0 2 1 2 0)) (:STEP (0 2 1 0 2)))
 (+ (:STEP (0 0 1 1 2)) (:STEP (0 0 1 1 0)))
 (+ (:STEP (1 0 1 0 2)) (:STEP (0 1 0 1 2)) (:STEP (0 1 0 1 0)))
 (+ (:STEP (0 0 2 1 0)) (:STEP (0 1 1 0 1)) (:STEP (2 1 1 0 1))
    (:STEP (2 0 1 1 0)) (:STEP (0 0 1 2 1)) (:STEP (0 0 1 2 0))
    (:STEP (0 0 1 1 2)))
 (+ (:STEP (1 1 0 0 1)) (:STEP (1 1 2 0 0)) (:STEP (1 0 0 0 1))
    (:STEP (2 0 0 0 1)) (:STEP (2 1 0 0 0)) (:STEP (1 0 2 0 1))
    (:STEP (0 1 2 0 1)) (:STEP (0 1 0 2 0)) (:STEP (1 0 1 2 1))
    (:STEP (0 1 0 1 2)))
 (+ (:STEP (0 0 2 1 2)) (:STEP (0 0 2 1 0)) (:STEP (0 1 1 0 2))
    (:STEP (2 1 1 0 2)) (:STEP (2 0 1 1 2)) (:STEP (2 0 1 1 0))
    (:STEP (0 0 1 2 0)))
 (+ (:STEP (1 1 0 0 2)) (:STEP (1 1 2 0 0)) (:STEP (1 0 0 0 2))
    (:STEP (2 0 0 0 2)) (:STEP (2 1 0 0 0)) (:STEP (1 0 2 0 2))
    (:STEP (0 1 2 0 2)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (0 0 2 2 1)) (:STEP (0 0 2 2 0)) (:STEP (0 0 1 2 1))
    (:STEP (0 0 2 1 2)) (:STEP (0 1 1 2 1)) (:STEP (2 1 1 2 1))
    (:STEP (2 0 1 1 2)))
 (+ (:STEP (1 1 2 2 0)) (:STEP (1 1 2 2 1)) (:STEP (1 1 0 2 0))
    (:STEP (1 1 2 0 2)) (:STEP (1 0 0 2 0)) (:STEP (2 0 0 2 0))
    (:STEP (2 1 0 0 2))))
STEENROD> *sparse-mx*
(((:VEC 8) (:VEC 0) (:VEC 74)) ((:VEC 10) (:VEC 1) (:VEC 84))
 ((:VEC 13) (:VEC 2)) ((:VEC 35) (:VEC 72)) ((:VEC 33) (:VEC 5) (:VEC 84))
 ((:VEC 37) (:VEC 6) (:VEC 74)) ((:VEC 44) (:VEC 7)) ((:VEC 65) (:VEC 73))
 ((:VEC 8) (:VEC 9) (:VEC 74)) ((:VEC 10) (:VEC 11) (:VEC 67))
 ((:VEC 13) (:VEC 15)) ((:VEC 35) (:VEC 32)) ((:VEC 63) (:VEC 18) (:VEC 67))
 ((:VEC 68) (:VEC 19) (:VEC 84)) ((:VEC 77) (:VEC 20)) ((:VEC 83) (:VEC 21))
 (26) ((:VEC 33) (:VEC 36) (:VEC 84)) ((:VEC 37) (:VEC 40) (:VEC 67))
 ((:VEC 44) (:VEC 47)) ((:VEC 65) (:VEC 51)) (56) (62)
 ((:VEC 63) (:VEC 66) (:VEC 67)) ((:VEC 68) (:VEC 71) (:VEC 74))
 ((:VEC 77) (:VEC 80)) ((:VEC 83) (:VEC 86))
 ((:VEC 23) (:VEC 8) (:VEC 25) (:VEC 0) (:VEC 59) (:VEC 74) (:VEC 61)
  (:VEC 62))
 ((:VEC 27) (:VEC 10) (:VEC 29) (:VEC 1) (:VEC 30) (:VEC 84) (:VEC 76)
  (:VEC 26))
 ((:VEC 32) (:VEC 13) (:VEC 8) (:VEC 35) (:VEC 2) (:VEC 0) (:VEC 72) (:VEC 74))
 ((:VEC 86) (:VEC 10) (:VEC 39) (:VEC 1) (:VEC 41) (:VEC 84))
 ((:VEC NIL) (:VEC 49) (:VEC 43) (:VEC 13) (:VEC 45) (:VEC 2))
 ((:VEC NIL) (:VEC 45) (:VEC 48) (:VEC 35) (:VEC 49) (:VEC 72))
 ((:VEC 31) (:VEC 33) (:VEC 3) (:VEC 25) (:VEC 24) (:VEC 59) (:VEC 5) (:VEC 30)
  (:VEC 84) (:VEC 76) (:VEC 26))
 ((:VEC NIL) (:VEC 37) (:VEC 4) (:VEC 29) (:VEC 28) (:VEC 60) (:VEC 6)
  (:VEC 59) (:VEC 74) (:VEC 61) (:VEC 62))
 ((:VEC 42) (:VEC 44) (:VEC 33) (:VEC 51) (:VEC 35) (:VEC 34) (:VEC 72)
  (:VEC 7) (:VEC 5) (:VEC 41) (:VEC 84))
 ((:VEC NIL) (:VEC 37) (:VEC 21) (:VEC 39) (:VEC 38) (:VEC 73) (:VEC 6)
  (:VEC 72) (:VEC 74))
 ((:VEC 30) (:VEC 85) (:VEC 76) (:VEC 44) (:VEC 12) (:VEC 45) (:VEC 61)
  (:VEC 7))
 ((:VEC NIL) (:VEC 79) (:VEC 82) (:VEC 65) (:VEC 16) (:VEC 49) (:VEC 74)
  (:VEC 73))
 ((:VEC 3) (:VEC 8) (:VEC 24) (:VEC 9) (:VEC 59) (:VEC 60) (:VEC 74) (:VEC 61)
  (:VEC 62))
 ((:VEC 4) (:VEC 10) (:VEC 28) (:VEC 11) (:VEC 30) (:VEC 31) (:VEC 76)
  (:VEC 67) (:VEC 56))
 ((:VEC 51) (:VEC 13) (:VEC 8) (:VEC 34) (:VEC 15) (:VEC 9) (:VEC 72) (:VEC 73)
  (:VEC 74))
 ((:VEC 21) (:VEC 10) (:VEC 38) (:VEC 11) (:VEC 41) (:VEC 42) (:VEC 67))
 ((:VEC NIL) (:VEC 49) (:VEC 12) (:VEC 13) (:VEC 61) (:VEC 14) (:VEC 15))
 ((:VEC NIL) (:VEC 45) (:VEC 16) (:VEC 35) (:VEC 74) (:VEC 17) (:VEC 32))
 ((:VEC 63) (:VEC 55) (:VEC 54) (:VEC 18) (:VEC 76) (:VEC 67) (:VEC 56))
 ((:VEC NIL) (:VEC 68) (:VEC 58) (:VEC 57) (:VEC 19) (:VEC 30) (:VEC 84)
  (:VEC 76) (:VEC 26))
 ((:VEC 77) (:VEC 63) (:VEC 65) (:VEC 64) (:VEC 20) (:VEC 18) (:VEC 67))
 ((:VEC NIL) (:VEC 68) (:VEC 70) (:VEC 69) (:VEC 19) (:VEC 41) (:VEC 84))
 ((:VEC NIL) (:VEC 75) (:VEC 76) (:VEC 77) (:VEC 79) (:VEC 78) (:VEC 20))
 ((:VEC NIL) (:VEC 81) (:VEC 82) (:VEC 83) (:VEC 85) (:VEC 84) (:VEC 21))
 ((:VEC 42) (:VEC 26) (:VEC 22))
 ((:VEC 31) (:VEC 23) (:VEC 33) (:VEC 24) (:VEC 25) (:VEC 36) (:VEC 30)
  (:VEC 84) (:VEC 76) (:VEC 26))
 ((:VEC NIL) (:VEC 27) (:VEC 37) (:VEC 28) (:VEC 29) (:VEC 40) (:VEC 30)
  (:VEC 31) (:VEC 76) (:VEC 67) (:VEC 56))
 ((:VEC 42) (:VEC 32) (:VEC 44) (:VEC 33) (:VEC 34) (:VEC 35) (:VEC 47)
  (:VEC 36) (:VEC 41) (:VEC 84))
 ((:VEC NIL) (:VEC 86) (:VEC 37) (:VEC 38) (:VEC 39) (:VEC 40) (:VEC 41)
  (:VEC 42) (:VEC 67))
 ((:VEC 30) (:VEC 85) (:VEC 76) (:VEC 43) (:VEC 44) (:VEC 61) (:VEC 45)
  (:VEC 46) (:VEC 47))
 ((:VEC NIL) (:VEC 79) (:VEC 82) (:VEC 48) (:VEC 65) (:VEC 74) (:VEC 49)
  (:VEC 50) (:VEC 51))
 ((:VEC 56) (:VEC 52)) ((:VEC 34) (:VEC 62) (:VEC 53))
 ((:VEC 63) (:VEC 54) (:VEC 55) (:VEC 66) (:VEC 76) (:VEC 67) (:VEC 56))
 ((:VEC NIL) (:VEC 68) (:VEC 57) (:VEC 58) (:VEC 71) (:VEC 59) (:VEC 60)
  (:VEC 74) (:VEC 61) (:VEC 62))
 ((:VEC 77) (:VEC 63) (:VEC 64) (:VEC 65) (:VEC 80) (:VEC 66) (:VEC 67))
 ((:VEC NIL) (:VEC 68) (:VEC 69) (:VEC 70) (:VEC 71) (:VEC 72) (:VEC 73)
  (:VEC 74))
 ((:VEC NIL) (:VEC 75) (:VEC 76) (:VEC 77) (:VEC 78) (:VEC 79) (:VEC 80))
 ((:VEC NIL) (:VEC 81) (:VEC 82) (:VEC 83) (:VEC 84) (:VEC 85) (:VEC 86)))
STEENROD> *DEG4QUAD-BASIS*
((+ (:STEP (0 2 0 1 0)) (:STEP (0 1 2 1 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (1 2 1 0 0)) (:STEP (1 0 2 0 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (0 2 0 1 2)) (:STEP (0 1 2 1 2)))
 (+ (:STEP (1 2 1 0 2)) (:STEP (1 0 2 0 2)))
 (+ (:STEP (2 0 0 1 0)) (:STEP (1 0 2 1 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (2 1 1 0 0)) (:STEP (0 1 2 0 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (2 0 0 1 2)) (:STEP (1 0 2 1 2)))
 (+ (:STEP (2 1 1 0 2)) (:STEP (0 1 2 0 2)))
 (+ (:STEP (0 2 0 1 0)) (:STEP (2 1 0 1 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (1 2 1 0 0)) (:STEP (2 0 1 0 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (0 2 0 1 2)) (:STEP (2 1 0 1 2)))
 (+ (:STEP (1 2 1 0 2)) (:STEP (2 0 1 0 2)))
 (+ (:STEP (0 0 2 1 0)) (:STEP (0 2 1 1 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (1 1 2 0 0)) (:STEP (1 2 0 0 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (0 0 2 1 2)) (:STEP (0 2 1 1 2)))
 (+ (:STEP (1 1 2 0 2)) (:STEP (1 2 0 0 2))) (:STEP (1 0 0 1 2))
 (+ (:STEP (2 0 0 1 0)) (:STEP (1 2 0 1 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (2 1 1 0 0)) (:STEP (0 2 1 0 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (2 0 0 1 2)) (:STEP (1 2 0 1 2)))
 (+ (:STEP (2 1 1 0 2)) (:STEP (0 2 1 0 2))) (:STEP (0 0 1 1 2))
 (:STEP (0 1 0 1 2))
 (+ (:STEP (0 0 2 1 0)) (:STEP (2 0 1 1 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (1 1 2 0 0)) (:STEP (2 1 0 0 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (0 0 2 1 2)) (:STEP (2 0 1 1 2)))
 (+ (:STEP (1 1 2 0 2)) (:STEP (2 1 0 0 2)))
 (+ (:STEP (2 0 1 0 1)) (:STEP (0 2 0 1 0)) (:STEP (1 2 1 0 1))
    (:STEP (0 1 2 1 0)) (:STEP (1 0 2 0 1)) (:STEP (0 1 0 2 0))
    (:STEP (1 0 1 2 1)) (:STEP (0 1 0 1 2)))
 (+ (:STEP (2 1 0 0 1)) (:STEP (1 2 1 0 0)) (:STEP (0 2 0 0 1))
    (:STEP (1 0 2 0 0)) (:STEP (0 0 2 0 1)) (:STEP (1 0 0 2 0))
    (:STEP (0 0 1 2 1)) (:STEP (1 0 0 1 2)))
 (+ (:STEP (2 0 1 0 2)) (:STEP (0 2 0 1 2)) (:STEP (0 2 0 1 0))
    (:STEP (1 2 1 0 2)) (:STEP (0 1 2 1 2)) (:STEP (0 1 2 1 0))
    (:STEP (1 0 2 0 2)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (2 1 0 0 2)) (:STEP (1 2 1 0 0)) (:STEP (0 2 0 0 2))
    (:STEP (1 0 2 0 0)) (:STEP (0 0 2 0 2)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (2 0 2 0 1)) (:STEP (0 2 0 2 0)) (:STEP (2 0 1 2 1))
    (:STEP (0 2 0 1 2)) (:STEP (1 2 1 2 1)) (:STEP (0 1 2 1 2)))
 (+ (:STEP (2 1 2 1 0)) (:STEP (1 2 1 2 1)) (:STEP (2 1 0 2 0))
    (:STEP (1 2 1 0 2)) (:STEP (0 2 0 2 0)) (:STEP (1 0 2 0 2)))
 (+ (:STEP (0 0 1 0 1)) (:STEP (2 0 0 1 0)) (:STEP (0 2 1 0 1))
    (:STEP (1 2 1 0 1)) (:STEP (1 0 1 0 1)) (:STEP (1 0 2 0 1))
    (:STEP (1 0 2 1 0)) (:STEP (0 0 2 0 1)) (:STEP (1 0 0 2 0))
    (:STEP (0 0 1 2 1)) (:STEP (1 0 0 1 2)))
 (+ (:STEP (1 1 0 0 1)) (:STEP (2 1 1 0 0)) (:STEP (1 2 0 0 1))
    (:STEP (0 2 0 0 1)) (:STEP (0 1 0 0 1)) (:STEP (0 1 2 0 1))
    (:STEP (0 1 2 0 0)) (:STEP (1 0 2 0 1)) (:STEP (0 1 0 2 0))
    (:STEP (1 0 1 2 1)) (:STEP (0 1 0 1 2)))
 (+ (:STEP (0 0 1 0 2)) (:STEP (2 0 0 1 2)) (:STEP (2 0 0 1 0))
    (:STEP (0 2 1 0 2)) (:STEP (1 2 1 0 2)) (:STEP (1 0 1 0 2))
    (:STEP (1 0 2 0 2)) (:STEP (1 0 2 1 2)) (:STEP (1 0 2 1 0))
    (:STEP (0 0 2 0 2)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (1 1 0 0 2)) (:STEP (2 1 1 0 0)) (:STEP (1 2 0 0 2))
    (:STEP (0 2 0 0 2)) (:STEP (0 1 0 0 2)) (:STEP (0 1 2 0 2))
    (:STEP (0 1 2 0 0)) (:STEP (1 0 2 0 2)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (0 0 2 0 1)) (:STEP (2 0 0 2 0)) (:STEP (0 0 1 2 1))
    (:STEP (2 0 0 1 2)) (:STEP (0 2 1 2 1)) (:STEP (1 2 1 2 1))
    (:STEP (1 0 1 2 1)) (:STEP (1 0 2 1 2)))
 (+ (:STEP (1 1 2 1 0)) (:STEP (2 1 1 2 1)) (:STEP (1 1 0 2 0))
    (:STEP (2 1 1 0 2)) (:STEP (1 2 0 2 0)) (:STEP (0 2 0 2 0))
    (:STEP (0 1 0 2 0)) (:STEP (0 1 2 0 2)))
 (+ (:STEP (0 2 1 0 1)) (:STEP (0 2 0 1 0)) (:STEP (1 0 1 0 1))
    (:STEP (2 1 0 1 0)) (:STEP (1 0 2 0 1)) (:STEP (0 1 2 0 1))
    (:STEP (0 1 0 2 0)) (:STEP (1 0 1 2 1)) (:STEP (0 1 0 1 2)))
 (+ (:STEP (1 2 0 0 1)) (:STEP (1 2 1 0 0)) (:STEP (0 1 0 0 1))
    (:STEP (2 0 1 0 0)) (:STEP (0 0 2 0 1)) (:STEP (0 0 1 0 1))
    (:STEP (0 0 1 2 1)) (:STEP (0 0 1 2 0)) (:STEP (0 0 1 1 2)))
 (+ (:STEP (0 2 1 0 2)) (:STEP (0 2 0 1 2)) (:STEP (0 2 0 1 0))
    (:STEP (1 0 1 0 2)) (:STEP (2 1 0 1 2)) (:STEP (2 1 0 1 0))
    (:STEP (1 0 2 0 2)) (:STEP (0 1 2 0 2)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (1 2 0 0 2)) (:STEP (1 2 1 0 0)) (:STEP (0 1 0 0 2))
    (:STEP (2 0 1 0 0)) (:STEP (0 0 2 0 2)) (:STEP (0 0 1 0 2))
    (:STEP (0 0 1 2 0)))
 (+ (:STEP (2 0 2 0 1)) (:STEP (0 2 0 2 0)) (:STEP (0 2 1 2 1))
    (:STEP (0 2 0 1 2)) (:STEP (1 0 1 2 1)) (:STEP (2 1 0 2 1))
    (:STEP (2 1 0 1 2)))
 (+ (:STEP (2 1 2 1 0)) (:STEP (1 2 1 2 1)) (:STEP (1 2 0 2 0))
    (:STEP (1 2 1 0 2)) (:STEP (0 1 0 2 0)) (:STEP (2 0 1 2 0))
    (:STEP (2 0 1 0 2)))
 (+ (:STEP (0 0 2 1 0)) (:STEP (2 1 1 0 1)) (:STEP (0 1 1 0 1))
    (:STEP (0 2 1 1 0)) (:STEP (0 0 1 2 1)) (:STEP (0 0 1 2 0))
    (:STEP (0 0 1 1 2)))
 (+ (:STEP (1 1 0 0 1)) (:STEP (1 1 2 0 0)) (:STEP (2 0 0 0 1))
    (:STEP (1 0 0 0 1)) (:STEP (1 2 0 0 0)) (:STEP (0 0 2 0 1))
    (:STEP (1 0 0 2 0)) (:STEP (0 0 1 2 1)) (:STEP (1 0 0 1 2)))
 (+ (:STEP (0 0 2 1 2)) (:STEP (0 0 2 1 0)) (:STEP (2 1 1 0 2))
    (:STEP (0 1 1 0 2)) (:STEP (0 2 1 1 2)) (:STEP (0 2 1 1 0))
    (:STEP (0 0 1 2 0)))
 (+ (:STEP (1 1 0 0 2)) (:STEP (1 1 2 0 0)) (:STEP (2 0 0 0 2))
    (:STEP (1 0 0 0 2)) (:STEP (1 2 0 0 0)) (:STEP (0 0 2 0 2))
    (:STEP (1 0 0 2 0)))
 (+ (:STEP (0 0 2 2 1)) (:STEP (0 0 2 2 0)) (:STEP (0 0 1 2 1))
    (:STEP (0 0 2 1 2)) (:STEP (2 1 1 2 1)) (:STEP (0 1 1 2 1))
    (:STEP (0 2 1 1 2)))
 (+ (:STEP (1 1 2 2 0)) (:STEP (1 1 2 2 1)) (:STEP (1 1 0 2 0))
    (:STEP (1 1 2 0 2)) (:STEP (2 0 0 2 0)) (:STEP (1 0 0 2 0))
    (:STEP (1 2 0 0 2)))
 (+ (:STEP (0 0 1 0 2)) (:STEP (1 0 0 1 2)) (:STEP (1 0 0 1 0)))
 (+ (:STEP (0 0 1 0 1)) (:STEP (2 0 1 0 1)) (:STEP (2 0 0 1 0))
    (:STEP (1 0 1 0 1)) (:STEP (1 2 1 0 1)) (:STEP (1 2 0 1 0))
    (:STEP (0 0 2 0 1)) (:STEP (1 0 0 2 0)) (:STEP (0 0 1 2 1))
    (:STEP (1 0 0 1 2)))
 (+ (:STEP (1 1 0 0 1)) (:STEP (2 1 0 0 1)) (:STEP (2 1 1 0 0))
    (:STEP (0 1 0 0 1)) (:STEP (0 2 0 0 1)) (:STEP (0 2 1 0 0))
    (:STEP (0 0 2 0 1)) (:STEP (0 0 1 0 1)) (:STEP (0 0 1 2 1))
    (:STEP (0 0 1 2 0)) (:STEP (0 0 1 1 2)))
 (+ (:STEP (0 0 1 0 2)) (:STEP (2 0 1 0 2)) (:STEP (2 0 0 1 2))
    (:STEP (2 0 0 1 0)) (:STEP (1 0 1 0 2)) (:STEP (1 2 1 0 2))
    (:STEP (1 2 0 1 2)) (:STEP (1 2 0 1 0)) (:STEP (0 0 2 0 2))
    (:STEP (1 0 0 2 0)))
 (+ (:STEP (1 1 0 0 2)) (:STEP (2 1 0 0 2)) (:STEP (2 1 1 0 0))
    (:STEP (0 1 0 0 2)) (:STEP (0 2 0 0 2)) (:STEP (0 2 1 0 0))
    (:STEP (0 0 2 0 2)) (:STEP (0 0 1 0 2)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (0 0 2 0 1)) (:STEP (2 0 0 2 0)) (:STEP (0 0 1 2 1))
    (:STEP (2 0 1 2 1)) (:STEP (2 0 0 1 2)) (:STEP (1 0 1 2 1))
    (:STEP (1 2 1 2 1)) (:STEP (1 2 0 2 1)) (:STEP (1 2 0 1 2)))
 (+ (:STEP (1 1 2 1 0)) (:STEP (2 1 1 2 1)) (:STEP (1 1 0 2 0))
    (:STEP (2 1 0 2 0)) (:STEP (2 1 1 0 2)) (:STEP (0 1 0 2 0))
    (:STEP (0 2 0 2 0)) (:STEP (0 2 1 2 0)) (:STEP (0 2 1 0 2)))
 (+ (:STEP (0 0 1 1 2)) (:STEP (0 0 1 1 0)))
 (+ (:STEP (1 0 1 0 2)) (:STEP (0 1 0 1 2)) (:STEP (0 1 0 1 0)))
 (+ (:STEP (0 0 2 1 0)) (:STEP (0 1 1 0 1)) (:STEP (2 1 1 0 1))
    (:STEP (2 0 1 1 0)) (:STEP (0 0 1 2 1)) (:STEP (0 0 1 2 0))
    (:STEP (0 0 1 1 2)))
 (+ (:STEP (1 1 0 0 1)) (:STEP (1 1 2 0 0)) (:STEP (1 0 0 0 1))
    (:STEP (2 0 0 0 1)) (:STEP (2 1 0 0 0)) (:STEP (1 0 2 0 1))
    (:STEP (0 1 2 0 1)) (:STEP (0 1 0 2 0)) (:STEP (1 0 1 2 1))
    (:STEP (0 1 0 1 2)))
 (+ (:STEP (0 0 2 1 2)) (:STEP (0 0 2 1 0)) (:STEP (0 1 1 0 2))
    (:STEP (2 1 1 0 2)) (:STEP (2 0 1 1 2)) (:STEP (2 0 1 1 0))
    (:STEP (0 0 1 2 0)))
 (+ (:STEP (1 1 0 0 2)) (:STEP (1 1 2 0 0)) (:STEP (1 0 0 0 2))
    (:STEP (2 0 0 0 2)) (:STEP (2 1 0 0 0)) (:STEP (1 0 2 0 2))
    (:STEP (0 1 2 0 2)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (0 0 2 2 1)) (:STEP (0 0 2 2 0)) (:STEP (0 0 1 2 1))
    (:STEP (0 0 2 1 2)) (:STEP (0 1 1 2 1)) (:STEP (2 1 1 2 1))
    (:STEP (2 0 1 1 2)))
 (+ (:STEP (1 1 2 2 0)) (:STEP (1 1 2 2 1)) (:STEP (1 1 0 2 0))
    (:STEP (1 1 2 0 2)) (:STEP (1 0 0 2 0)) (:STEP (2 0 0 2 0))
    (:STEP (2 1 0 0 2))))
STEENROD> *sparse-mx*
(((:VEC 8) (:VEC 0) (:VEC 74)) ((:VEC 10) (:VEC 1) (:VEC 84))
 ((:VEC 13) (:VEC 2)) ((:VEC 35) (:VEC 72)) ((:VEC 33) (:VEC 5) (:VEC 84))
 ((:VEC 37) (:VEC 6) (:VEC 74)) ((:VEC 44) (:VEC 7)) ((:VEC 65) (:VEC 73))
 ((:VEC 8) (:VEC 9) (:VEC 74)) ((:VEC 10) (:VEC 11) (:VEC 67))
 ((:VEC 13) (:VEC 15)) ((:VEC 35) (:VEC 32)) ((:VEC 63) (:VEC 18) (:VEC 67))
 ((:VEC 68) (:VEC 19) (:VEC 84)) ((:VEC 77) (:VEC 20)) ((:VEC 83) (:VEC 21))
 (26) ((:VEC 33) (:VEC 36) (:VEC 84)) ((:VEC 37) (:VEC 40) (:VEC 67))
 ((:VEC 44) (:VEC 47)) ((:VEC 65) (:VEC 51)) (56) (62)
 ((:VEC 63) (:VEC 66) (:VEC 67)) ((:VEC 68) (:VEC 71) (:VEC 74))
 ((:VEC 77) (:VEC 80)) ((:VEC 83) (:VEC 86))
 ((:VEC 23) (:VEC 8) (:VEC 25) (:VEC 0) (:VEC 59) (:VEC 74) (:VEC 61)
  (:VEC 62))
 ((:VEC 27) (:VEC 10) (:VEC 29) (:VEC 1) (:VEC 30) (:VEC 84) (:VEC 76)
  (:VEC 26))
 ((:VEC 32) (:VEC 13) (:VEC 8) (:VEC 35) (:VEC 2) (:VEC 0) (:VEC 72) (:VEC 74))
 ((:VEC 86) (:VEC 10) (:VEC 39) (:VEC 1) (:VEC 41) (:VEC 84))
 ((:VEC NIL) (:VEC 49) (:VEC 43) (:VEC 13) (:VEC 45) (:VEC 2))
 ((:VEC NIL) (:VEC 45) (:VEC 48) (:VEC 35) (:VEC 49) (:VEC 72))
 ((:VEC 31) (:VEC 33) (:VEC 3) (:VEC 25) (:VEC 24) (:VEC 59) (:VEC 5) (:VEC 30)
  (:VEC 84) (:VEC 76) (:VEC 26))
 ((:VEC NIL) (:VEC 37) (:VEC 4) (:VEC 29) (:VEC 28) (:VEC 60) (:VEC 6)
  (:VEC 59) (:VEC 74) (:VEC 61) (:VEC 62))
 ((:VEC 42) (:VEC 44) (:VEC 33) (:VEC 51) (:VEC 35) (:VEC 34) (:VEC 72)
  (:VEC 7) (:VEC 5) (:VEC 41) (:VEC 84))
 ((:VEC NIL) (:VEC 37) (:VEC 21) (:VEC 39) (:VEC 38) (:VEC 73) (:VEC 6)
  (:VEC 72) (:VEC 74))
 ((:VEC 30) (:VEC 85) (:VEC 76) (:VEC 44) (:VEC 12) (:VEC 45) (:VEC 61)
  (:VEC 7))
 ((:VEC NIL) (:VEC 79) (:VEC 82) (:VEC 65) (:VEC 16) (:VEC 49) (:VEC 74)
  (:VEC 73))
 ((:VEC 3) (:VEC 8) (:VEC 24) (:VEC 9) (:VEC 59) (:VEC 60) (:VEC 74) (:VEC 61)
  (:VEC 62))
 ((:VEC 4) (:VEC 10) (:VEC 28) (:VEC 11) (:VEC 30) (:VEC 31) (:VEC 76)
  (:VEC 67) (:VEC 56))
 ((:VEC 51) (:VEC 13) (:VEC 8) (:VEC 34) (:VEC 15) (:VEC 9) (:VEC 72) (:VEC 73)
  (:VEC 74))
 ((:VEC 21) (:VEC 10) (:VEC 38) (:VEC 11) (:VEC 41) (:VEC 42) (:VEC 67))
 ((:VEC NIL) (:VEC 49) (:VEC 12) (:VEC 13) (:VEC 61) (:VEC 14) (:VEC 15))
 ((:VEC NIL) (:VEC 45) (:VEC 16) (:VEC 35) (:VEC 74) (:VEC 17) (:VEC 32))
 ((:VEC 63) (:VEC 55) (:VEC 54) (:VEC 18) (:VEC 76) (:VEC 67) (:VEC 56))
 ((:VEC NIL) (:VEC 68) (:VEC 58) (:VEC 57) (:VEC 19) (:VEC 30) (:VEC 84)
  (:VEC 76) (:VEC 26))
 ((:VEC 77) (:VEC 63) (:VEC 65) (:VEC 64) (:VEC 20) (:VEC 18) (:VEC 67))
 ((:VEC NIL) (:VEC 68) (:VEC 70) (:VEC 69) (:VEC 19) (:VEC 41) (:VEC 84))
 ((:VEC NIL) (:VEC 75) (:VEC 76) (:VEC 77) (:VEC 79) (:VEC 78) (:VEC 20))
 ((:VEC NIL) (:VEC 81) (:VEC 82) (:VEC 83) (:VEC 85) (:VEC 84) (:VEC 21))
 ((:VEC 42) (:VEC 26) (:VEC 22))
 ((:VEC 31) (:VEC 23) (:VEC 33) (:VEC 24) (:VEC 25) (:VEC 36) (:VEC 30)
  (:VEC 84) (:VEC 76) (:VEC 26))
 ((:VEC NIL) (:VEC 27) (:VEC 37) (:VEC 28) (:VEC 29) (:VEC 40) (:VEC 30)
  (:VEC 31) (:VEC 76) (:VEC 67) (:VEC 56))
 ((:VEC 42) (:VEC 32) (:VEC 44) (:VEC 33) (:VEC 34) (:VEC 35) (:VEC 47)
  (:VEC 36) (:VEC 41) (:VEC 84))
 ((:VEC NIL) (:VEC 86) (:VEC 37) (:VEC 38) (:VEC 39) (:VEC 40) (:VEC 41)
  (:VEC 42) (:VEC 67))
 ((:VEC 30) (:VEC 85) (:VEC 76) (:VEC 43) (:VEC 44) (:VEC 61) (:VEC 45)
  (:VEC 46) (:VEC 47))
 ((:VEC NIL) (:VEC 79) (:VEC 82) (:VEC 48) (:VEC 65) (:VEC 74) (:VEC 49)
  (:VEC 50) (:VEC 51))
 ((:VEC 56) (:VEC 52)) ((:VEC 34) (:VEC 62) (:VEC 53))
 ((:VEC 63) (:VEC 54) (:VEC 55) (:VEC 66) (:VEC 76) (:VEC 67) (:VEC 56))
 ((:VEC NIL) (:VEC 68) (:VEC 57) (:VEC 58) (:VEC 71) (:VEC 59) (:VEC 60)
  (:VEC 74) (:VEC 61) (:VEC 62))
 ((:VEC 77) (:VEC 63) (:VEC 64) (:VEC 65) (:VEC 80) (:VEC 66) (:VEC 67))
 ((:VEC NIL) (:VEC 68) (:VEC 69) (:VEC 70) (:VEC 71) (:VEC 72) (:VEC 73)
  (:VEC 74))
 ((:VEC NIL) (:VEC 75) (:VEC 76) (:VEC 77) (:VEC 78) (:VEC 79) (:VEC 80))
 ((:VEC NIL) (:VEC 81) (:VEC 82) (:VEC 83) (:VEC 84) (:VEC 85) (:VEC 86)))
STEENROD> *DEG4QUAD-BASIS*
((+ (:STEP (0 2 0 1 0)) (:STEP (0 1 2 1 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (1 2 1 0 0)) (:STEP (1 0 2 0 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (0 2 0 1 2)) (:STEP (0 1 2 1 2)))
 (+ (:STEP (1 2 1 0 2)) (:STEP (1 0 2 0 2)))
 (+ (:STEP (2 0 0 1 0)) (:STEP (1 0 2 1 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (2 1 1 0 0)) (:STEP (0 1 2 0 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (2 0 0 1 2)) (:STEP (1 0 2 1 2)))
 (+ (:STEP (2 1 1 0 2)) (:STEP (0 1 2 0 2)))
 (+ (:STEP (0 2 0 1 0)) (:STEP (2 1 0 1 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (1 2 1 0 0)) (:STEP (2 0 1 0 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (0 2 0 1 2)) (:STEP (2 1 0 1 2)))
 (+ (:STEP (1 2 1 0 2)) (:STEP (2 0 1 0 2)))
 (+ (:STEP (0 0 2 1 0)) (:STEP (0 2 1 1 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (1 1 2 0 0)) (:STEP (1 2 0 0 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (0 0 2 1 2)) (:STEP (0 2 1 1 2)))
 (+ (:STEP (1 1 2 0 2)) (:STEP (1 2 0 0 2))) (:STEP (1 0 0 1 2))
 (+ (:STEP (2 0 0 1 0)) (:STEP (1 2 0 1 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (2 1 1 0 0)) (:STEP (0 2 1 0 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (2 0 0 1 2)) (:STEP (1 2 0 1 2)))
 (+ (:STEP (2 1 1 0 2)) (:STEP (0 2 1 0 2))) (:STEP (0 0 1 1 2))
 (:STEP (0 1 0 1 2))
 (+ (:STEP (0 0 2 1 0)) (:STEP (2 0 1 1 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (1 1 2 0 0)) (:STEP (2 1 0 0 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (0 0 2 1 2)) (:STEP (2 0 1 1 2)))
 (+ (:STEP (1 1 2 0 2)) (:STEP (2 1 0 0 2)))
 (+ (:STEP (2 0 1 0 1)) (:STEP (0 2 0 1 0)) (:STEP (1 2 1 0 1))
    (:STEP (0 1 2 1 0)) (:STEP (1 0 2 0 1)) (:STEP (0 1 0 2 0))
    (:STEP (1 0 1 2 1)) (:STEP (0 1 0 1 2)))
 (+ (:STEP (2 1 0 0 1)) (:STEP (1 2 1 0 0)) (:STEP (0 2 0 0 1))
    (:STEP (1 0 2 0 0)) (:STEP (0 0 2 0 1)) (:STEP (1 0 0 2 0))
    (:STEP (0 0 1 2 1)) (:STEP (1 0 0 1 2)))
 (+ (:STEP (2 0 1 0 2)) (:STEP (0 2 0 1 2)) (:STEP (0 2 0 1 0))
    (:STEP (1 2 1 0 2)) (:STEP (0 1 2 1 2)) (:STEP (0 1 2 1 0))
    (:STEP (1 0 2 0 2)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (2 1 0 0 2)) (:STEP (1 2 1 0 0)) (:STEP (0 2 0 0 2))
    (:STEP (1 0 2 0 0)) (:STEP (0 0 2 0 2)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (2 0 2 0 1)) (:STEP (0 2 0 2 0)) (:STEP (2 0 1 2 1))
    (:STEP (0 2 0 1 2)) (:STEP (1 2 1 2 1)) (:STEP (0 1 2 1 2)))
 (+ (:STEP (2 1 2 1 0)) (:STEP (1 2 1 2 1)) (:STEP (2 1 0 2 0))
    (:STEP (1 2 1 0 2)) (:STEP (0 2 0 2 0)) (:STEP (1 0 2 0 2)))
 (+ (:STEP (0 0 1 0 1)) (:STEP (2 0 0 1 0)) (:STEP (0 2 1 0 1))
    (:STEP (1 2 1 0 1)) (:STEP (1 0 1 0 1)) (:STEP (1 0 2 0 1))
    (:STEP (1 0 2 1 0)) (:STEP (0 0 2 0 1)) (:STEP (1 0 0 2 0))
    (:STEP (0 0 1 2 1)) (:STEP (1 0 0 1 2)))
 (+ (:STEP (1 1 0 0 1)) (:STEP (2 1 1 0 0)) (:STEP (1 2 0 0 1))
    (:STEP (0 2 0 0 1)) (:STEP (0 1 0 0 1)) (:STEP (0 1 2 0 1))
    (:STEP (0 1 2 0 0)) (:STEP (1 0 2 0 1)) (:STEP (0 1 0 2 0))
    (:STEP (1 0 1 2 1)) (:STEP (0 1 0 1 2)))
 (+ (:STEP (0 0 1 0 2)) (:STEP (2 0 0 1 2)) (:STEP (2 0 0 1 0))
    (:STEP (0 2 1 0 2)) (:STEP (1 2 1 0 2)) (:STEP (1 0 1 0 2))
    (:STEP (1 0 2 0 2)) (:STEP (1 0 2 1 2)) (:STEP (1 0 2 1 0))
    (:STEP (0 0 2 0 2)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (1 1 0 0 2)) (:STEP (2 1 1 0 0)) (:STEP (1 2 0 0 2))
    (:STEP (0 2 0 0 2)) (:STEP (0 1 0 0 2)) (:STEP (0 1 2 0 2))
    (:STEP (0 1 2 0 0)) (:STEP (1 0 2 0 2)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (0 0 2 0 1)) (:STEP (2 0 0 2 0)) (:STEP (0 0 1 2 1))
    (:STEP (2 0 0 1 2)) (:STEP (0 2 1 2 1)) (:STEP (1 2 1 2 1))
    (:STEP (1 0 1 2 1)) (:STEP (1 0 2 1 2)))
 (+ (:STEP (1 1 2 1 0)) (:STEP (2 1 1 2 1)) (:STEP (1 1 0 2 0))
    (:STEP (2 1 1 0 2)) (:STEP (1 2 0 2 0)) (:STEP (0 2 0 2 0))
    (:STEP (0 1 0 2 0)) (:STEP (0 1 2 0 2)))
 (+ (:STEP (0 2 1 0 1)) (:STEP (0 2 0 1 0)) (:STEP (1 0 1 0 1))
    (:STEP (2 1 0 1 0)) (:STEP (1 0 2 0 1)) (:STEP (0 1 2 0 1))
    (:STEP (0 1 0 2 0)) (:STEP (1 0 1 2 1)) (:STEP (0 1 0 1 2)))
 (+ (:STEP (1 2 0 0 1)) (:STEP (1 2 1 0 0)) (:STEP (0 1 0 0 1))
    (:STEP (2 0 1 0 0)) (:STEP (0 0 2 0 1)) (:STEP (0 0 1 0 1))
    (:STEP (0 0 1 2 1)) (:STEP (0 0 1 2 0)) (:STEP (0 0 1 1 2)))
 (+ (:STEP (0 2 1 0 2)) (:STEP (0 2 0 1 2)) (:STEP (0 2 0 1 0))
    (:STEP (1 0 1 0 2)) (:STEP (2 1 0 1 2)) (:STEP (2 1 0 1 0))
    (:STEP (1 0 2 0 2)) (:STEP (0 1 2 0 2)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (1 2 0 0 2)) (:STEP (1 2 1 0 0)) (:STEP (0 1 0 0 2))
    (:STEP (2 0 1 0 0)) (:STEP (0 0 2 0 2)) (:STEP (0 0 1 0 2))
    (:STEP (0 0 1 2 0)))
 (+ (:STEP (2 0 2 0 1)) (:STEP (0 2 0 2 0)) (:STEP (0 2 1 2 1))
    (:STEP (0 2 0 1 2)) (:STEP (1 0 1 2 1)) (:STEP (2 1 0 2 1))
    (:STEP (2 1 0 1 2)))
 (+ (:STEP (2 1 2 1 0)) (:STEP (1 2 1 2 1)) (:STEP (1 2 0 2 0))
    (:STEP (1 2 1 0 2)) (:STEP (0 1 0 2 0)) (:STEP (2 0 1 2 0))
    (:STEP (2 0 1 0 2)))
 (+ (:STEP (0 0 2 1 0)) (:STEP (2 1 1 0 1)) (:STEP (0 1 1 0 1))
    (:STEP (0 2 1 1 0)) (:STEP (0 0 1 2 1)) (:STEP (0 0 1 2 0))
    (:STEP (0 0 1 1 2)))
 (+ (:STEP (1 1 0 0 1)) (:STEP (1 1 2 0 0)) (:STEP (2 0 0 0 1))
    (:STEP (1 0 0 0 1)) (:STEP (1 2 0 0 0)) (:STEP (0 0 2 0 1))
    (:STEP (1 0 0 2 0)) (:STEP (0 0 1 2 1)) (:STEP (1 0 0 1 2)))
 (+ (:STEP (0 0 2 1 2)) (:STEP (0 0 2 1 0)) (:STEP (2 1 1 0 2))
    (:STEP (0 1 1 0 2)) (:STEP (0 2 1 1 2)) (:STEP (0 2 1 1 0))
    (:STEP (0 0 1 2 0)))
 (+ (:STEP (1 1 0 0 2)) (:STEP (1 1 2 0 0)) (:STEP (2 0 0 0 2))
    (:STEP (1 0 0 0 2)) (:STEP (1 2 0 0 0)) (:STEP (0 0 2 0 2))
    (:STEP (1 0 0 2 0)))
 (+ (:STEP (0 0 2 2 1)) (:STEP (0 0 2 2 0)) (:STEP (0 0 1 2 1))
    (:STEP (0 0 2 1 2)) (:STEP (2 1 1 2 1)) (:STEP (0 1 1 2 1))
    (:STEP (0 2 1 1 2)))
 (+ (:STEP (1 1 2 2 0)) (:STEP (1 1 2 2 1)) (:STEP (1 1 0 2 0))
    (:STEP (1 1 2 0 2)) (:STEP (2 0 0 2 0)) (:STEP (1 0 0 2 0))
    (:STEP (1 2 0 0 2)))
 (+ (:STEP (0 0 1 0 2)) (:STEP (1 0 0 1 2)) (:STEP (1 0 0 1 0)))
 (+ (:STEP (0 0 1 0 1)) (:STEP (2 0 1 0 1)) (:STEP (2 0 0 1 0))
    (:STEP (1 0 1 0 1)) (:STEP (1 2 1 0 1)) (:STEP (1 2 0 1 0))
    (:STEP (0 0 2 0 1)) (:STEP (1 0 0 2 0)) (:STEP (0 0 1 2 1))
    (:STEP (1 0 0 1 2)))
 (+ (:STEP (1 1 0 0 1)) (:STEP (2 1 0 0 1)) (:STEP (2 1 1 0 0))
    (:STEP (0 1 0 0 1)) (:STEP (0 2 0 0 1)) (:STEP (0 2 1 0 0))
    (:STEP (0 0 2 0 1)) (:STEP (0 0 1 0 1)) (:STEP (0 0 1 2 1))
    (:STEP (0 0 1 2 0)) (:STEP (0 0 1 1 2)))
 (+ (:STEP (0 0 1 0 2)) (:STEP (2 0 1 0 2)) (:STEP (2 0 0 1 2))
    (:STEP (2 0 0 1 0)) (:STEP (1 0 1 0 2)) (:STEP (1 2 1 0 2))
    (:STEP (1 2 0 1 2)) (:STEP (1 2 0 1 0)) (:STEP (0 0 2 0 2))
    (:STEP (1 0 0 2 0)))
 (+ (:STEP (1 1 0 0 2)) (:STEP (2 1 0 0 2)) (:STEP (2 1 1 0 0))
    (:STEP (0 1 0 0 2)) (:STEP (0 2 0 0 2)) (:STEP (0 2 1 0 0))
    (:STEP (0 0 2 0 2)) (:STEP (0 0 1 0 2)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (0 0 2 0 1)) (:STEP (2 0 0 2 0)) (:STEP (0 0 1 2 1))
    (:STEP (2 0 1 2 1)) (:STEP (2 0 0 1 2)) (:STEP (1 0 1 2 1))
    (:STEP (1 2 1 2 1)) (:STEP (1 2 0 2 1)) (:STEP (1 2 0 1 2)))
 (+ (:STEP (1 1 2 1 0)) (:STEP (2 1 1 2 1)) (:STEP (1 1 0 2 0))
    (:STEP (2 1 0 2 0)) (:STEP (2 1 1 0 2)) (:STEP (0 1 0 2 0))
    (:STEP (0 2 0 2 0)) (:STEP (0 2 1 2 0)) (:STEP (0 2 1 0 2)))
 (+ (:STEP (0 0 1 1 2)) (:STEP (0 0 1 1 0)))
 (+ (:STEP (1 0 1 0 2)) (:STEP (0 1 0 1 2)) (:STEP (0 1 0 1 0)))
 (+ (:STEP (0 0 2 1 0)) (:STEP (0 1 1 0 1)) (:STEP (2 1 1 0 1))
    (:STEP (2 0 1 1 0)) (:STEP (0 0 1 2 1)) (:STEP (0 0 1 2 0))
    (:STEP (0 0 1 1 2)))
 (+ (:STEP (1 1 0 0 1)) (:STEP (1 1 2 0 0)) (:STEP (1 0 0 0 1))
    (:STEP (2 0 0 0 1)) (:STEP (2 1 0 0 0)) (:STEP (1 0 2 0 1))
    (:STEP (0 1 2 0 1)) (:STEP (0 1 0 2 0)) (:STEP (1 0 1 2 1))
    (:STEP (0 1 0 1 2)))
 (+ (:STEP (0 0 2 1 2)) (:STEP (0 0 2 1 0)) (:STEP (0 1 1 0 2))
    (:STEP (2 1 1 0 2)) (:STEP (2 0 1 1 2)) (:STEP (2 0 1 1 0))
    (:STEP (0 0 1 2 0)))
 (+ (:STEP (1 1 0 0 2)) (:STEP (1 1 2 0 0)) (:STEP (1 0 0 0 2))
    (:STEP (2 0 0 0 2)) (:STEP (2 1 0 0 0)) (:STEP (1 0 2 0 2))
    (:STEP (0 1 2 0 2)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (0 0 2 2 1)) (:STEP (0 0 2 2 0)) (:STEP (0 0 1 2 1))
    (:STEP (0 0 2 1 2)) (:STEP (0 1 1 2 1)) (:STEP (2 1 1 2 1))
    (:STEP (2 0 1 1 2)))
 (+ (:STEP (1 1 2 2 0)) (:STEP (1 1 2 2 1)) (:STEP (1 1 0 2 0))
    (:STEP (1 1 2 0 2)) (:STEP (1 0 0 2 0)) (:STEP (2 0 0 2 0))
    (:STEP (2 1 0 0 2))))
STEENROD> (translate '(:step 1 1 2 2 0))
(:VEC NIL)
STEENROD> (translate '(:step (1 1 2 2 0)))
(:VEC NIL)
STEENROD> (find '(:step (1 1 2 2 0)) *all-things*)
NIL
STEENROD> (find '(:step (1 1 2 2 0)) *all-things* :test #'equal)
NIL
STEENROD> (find '(:step (1 1 2 2 0)) *all-things* :test #'equalp)
NIL
; compiling (DEFPARAMETER *ALL-THINGS* ...)
; compiling (DEFPARAMETER *ALL-THINGS* ...)
STEENROD> (find '(:step (1 1 2 2 0)) *all-things* :test #'equalp)

NIL
STEENROD> *all-things*
#((:STEP (0 1 2 1 0)) (:STEP (1 0 2 0 0)) (:STEP (0 1 2 1 2))
  (:STEP (0 2 1 0 1)) (:STEP (1 2 0 0 1)) (:STEP (1 0 2 1 0))
  (:STEP (0 1 2 0 0)) (:STEP (1 0 2 1 2)) (:STEP (0 2 0 1 0))
  (:STEP (2 1 0 1 0)) (:STEP (1 2 1 0 0)) (:STEP (2 0 1 0 0))
  (:STEP (0 2 1 2 1)) (:STEP (0 2 0 1 2)) (:STEP (2 1 0 2 1))
  (:STEP (2 1 0 1 2)) (:STEP (1 2 0 2 0)) (:STEP (2 0 1 2 0))
  (:STEP (0 2 1 1 0)) (:STEP (1 2 0 0 0)) (:STEP (0 2 1 1 2))
  (:STEP (1 2 0 0 2)) (:STEP (1 0 0 1 0)) (:STEP (2 0 1 0 1))
  (:STEP (1 0 1 0 1)) (:STEP (1 2 1 0 1)) (:STEP (1 0 0 1 2))
  (:STEP (2 1 0 0 1)) (:STEP (0 1 0 0 1)) (:STEP (0 2 0 0 1))
  (:STEP (0 0 2 0 1)) (:STEP (0 0 1 0 1)) (:STEP (2 0 1 0 2))
  (:STEP (2 0 0 1 0)) (:STEP (1 0 1 0 2)) (:STEP (1 2 1 0 2))
  (:STEP (1 2 0 1 0)) (:STEP (2 1 1 0 0)) (:STEP (0 1 0 0 2))
  (:STEP (0 2 0 0 2)) (:STEP (0 2 1 0 0)) (:STEP (0 0 2 0 2))
  (:STEP (0 0 1 0 2)) (:STEP (2 0 1 2 1)) (:STEP (2 0 0 1 2))
  (:STEP (1 2 1 2 1)) (:STEP (1 2 0 2 1)) (:STEP (1 2 0 1 2))
  (:STEP (2 1 0 2 0)) (:STEP (0 2 0 2 0)) (:STEP (0 2 1 2 0))
  (:STEP (0 2 1 0 2)) (:STEP (0 0 1 1 0)) (:STEP (0 1 0 1 0))
  (:STEP (0 1 1 0 1)) (:STEP (2 1 1 0 1)) (:STEP (0 0 1 1 2))
  (:STEP (1 0 0 0 1)) (:STEP (2 0 0 0 1)) (:STEP (1 0 2 0 1))
  (:STEP (0 1 2 0 1)) (:STEP (1 0 1 2 1)) (:STEP (0 1 0 1 2))
  (:STEP (0 0 2 1 0)) (:STEP (0 1 1 0 2)) (:STEP (2 1 1 0 2))
  (:STEP (2 0 1 1 0)) (:STEP (0 0 1 2 0)) (:STEP (1 1 2 0 0))
  (:STEP (1 0 0 0 2)) (:STEP (2 0 0 0 2)) (:STEP (2 1 0 0 0))
  (:STEP (1 0 2 0 2)) (:STEP (0 1 2 0 2)) (:STEP (0 1 0 2 0))
  (:STEP (0 0 2 2 0)) (:STEP (0 0 1 2 1)) (:STEP (0 0 2 1 2))
  (:STEP (0 1 1 2 1)) (:STEP (2 1 1 2 1)) (:STEP (2 0 1 1 2))
  (:STEP (1 1 2 2 1)) (:STEP (1 1 0 2 0)) (:STEP (1 1 2 0 2))
  (:STEP (1 0 0 2 0)) (:STEP (2 0 0 2 0)) (:STEP (2 1 0 0 2)))
; compiling (DEFPARAMETER *DEG4QUAD-BASIS* ...)
STEENROD> *DEG4QUAD-BASIS*

((:STEP (0 1 0 1 2)) (:STEP (1 0 0 1 2))
 (+ (:STEP (0 2 0 1 0)) (:STEP (0 1 2 1 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (1 2 1 0 0)) (:STEP (1 0 2 0 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (0 2 0 1 2)) (:STEP (0 1 2 1 2)))
 (+ (:STEP (1 2 1 0 2)) (:STEP (1 0 2 0 2))) (:STEP (1 0 0 1 2))
 (:STEP (0 1 0 1 2))
 (+ (:STEP (2 0 0 1 0)) (:STEP (1 0 2 1 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (2 1 1 0 0)) (:STEP (0 1 2 0 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (2 0 0 1 2)) (:STEP (1 0 2 1 2)))
 (+ (:STEP (2 1 1 0 2)) (:STEP (0 1 2 0 2))) (:STEP (0 1 0 1 2))
 (:STEP (0 0 1 1 2))
 (+ (:STEP (0 2 0 1 0)) (:STEP (2 1 0 1 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (1 2 1 0 0)) (:STEP (2 0 1 0 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (0 2 0 1 2)) (:STEP (2 1 0 1 2)))
 (+ (:STEP (1 2 1 0 2)) (:STEP (2 0 1 0 2))) (:STEP (0 0 1 1 2))
 (:STEP (1 0 0 1 2))
 (+ (:STEP (0 0 2 1 0)) (:STEP (0 2 1 1 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (1 1 2 0 0)) (:STEP (1 2 0 0 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (0 0 2 1 2)) (:STEP (0 2 1 1 2)))
 (+ (:STEP (1 1 2 0 2)) (:STEP (1 2 0 0 2))) (:STEP (1 0 0 1 2))
 (:STEP (0 0 1 1 2))
 (+ (:STEP (2 0 0 1 0)) (:STEP (1 2 0 1 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (2 1 1 0 0)) (:STEP (0 2 1 0 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (2 0 0 1 2)) (:STEP (1 2 0 1 2)))
 (+ (:STEP (2 1 1 0 2)) (:STEP (0 2 1 0 2))) (:STEP (0 0 1 1 2))
 (:STEP (0 1 0 1 2))
 (+ (:STEP (0 0 2 1 0)) (:STEP (2 0 1 1 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (1 1 2 0 0)) (:STEP (2 1 0 0 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (0 0 2 1 2)) (:STEP (2 0 1 1 2)))
 (+ (:STEP (1 1 2 0 2)) (:STEP (2 1 0 0 2)))
 (+ (:STEP (1 0 1 0 2)) (:STEP (0 1 0 1 2)) (:STEP (0 1 0 1 0)))
 (+ (:STEP (0 0 1 0 2)) (:STEP (1 0 0 1 2)) (:STEP (1 0 0 1 0)))
 (+ (:STEP (2 0 1 0 1)) (:STEP (0 2 0 1 0)) (:STEP (1 2 1 0 1))
    (:STEP (0 1 2 1 0)) (:STEP (1 0 2 0 1)) (:STEP (0 1 0 2 0))
    (:STEP (1 0 1 2 1)) (:STEP (0 1 0 1 2)))
 (+ (:STEP (2 1 0 0 1)) (:STEP (1 2 1 0 0)) (:STEP (0 2 0 0 1))
    (:STEP (1 0 2 0 0)) (:STEP (0 0 2 0 1)) (:STEP (1 0 0 2 0))
    (:STEP (0 0 1 2 1)) (:STEP (1 0 0 1 2)))
 (+ (:STEP (2 0 1 0 2)) (:STEP (0 2 0 1 2)) (:STEP (0 2 0 1 0))
    (:STEP (1 2 1 0 2)) (:STEP (0 1 2 1 2)) (:STEP (0 1 2 1 0))
    (:STEP (1 0 2 0 2)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (2 1 0 0 2)) (:STEP (1 2 1 0 0)) (:STEP (0 2 0 0 2))
    (:STEP (1 0 2 0 0)) (:STEP (0 0 2 0 2)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (2 0 2 0 1)) (:STEP (0 2 0 2 0)) (:STEP (2 0 1 2 1))
    (:STEP (0 2 0 1 2)) (:STEP (1 2 1 2 1)) (:STEP (0 1 2 1 2)))
 (+ (:STEP (2 1 2 1 0)) (:STEP (1 2 1 2 1)) (:STEP (2 1 0 2 0))
    (:STEP (1 2 1 0 2)) (:STEP (0 2 0 2 0)) (:STEP (1 0 2 0 2)))
 (+ (:STEP (0 0 1 0 2)) (:STEP (1 0 0 1 2)) (:STEP (1 0 0 1 0)))
 (+ (:STEP (1 0 1 0 2)) (:STEP (0 1 0 1 2)) (:STEP (0 1 0 1 0)))
 (+ (:STEP (0 0 1 0 1)) (:STEP (2 0 0 1 0)) (:STEP (0 2 1 0 1))
    (:STEP (1 2 1 0 1)) (:STEP (1 0 1 0 1)) (:STEP (1 0 2 0 1))
    (:STEP (1 0 2 1 0)) (:STEP (0 0 2 0 1)) (:STEP (1 0 0 2 0))
    (:STEP (0 0 1 2 1)) (:STEP (1 0 0 1 2)))
 (+ (:STEP (1 1 0 0 1)) (:STEP (2 1 1 0 0)) (:STEP (1 2 0 0 1))
    (:STEP (0 2 0 0 1)) (:STEP (0 1 0 0 1)) (:STEP (0 1 2 0 1))
    (:STEP (0 1 2 0 0)) (:STEP (1 0 2 0 1)) (:STEP (0 1 0 2 0))
    (:STEP (1 0 1 2 1)) (:STEP (0 1 0 1 2)))
 (+ (:STEP (0 0 1 0 2)) (:STEP (2 0 0 1 2)) (:STEP (2 0 0 1 0))
    (:STEP (0 2 1 0 2)) (:STEP (1 2 1 0 2)) (:STEP (1 0 1 0 2))
    (:STEP (1 0 2 0 2)) (:STEP (1 0 2 1 2)) (:STEP (1 0 2 1 0))
    (:STEP (0 0 2 0 2)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (1 1 0 0 2)) (:STEP (2 1 1 0 0)) (:STEP (1 2 0 0 2))
    (:STEP (0 2 0 0 2)) (:STEP (0 1 0 0 2)) (:STEP (0 1 2 0 2))
    (:STEP (0 1 2 0 0)) (:STEP (1 0 2 0 2)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (0 0 2 0 1)) (:STEP (2 0 0 2 0)) (:STEP (0 0 1 2 1))
    (:STEP (2 0 0 1 2)) (:STEP (0 2 1 2 1)) (:STEP (1 2 1 2 1))
    (:STEP (1 0 1 2 1)) (:STEP (1 0 2 1 2)))
 (+ (:STEP (1 1 2 1 0)) (:STEP (2 1 1 2 1)) (:STEP (1 1 0 2 0))
    (:STEP (2 1 1 0 2)) (:STEP (1 2 0 2 0)) (:STEP (0 2 0 2 0))
    (:STEP (0 1 0 2 0)) (:STEP (0 1 2 0 2)))
 (+ (:STEP (1 0 1 0 2)) (:STEP (0 1 0 1 2)) (:STEP (0 1 0 1 0)))
 (+ (:STEP (0 0 1 1 2)) (:STEP (0 0 1 1 0)))
 (+ (:STEP (0 2 1 0 1)) (:STEP (0 2 0 1 0)) (:STEP (1 0 1 0 1))
    (:STEP (2 1 0 1 0)) (:STEP (1 0 2 0 1)) (:STEP (0 1 2 0 1))
    (:STEP (0 1 0 2 0)) (:STEP (1 0 1 2 1)) (:STEP (0 1 0 1 2)))
 (+ (:STEP (1 2 0 0 1)) (:STEP (1 2 1 0 0)) (:STEP (0 1 0 0 1))
    (:STEP (2 0 1 0 0)) (:STEP (0 0 2 0 1)) (:STEP (0 0 1 0 1))
    (:STEP (0 0 1 2 1)) (:STEP (0 0 1 2 0)) (:STEP (0 0 1 1 2)))
 (+ (:STEP (0 2 1 0 2)) (:STEP (0 2 0 1 2)) (:STEP (0 2 0 1 0))
    (:STEP (1 0 1 0 2)) (:STEP (2 1 0 1 2)) (:STEP (2 1 0 1 0))
    (:STEP (1 0 2 0 2)) (:STEP (0 1 2 0 2)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (1 2 0 0 2)) (:STEP (1 2 1 0 0)) (:STEP (0 1 0 0 2))
    (:STEP (2 0 1 0 0)) (:STEP (0 0 2 0 2)) (:STEP (0 0 1 0 2))
    (:STEP (0 0 1 2 0)))
 (+ (:STEP (2 0 2 0 1)) (:STEP (0 2 0 2 0)) (:STEP (0 2 1 2 1))
    (:STEP (0 2 0 1 2)) (:STEP (1 0 1 2 1)) (:STEP (2 1 0 2 1))
    (:STEP (2 1 0 1 2)))
 (+ (:STEP (2 1 2 1 0)) (:STEP (1 2 1 2 1)) (:STEP (1 2 0 2 0))
    (:STEP (1 2 1 0 2)) (:STEP (0 1 0 2 0)) (:STEP (2 0 1 2 0))
    (:STEP (2 0 1 0 2)))
 (+ (:STEP (0 0 1 1 2)) (:STEP (0 0 1 1 0)))
 (+ (:STEP (0 0 1 0 2)) (:STEP (1 0 0 1 2)) (:STEP (1 0 0 1 0)))
 (+ (:STEP (0 0 2 1 0)) (:STEP (2 1 1 0 1)) (:STEP (0 1 1 0 1))
    (:STEP (0 2 1 1 0)) (:STEP (0 0 1 2 1)) (:STEP (0 0 1 2 0))
    (:STEP (0 0 1 1 2)))
 (+ (:STEP (1 1 0 0 1)) (:STEP (1 1 2 0 0)) (:STEP (2 0 0 0 1))
    (:STEP (1 0 0 0 1)) (:STEP (1 2 0 0 0)) (:STEP (0 0 2 0 1))
    (:STEP (1 0 0 2 0)) (:STEP (0 0 1 2 1)) (:STEP (1 0 0 1 2)))
 (+ (:STEP (0 0 2 1 2)) (:STEP (0 0 2 1 0)) (:STEP (2 1 1 0 2))
    (:STEP (0 1 1 0 2)) (:STEP (0 2 1 1 2)) (:STEP (0 2 1 1 0))
    (:STEP (0 0 1 2 0)))
 (+ (:STEP (1 1 0 0 2)) (:STEP (1 1 2 0 0)) (:STEP (2 0 0 0 2))
    (:STEP (1 0 0 0 2)) (:STEP (1 2 0 0 0)) (:STEP (0 0 2 0 2))
    (:STEP (1 0 0 2 0)))
 (+ (:STEP (0 0 2 2 1)) (:STEP (0 0 2 2 0)) (:STEP (0 0 1 2 1))
    (:STEP (0 0 2 1 2)) (:STEP (2 1 1 2 1)) (:STEP (0 1 1 2 1))
    (:STEP (0 2 1 1 2)))
 (+ (:STEP (1 1 2 2 0)) (:STEP (1 1 2 2 1)) (:STEP (1 1 0 2 0))
    (:STEP (1 1 2 0 2)) (:STEP (2 0 0 2 0)) (:STEP (1 0 0 2 0))
    (:STEP (1 2 0 0 2)))
 (+ (:STEP (0 0 1 0 2)) (:STEP (1 0 0 1 2)) (:STEP (1 0 0 1 0)))
 (+ (:STEP (0 0 1 1 2)) (:STEP (0 0 1 1 0)))
 (+ (:STEP (0 0 1 0 1)) (:STEP (2 0 1 0 1)) (:STEP (2 0 0 1 0))
    (:STEP (1 0 1 0 1)) (:STEP (1 2 1 0 1)) (:STEP (1 2 0 1 0))
    (:STEP (0 0 2 0 1)) (:STEP (1 0 0 2 0)) (:STEP (0 0 1 2 1))
    (:STEP (1 0 0 1 2)))
 (+ (:STEP (1 1 0 0 1)) (:STEP (2 1 0 0 1)) (:STEP (2 1 1 0 0))
    (:STEP (0 1 0 0 1)) (:STEP (0 2 0 0 1)) (:STEP (0 2 1 0 0))
    (:STEP (0 0 2 0 1)) (:STEP (0 0 1 0 1)) (:STEP (0 0 1 2 1))
    (:STEP (0 0 1 2 0)) (:STEP (0 0 1 1 2)))
 (+ (:STEP (0 0 1 0 2)) (:STEP (2 0 1 0 2)) (:STEP (2 0 0 1 2))
    (:STEP (2 0 0 1 0)) (:STEP (1 0 1 0 2)) (:STEP (1 2 1 0 2))
    (:STEP (1 2 0 1 2)) (:STEP (1 2 0 1 0)) (:STEP (0 0 2 0 2))
    (:STEP (1 0 0 2 0)))
 (+ (:STEP (1 1 0 0 2)) (:STEP (2 1 0 0 2)) (:STEP (2 1 1 0 0))
    (:STEP (0 1 0 0 2)) (:STEP (0 2 0 0 2)) (:STEP (0 2 1 0 0))
    (:STEP (0 0 2 0 2)) (:STEP (0 0 1 0 2)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (0 0 2 0 1)) (:STEP (2 0 0 2 0)) (:STEP (0 0 1 2 1))
    (:STEP (2 0 1 2 1)) (:STEP (2 0 0 1 2)) (:STEP (1 0 1 2 1))
    (:STEP (1 2 1 2 1)) (:STEP (1 2 0 2 1)) (:STEP (1 2 0 1 2)))
 (+ (:STEP (1 1 2 1 0)) (:STEP (2 1 1 2 1)) (:STEP (1 1 0 2 0))
    (:STEP (2 1 0 2 0)) (:STEP (2 1 1 0 2)) (:STEP (0 1 0 2 0))
    (:STEP (0 2 0 2 0)) (:STEP (0 2 1 2 0)) (:STEP (0 2 1 0 2)))
 (+ (:STEP (0 0 1 1 2)) (:STEP (0 0 1 1 0)))
 (+ (:STEP (1 0 1 0 2)) (:STEP (0 1 0 1 2)) (:STEP (0 1 0 1 0)))
 (+ (:STEP (0 0 2 1 0)) (:STEP (0 1 1 0 1)) (:STEP (2 1 1 0 1))
    (:STEP (2 0 1 1 0)) (:STEP (0 0 1 2 1)) (:STEP (0 0 1 2 0))
    (:STEP (0 0 1 1 2)))
 (+ (:STEP (1 1 0 0 1)) (:STEP (1 1 2 0 0)) (:STEP (1 0 0 0 1))
    (:STEP (2 0 0 0 1)) (:STEP (2 1 0 0 0)) (:STEP (1 0 2 0 1))
    (:STEP (0 1 2 0 1)) (:STEP (0 1 0 2 0)) (:STEP (1 0 1 2 1))
    (:STEP (0 1 0 1 2)))
 (+ (:STEP (0 0 2 1 2)) (:STEP (0 0 2 1 0)) (:STEP (0 1 1 0 2))
    (:STEP (2 1 1 0 2)) (:STEP (2 0 1 1 2)) (:STEP (2 0 1 1 0))
    (:STEP (0 0 1 2 0)))
 (+ (:STEP (1 1 0 0 2)) (:STEP (1 1 2 0 0)) (:STEP (1 0 0 0 2))
    (:STEP (2 0 0 0 2)) (:STEP (2 1 0 0 0)) (:STEP (1 0 2 0 2))
    (:STEP (0 1 2 0 2)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (0 0 2 2 1)) (:STEP (0 0 2 2 0)) (:STEP (0 0 1 2 1))
    (:STEP (0 0 2 1 2)) (:STEP (0 1 1 2 1)) (:STEP (2 1 1 2 1))
    (:STEP (2 0 1 1 2)))
 (+ (:STEP (1 1 2 2 0)) (:STEP (1 1 2 2 1)) (:STEP (1 1 0 2 0))
    (:STEP (1 1 2 0 2)) (:STEP (1 0 0 2 0)) (:STEP (2 0 0 2 0))
    (:STEP (2 1 0 0 2))))
; compiling (DEFPARAMETER *DEG4QUAD-BASIS* ...)
STEENROD> *DEG4QUAD-BASIS*

((+ (:STEP (0 2 0 1 0)) (:STEP (0 1 2 1 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (1 2 1 0 0)) (:STEP (1 0 2 0 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (0 2 0 1 2)) (:STEP (0 1 2 1 2)))
 (+ (:STEP (1 2 1 0 2)) (:STEP (1 0 2 0 2)))
 (+ (:STEP (2 0 0 1 0)) (:STEP (1 0 2 1 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (2 1 1 0 0)) (:STEP (0 1 2 0 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (2 0 0 1 2)) (:STEP (1 0 2 1 2)))
 (+ (:STEP (2 1 1 0 2)) (:STEP (0 1 2 0 2)))
 (+ (:STEP (0 2 0 1 0)) (:STEP (2 1 0 1 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (1 2 1 0 0)) (:STEP (2 0 1 0 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (0 2 0 1 2)) (:STEP (2 1 0 1 2)))
 (+ (:STEP (1 2 1 0 2)) (:STEP (2 0 1 0 2)))
 (+ (:STEP (0 0 2 1 0)) (:STEP (0 2 1 1 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (1 1 2 0 0)) (:STEP (1 2 0 0 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (0 0 2 1 2)) (:STEP (0 2 1 1 2)))
 (+ (:STEP (1 1 2 0 2)) (:STEP (1 2 0 0 2))) (:STEP (1 0 0 1 2))
 (+ (:STEP (2 0 0 1 0)) (:STEP (1 2 0 1 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (2 1 1 0 0)) (:STEP (0 2 1 0 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (2 0 0 1 2)) (:STEP (1 2 0 1 2)))
 (+ (:STEP (2 1 1 0 2)) (:STEP (0 2 1 0 2))) (:STEP (0 0 1 1 2))
 (:STEP (0 1 0 1 2))
 (+ (:STEP (0 0 2 1 0)) (:STEP (2 0 1 1 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (1 1 2 0 0)) (:STEP (2 1 0 0 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (0 0 2 1 2)) (:STEP (2 0 1 1 2)))
 (+ (:STEP (1 1 2 0 2)) (:STEP (2 1 0 0 2)))
 (+ (:STEP (2 0 1 0 1)) (:STEP (0 2 0 1 0)) (:STEP (1 2 1 0 1))
    (:STEP (0 1 2 1 0)) (:STEP (1 0 2 0 1)) (:STEP (0 1 0 2 0))
    (:STEP (1 0 1 2 1)) (:STEP (0 1 0 1 2)))
 (+ (:STEP (2 1 0 0 1)) (:STEP (1 2 1 0 0)) (:STEP (0 2 0 0 1))
    (:STEP (1 0 2 0 0)) (:STEP (0 0 2 0 1)) (:STEP (1 0 0 2 0))
    (:STEP (0 0 1 2 1)) (:STEP (1 0 0 1 2)))
 (+ (:STEP (2 0 1 0 2)) (:STEP (0 2 0 1 2)) (:STEP (0 2 0 1 0))
    (:STEP (1 2 1 0 2)) (:STEP (0 1 2 1 2)) (:STEP (0 1 2 1 0))
    (:STEP (1 0 2 0 2)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (2 1 0 0 2)) (:STEP (1 2 1 0 0)) (:STEP (0 2 0 0 2))
    (:STEP (1 0 2 0 0)) (:STEP (0 0 2 0 2)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (2 0 2 0 1)) (:STEP (0 2 0 2 0)) (:STEP (2 0 1 2 1))
    (:STEP (0 2 0 1 2)) (:STEP (1 2 1 2 1)) (:STEP (0 1 2 1 2)))
 (+ (:STEP (2 1 2 1 0)) (:STEP (1 2 1 2 1)) (:STEP (2 1 0 2 0))
    (:STEP (1 2 1 0 2)) (:STEP (0 2 0 2 0)) (:STEP (1 0 2 0 2)))
 (+ (:STEP (0 0 1 0 1)) (:STEP (2 0 0 1 0)) (:STEP (0 2 1 0 1))
    (:STEP (1 2 1 0 1)) (:STEP (1 0 1 0 1)) (:STEP (1 0 2 0 1))
    (:STEP (1 0 2 1 0)) (:STEP (0 0 2 0 1)) (:STEP (1 0 0 2 0))
    (:STEP (0 0 1 2 1)) (:STEP (1 0 0 1 2)))
 (+ (:STEP (1 1 0 0 1)) (:STEP (2 1 1 0 0)) (:STEP (1 2 0 0 1))
    (:STEP (0 2 0 0 1)) (:STEP (0 1 0 0 1)) (:STEP (0 1 2 0 1))
    (:STEP (0 1 2 0 0)) (:STEP (1 0 2 0 1)) (:STEP (0 1 0 2 0))
    (:STEP (1 0 1 2 1)) (:STEP (0 1 0 1 2)))
 (+ (:STEP (0 0 1 0 2)) (:STEP (2 0 0 1 2)) (:STEP (2 0 0 1 0))
    (:STEP (0 2 1 0 2)) (:STEP (1 2 1 0 2)) (:STEP (1 0 1 0 2))
    (:STEP (1 0 2 0 2)) (:STEP (1 0 2 1 2)) (:STEP (1 0 2 1 0))
    (:STEP (0 0 2 0 2)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (1 1 0 0 2)) (:STEP (2 1 1 0 0)) (:STEP (1 2 0 0 2))
    (:STEP (0 2 0 0 2)) (:STEP (0 1 0 0 2)) (:STEP (0 1 2 0 2))
    (:STEP (0 1 2 0 0)) (:STEP (1 0 2 0 2)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (0 0 2 0 1)) (:STEP (2 0 0 2 0)) (:STEP (0 0 1 2 1))
    (:STEP (2 0 0 1 2)) (:STEP (0 2 1 2 1)) (:STEP (1 2 1 2 1))
    (:STEP (1 0 1 2 1)) (:STEP (1 0 2 1 2)))
 (+ (:STEP (1 1 2 1 0)) (:STEP (2 1 1 2 1)) (:STEP (1 1 0 2 0))
    (:STEP (2 1 1 0 2)) (:STEP (1 2 0 2 0)) (:STEP (0 2 0 2 0))
    (:STEP (0 1 0 2 0)) (:STEP (0 1 2 0 2)))
 (+ (:STEP (0 2 1 0 1)) (:STEP (0 2 0 1 0)) (:STEP (1 0 1 0 1))
    (:STEP (2 1 0 1 0)) (:STEP (1 0 2 0 1)) (:STEP (0 1 2 0 1))
    (:STEP (0 1 0 2 0)) (:STEP (1 0 1 2 1)) (:STEP (0 1 0 1 2)))
 (+ (:STEP (1 2 0 0 1)) (:STEP (1 2 1 0 0)) (:STEP (0 1 0 0 1))
    (:STEP (2 0 1 0 0)) (:STEP (0 0 2 0 1)) (:STEP (0 0 1 0 1))
    (:STEP (0 0 1 2 1)) (:STEP (0 0 1 2 0)) (:STEP (0 0 1 1 2)))
 (+ (:STEP (0 2 1 0 2)) (:STEP (0 2 0 1 2)) (:STEP (0 2 0 1 0))
    (:STEP (1 0 1 0 2)) (:STEP (2 1 0 1 2)) (:STEP (2 1 0 1 0))
    (:STEP (1 0 2 0 2)) (:STEP (0 1 2 0 2)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (1 2 0 0 2)) (:STEP (1 2 1 0 0)) (:STEP (0 1 0 0 2))
    (:STEP (2 0 1 0 0)) (:STEP (0 0 2 0 2)) (:STEP (0 0 1 0 2))
    (:STEP (0 0 1 2 0)))
 (+ (:STEP (2 0 2 0 1)) (:STEP (0 2 0 2 0)) (:STEP (0 2 1 2 1))
    (:STEP (0 2 0 1 2)) (:STEP (1 0 1 2 1)) (:STEP (2 1 0 2 1))
    (:STEP (2 1 0 1 2)))
 (+ (:STEP (2 1 2 1 0)) (:STEP (1 2 1 2 1)) (:STEP (1 2 0 2 0))
    (:STEP (1 2 1 0 2)) (:STEP (0 1 0 2 0)) (:STEP (2 0 1 2 0))
    (:STEP (2 0 1 0 2)))
 (+ (:STEP (0 0 2 1 0)) (:STEP (2 1 1 0 1)) (:STEP (0 1 1 0 1))
    (:STEP (0 2 1 1 0)) (:STEP (0 0 1 2 1)) (:STEP (0 0 1 2 0))
    (:STEP (0 0 1 1 2)))
 (+ (:STEP (1 1 0 0 1)) (:STEP (1 1 2 0 0)) (:STEP (2 0 0 0 1))
    (:STEP (1 0 0 0 1)) (:STEP (1 2 0 0 0)) (:STEP (0 0 2 0 1))
    (:STEP (1 0 0 2 0)) (:STEP (0 0 1 2 1)) (:STEP (1 0 0 1 2)))
 (+ (:STEP (0 0 2 1 2)) (:STEP (0 0 2 1 0)) (:STEP (2 1 1 0 2))
    (:STEP (0 1 1 0 2)) (:STEP (0 2 1 1 2)) (:STEP (0 2 1 1 0))
    (:STEP (0 0 1 2 0)))
 (+ (:STEP (1 1 0 0 2)) (:STEP (1 1 2 0 0)) (:STEP (2 0 0 0 2))
    (:STEP (1 0 0 0 2)) (:STEP (1 2 0 0 0)) (:STEP (0 0 2 0 2))
    (:STEP (1 0 0 2 0)))
 (+ (:STEP (0 0 2 2 1)) (:STEP (0 0 2 2 0)) (:STEP (0 0 1 2 1))
    (:STEP (0 0 2 1 2)) (:STEP (2 1 1 2 1)) (:STEP (0 1 1 2 1))
    (:STEP (0 2 1 1 2)))
 (+ (:STEP (1 1 2 2 0)) (:STEP (1 1 2 2 1)) (:STEP (1 1 0 2 0))
    (:STEP (1 1 2 0 2)) (:STEP (2 0 0 2 0)) (:STEP (1 0 0 2 0))
    (:STEP (1 2 0 0 2)))
 (+ (:STEP (0 0 1 0 2)) (:STEP (1 0 0 1 2)) (:STEP (1 0 0 1 0)))
 (+ (:STEP (0 0 1 0 1)) (:STEP (2 0 1 0 1)) (:STEP (2 0 0 1 0))
    (:STEP (1 0 1 0 1)) (:STEP (1 2 1 0 1)) (:STEP (1 2 0 1 0))
    (:STEP (0 0 2 0 1)) (:STEP (1 0 0 2 0)) (:STEP (0 0 1 2 1))
    (:STEP (1 0 0 1 2)))
 (+ (:STEP (1 1 0 0 1)) (:STEP (2 1 0 0 1)) (:STEP (2 1 1 0 0))
    (:STEP (0 1 0 0 1)) (:STEP (0 2 0 0 1)) (:STEP (0 2 1 0 0))
    (:STEP (0 0 2 0 1)) (:STEP (0 0 1 0 1)) (:STEP (0 0 1 2 1))
    (:STEP (0 0 1 2 0)) (:STEP (0 0 1 1 2)))
 (+ (:STEP (0 0 1 0 2)) (:STEP (2 0 1 0 2)) (:STEP (2 0 0 1 2))
    (:STEP (2 0 0 1 0)) (:STEP (1 0 1 0 2)) (:STEP (1 2 1 0 2))
    (:STEP (1 2 0 1 2)) (:STEP (1 2 0 1 0)) (:STEP (0 0 2 0 2))
    (:STEP (1 0 0 2 0)))
 (+ (:STEP (1 1 0 0 2)) (:STEP (2 1 0 0 2)) (:STEP (2 1 1 0 0))
    (:STEP (0 1 0 0 2)) (:STEP (0 2 0 0 2)) (:STEP (0 2 1 0 0))
    (:STEP (0 0 2 0 2)) (:STEP (0 0 1 0 2)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (0 0 2 0 1)) (:STEP (2 0 0 2 0)) (:STEP (0 0 1 2 1))
    (:STEP (2 0 1 2 1)) (:STEP (2 0 0 1 2)) (:STEP (1 0 1 2 1))
    (:STEP (1 2 1 2 1)) (:STEP (1 2 0 2 1)) (:STEP (1 2 0 1 2)))
 (+ (:STEP (1 1 2 1 0)) (:STEP (2 1 1 2 1)) (:STEP (1 1 0 2 0))
    (:STEP (2 1 0 2 0)) (:STEP (2 1 1 0 2)) (:STEP (0 1 0 2 0))
    (:STEP (0 2 0 2 0)) (:STEP (0 2 1 2 0)) (:STEP (0 2 1 0 2)))
 (+ (:STEP (0 0 1 1 2)) (:STEP (0 0 1 1 0)))
 (+ (:STEP (1 0 1 0 2)) (:STEP (0 1 0 1 2)) (:STEP (0 1 0 1 0)))
 (+ (:STEP (0 0 2 1 0)) (:STEP (0 1 1 0 1)) (:STEP (2 1 1 0 1))
    (:STEP (2 0 1 1 0)) (:STEP (0 0 1 2 1)) (:STEP (0 0 1 2 0))
    (:STEP (0 0 1 1 2)))
 (+ (:STEP (1 1 0 0 1)) (:STEP (1 1 2 0 0)) (:STEP (1 0 0 0 1))
    (:STEP (2 0 0 0 1)) (:STEP (2 1 0 0 0)) (:STEP (1 0 2 0 1))
    (:STEP (0 1 2 0 1)) (:STEP (0 1 0 2 0)) (:STEP (1 0 1 2 1))
    (:STEP (0 1 0 1 2)))
 (+ (:STEP (0 0 2 1 2)) (:STEP (0 0 2 1 0)) (:STEP (0 1 1 0 2))
    (:STEP (2 1 1 0 2)) (:STEP (2 0 1 1 2)) (:STEP (2 0 1 1 0))
    (:STEP (0 0 1 2 0)))
 (+ (:STEP (1 1 0 0 2)) (:STEP (1 1 2 0 0)) (:STEP (1 0 0 0 2))
    (:STEP (2 0 0 0 2)) (:STEP (2 1 0 0 0)) (:STEP (1 0 2 0 2))
    (:STEP (0 1 2 0 2)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (0 0 2 2 1)) (:STEP (0 0 2 2 0)) (:STEP (0 0 1 2 1))
    (:STEP (0 0 2 1 2)) (:STEP (0 1 1 2 1)) (:STEP (2 1 1 2 1))
    (:STEP (2 0 1 1 2)))
 (+ (:STEP (1 1 2 2 0)) (:STEP (1 1 2 2 1)) (:STEP (1 1 0 2 0))
    (:STEP (1 1 2 0 2)) (:STEP (1 0 0 2 0)) (:STEP (2 0 0 2 0))
    (:STEP (2 1 0 0 2))))
; compiling (DEFPARAMETER *DEG4QUAD-BASIS* ...)
STEENROD> (get-leaves *DEG4QUAD-BASIS*)

((:STEP (1 0 2 0 0)) (:STEP (1 0 0 2 0)) (:STEP (0 1 2 1 2))
 (:STEP (1 0 2 0 2)) (:STEP (1 0 2 1 0)) (:STEP (1 0 0 2 0))
 (:STEP (0 1 2 0 0)) (:STEP (0 1 0 2 0)) (:STEP (1 0 2 1 2))
 (:STEP (0 1 2 0 2)) (:STEP (2 1 0 1 0)) (:STEP (0 1 0 2 0))
 (:STEP (2 0 1 0 0)) (:STEP (0 0 1 2 0)) (:STEP (2 1 0 1 2))
 (:STEP (2 0 1 0 2)) (:STEP (0 2 1 1 0)) (:STEP (0 0 1 2 0))
 (:STEP (1 2 0 0 0)) (:STEP (1 0 0 2 0)) (:STEP (0 2 1 1 2))
 (:STEP (1 2 0 0 2)) (:STEP (1 0 0 1 2)) (:STEP (1 2 0 1 0))
 (:STEP (1 0 0 2 0)) (:STEP (0 2 1 0 0)) (:STEP (0 0 1 2 0))
 (:STEP (1 2 0 1 2)) (:STEP (0 2 1 0 2)) (:STEP (0 0 1 1 2))
 (:STEP (0 1 0 1 2)) (:STEP (2 0 1 1 0)) (:STEP (0 0 1 2 0))
 (:STEP (2 1 0 0 0)) (:STEP (0 1 0 2 0)) (:STEP (2 0 1 1 2))
 (:STEP (2 1 0 0 2)) (:STEP (0 2 0 1 0)) (:STEP (1 2 1 0 1))
 (:STEP (0 1 2 1 0)) (:STEP (1 0 2 0 1)) (:STEP (0 1 0 2 0))
 (:STEP (1 0 1 2 1)) (:STEP (0 1 0 1 2)) (:STEP (1 2 1 0 0))
 (:STEP (0 2 0 0 1)) (:STEP (1 0 2 0 0)) (:STEP (0 0 2 0 1))
 (:STEP (1 0 0 2 0)) (:STEP (0 0 1 2 1)) (:STEP (1 0 0 1 2))
 (:STEP (0 2 0 1 2)) (:STEP (0 2 0 1 0)) (:STEP (1 2 1 0 2))
 (:STEP (0 1 2 1 2)) (:STEP (0 1 2 1 0)) (:STEP (1 0 2 0 2))
 (:STEP (0 1 0 2 0)) (:STEP (1 2 1 0 0)) (:STEP (0 2 0 0 2))
 (:STEP (1 0 2 0 0)) (:STEP (0 0 2 0 2)) (:STEP (1 0 0 2 0))
 (:STEP (0 2 0 2 0)) (:STEP (2 0 1 2 1)) (:STEP (0 2 0 1 2))
 (:STEP (1 2 1 2 1)) (:STEP (0 1 2 1 2)) (:STEP (1 2 1 2 1))
 (:STEP (2 1 0 2 0)) (:STEP (1 2 1 0 2)) (:STEP (0 2 0 2 0))
 (:STEP (1 0 2 0 2)) (:STEP (2 0 0 1 0)) (:STEP (0 2 1 0 1))
 (:STEP (1 2 1 0 1)) (:STEP (1 0 1 0 1)) (:STEP (1 0 2 0 1))
 (:STEP (1 0 2 1 0)) (:STEP (0 0 2 0 1)) (:STEP (1 0 0 2 0))
 (:STEP (0 0 1 2 1)) (:STEP (1 0 0 1 2)) (:STEP (2 1 1 0 0))
 (:STEP (1 2 0 0 1)) (:STEP (0 2 0 0 1)) (:STEP (0 1 0 0 1))
 (:STEP (0 1 2 0 1)) (:STEP (0 1 2 0 0)) (:STEP (1 0 2 0 1))
 (:STEP (0 1 0 2 0)) (:STEP (1 0 1 2 1)) (:STEP (0 1 0 1 2))
 (:STEP (2 0 0 1 2)) (:STEP (2 0 0 1 0)) (:STEP (0 2 1 0 2))
 (:STEP (1 2 1 0 2)) (:STEP (1 0 1 0 2)) (:STEP (1 0 2 0 2))
 (:STEP (1 0 2 1 2)) (:STEP (1 0 2 1 0)) (:STEP (0 0 2 0 2))
 (:STEP (1 0 0 2 0)) (:STEP (2 1 1 0 0)) (:STEP (1 2 0 0 2))
 (:STEP (0 2 0 0 2)) (:STEP (0 1 0 0 2)) (:STEP (0 1 2 0 2))
 (:STEP (0 1 2 0 0)) (:STEP (1 0 2 0 2)) (:STEP (0 1 0 2 0))
 (:STEP (2 0 0 2 0)) (:STEP (0 0 1 2 1)) (:STEP (2 0 0 1 2))
 (:STEP (0 2 1 2 1)) (:STEP (1 2 1 2 1)) (:STEP (1 0 1 2 1))
 (:STEP (1 0 2 1 2)) (:STEP (2 1 1 2 1)) (:STEP (1 1 0 2 0))
 (:STEP (2 1 1 0 2)) (:STEP (1 2 0 2 0)) (:STEP (0 2 0 2 0))
 (:STEP (0 1 0 2 0)) (:STEP (0 1 2 0 2)) (:STEP (0 2 0 1 0))
 (:STEP (1 0 1 0 1)) (:STEP (2 1 0 1 0)) (:STEP (1 0 2 0 1))
 (:STEP (0 1 2 0 1)) (:STEP (0 1 0 2 0)) (:STEP (1 0 1 2 1))
 (:STEP (0 1 0 1 2)) (:STEP (1 2 1 0 0)) (:STEP (0 1 0 0 1))
 (:STEP (2 0 1 0 0)) (:STEP (0 0 2 0 1)) (:STEP (0 0 1 0 1))
 (:STEP (0 0 1 2 1)) (:STEP (0 0 1 2 0)) (:STEP (0 0 1 1 2))
 (:STEP (0 2 0 1 2)) (:STEP (0 2 0 1 0)) (:STEP (1 0 1 0 2))
 (:STEP (2 1 0 1 2)) (:STEP (2 1 0 1 0)) (:STEP (1 0 2 0 2))
 (:STEP (0 1 2 0 2)) (:STEP (0 1 0 2 0)) (:STEP (1 2 1 0 0))
 (:STEP (0 1 0 0 2)) (:STEP (2 0 1 0 0)) (:STEP (0 0 2 0 2))
 (:STEP (0 0 1 0 2)) (:STEP (0 0 1 2 0)) (:STEP (0 2 0 2 0))
 (:STEP (0 2 1 2 1)) (:STEP (0 2 0 1 2)) (:STEP (1 0 1 2 1))
 (:STEP (2 1 0 2 1)) (:STEP (2 1 0 1 2)) (:STEP (1 2 1 2 1))
 (:STEP (1 2 0 2 0)) (:STEP (1 2 1 0 2)) (:STEP (0 1 0 2 0))
 (:STEP (2 0 1 2 0)) (:STEP (2 0 1 0 2)) (:STEP (2 1 1 0 1))
 (:STEP (0 1 1 0 1)) (:STEP (0 2 1 1 0)) (:STEP (0 0 1 2 1))
 (:STEP (0 0 1 2 0)) (:STEP (0 0 1 1 2)) (:STEP (1 1 2 0 0))
 (:STEP (2 0 0 0 1)) (:STEP (1 0 0 0 1)) (:STEP (1 2 0 0 0))
 (:STEP (0 0 2 0 1)) (:STEP (1 0 0 2 0)) (:STEP (0 0 1 2 1))
 (:STEP (1 0 0 1 2)) (:STEP (0 0 2 1 0)) (:STEP (2 1 1 0 2))
 (:STEP (0 1 1 0 2)) (:STEP (0 2 1 1 2)) (:STEP (0 2 1 1 0))
 (:STEP (0 0 1 2 0)) (:STEP (1 1 2 0 0)) (:STEP (2 0 0 0 2))
 (:STEP (1 0 0 0 2)) (:STEP (1 2 0 0 0)) (:STEP (0 0 2 0 2))
 (:STEP (1 0 0 2 0)) (:STEP (0 0 2 2 0)) (:STEP (0 0 1 2 1))
 (:STEP (0 0 2 1 2)) (:STEP (2 1 1 2 1)) (:STEP (0 1 1 2 1))
 (:STEP (0 2 1 1 2)) (:STEP (1 1 2 2 1)) (:STEP (1 1 0 2 0))
 (:STEP (1 1 2 0 2)) (:STEP (2 0 0 2 0)) (:STEP (1 0 0 2 0))
 (:STEP (1 2 0 0 2)) (:STEP (1 0 0 1 2)) (:STEP (1 0 0 1 0))
 (:STEP (2 0 1 0 1)) (:STEP (2 0 0 1 0)) (:STEP (1 0 1 0 1))
 (:STEP (1 2 1 0 1)) (:STEP (1 2 0 1 0)) (:STEP (0 0 2 0 1))
 (:STEP (1 0 0 2 0)) (:STEP (0 0 1 2 1)) (:STEP (1 0 0 1 2))
 (:STEP (2 1 0 0 1)) (:STEP (2 1 1 0 0)) (:STEP (0 1 0 0 1))
 (:STEP (0 2 0 0 1)) (:STEP (0 2 1 0 0)) (:STEP (0 0 2 0 1))
 (:STEP (0 0 1 0 1)) (:STEP (0 0 1 2 1)) (:STEP (0 0 1 2 0))
 (:STEP (0 0 1 1 2)) (:STEP (2 0 1 0 2)) (:STEP (2 0 0 1 2))
 (:STEP (2 0 0 1 0)) (:STEP (1 0 1 0 2)) (:STEP (1 2 1 0 2))
 (:STEP (1 2 0 1 2)) (:STEP (1 2 0 1 0)) (:STEP (0 0 2 0 2))
 (:STEP (1 0 0 2 0)) (:STEP (2 1 0 0 2)) (:STEP (2 1 1 0 0))
 (:STEP (0 1 0 0 2)) (:STEP (0 2 0 0 2)) (:STEP (0 2 1 0 0))
 (:STEP (0 0 2 0 2)) (:STEP (0 0 1 0 2)) (:STEP (0 0 1 2 0))
 (:STEP (2 0 0 2 0)) (:STEP (0 0 1 2 1)) (:STEP (2 0 1 2 1))
 (:STEP (2 0 0 1 2)) (:STEP (1 0 1 2 1)) (:STEP (1 2 1 2 1))
 (:STEP (1 2 0 2 1)) (:STEP (1 2 0 1 2)) (:STEP (2 1 1 2 1))
 (:STEP (1 1 0 2 0)) (:STEP (2 1 0 2 0)) (:STEP (2 1 1 0 2))
 (:STEP (0 1 0 2 0)) (:STEP (0 2 0 2 0)) (:STEP (0 2 1 2 0))
 (:STEP (0 2 1 0 2)) (:STEP (0 0 1 1 0)) (:STEP (0 1 0 1 2))
 (:STEP (0 1 0 1 0)) (:STEP (0 1 1 0 1)) (:STEP (2 1 1 0 1))
 (:STEP (2 0 1 1 0)) (:STEP (0 0 1 2 1)) (:STEP (0 0 1 2 0))
 (:STEP (0 0 1 1 2)) (:STEP (1 1 2 0 0)) (:STEP (1 0 0 0 1))
 (:STEP (2 0 0 0 1)) (:STEP (2 1 0 0 0)) (:STEP (1 0 2 0 1))
 (:STEP (0 1 2 0 1)) (:STEP (0 1 0 2 0)) (:STEP (1 0 1 2 1))
 (:STEP (0 1 0 1 2)) (:STEP (0 0 2 1 0)) (:STEP (0 1 1 0 2))
 (:STEP (2 1 1 0 2)) (:STEP (2 0 1 1 2)) (:STEP (2 0 1 1 0))
 (:STEP (0 0 1 2 0)) (:STEP (1 1 2 0 0)) (:STEP (1 0 0 0 2))
 (:STEP (2 0 0 0 2)) (:STEP (2 1 0 0 0)) (:STEP (1 0 2 0 2))
 (:STEP (0 1 2 0 2)) (:STEP (0 1 0 2 0)) (:STEP (0 0 2 2 0))
 (:STEP (0 0 1 2 1)) (:STEP (0 0 2 1 2)) (:STEP (0 1 1 2 1))
 (:STEP (2 1 1 2 1)) (:STEP (2 0 1 1 2)) (:STEP (1 1 2 2 1))
 (:STEP (1 1 0 2 0)) (:STEP (1 1 2 0 2)) (:STEP (1 0 0 2 0))
 (:STEP (2 0 0 2 0)) (:STEP (2 1 0 0 2)))
STEENROD> (get-leaves '(+ (:vec 1) (:vec 2)))
NIL
STEENROD> (get-leaves '(+ (:vec 1) (:vec 2)))

NIL
STEENROD> (get-leaves '(+ (:step 1) (:step 2)))
((:STEP 1) (:STEP 2))
; compiling (DEFUN GET-LEAVES ...)
; compiling (DEFPARAMETER *ALL-THINGS* ...)
STEENROD> (find '(:step (1 1 2 2 0)) *all-things* :test #'equalp)

(:STEP (1 1 2 2 0))
STEENROD> (translate  '(:step (1 1 2 2 0)))
(:VEC 87)
STEENROD> (ash 1 1)
2
STEENROD> (ash 1 0)1
STEENROD> (ash 1 0)
1
; compiling (DEFUN TRANSLATE ...)
STEENROD> (translate  '(:step (1 1 2 2 0)))

154742504910672534362390528
STEENROD> (ash * -87)
1
STEENROD> (ash 1 87)
154742504910672534362390528
STEENROD> (position 'a '(a b c))
0
STEENROD> (ash 1 0)
1
STEENROD> (logior 1 2) 
3
STEENROD> (funcall (comp #'exp #'1+) 0 )
2.7182817
STEENROD> *DEG4QUAD-BASIS*
((+ (:STEP (0 2 0 1 0)) (:STEP (0 1 2 1 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (1 2 1 0 0)) (:STEP (1 0 2 0 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (0 2 0 1 2)) (:STEP (0 1 2 1 2)))
 (+ (:STEP (1 2 1 0 2)) (:STEP (1 0 2 0 2)))
 (+ (:STEP (2 0 0 1 0)) (:STEP (1 0 2 1 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (2 1 1 0 0)) (:STEP (0 1 2 0 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (2 0 0 1 2)) (:STEP (1 0 2 1 2)))
 (+ (:STEP (2 1 1 0 2)) (:STEP (0 1 2 0 2)))
 (+ (:STEP (0 2 0 1 0)) (:STEP (2 1 0 1 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (1 2 1 0 0)) (:STEP (2 0 1 0 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (0 2 0 1 2)) (:STEP (2 1 0 1 2)))
 (+ (:STEP (1 2 1 0 2)) (:STEP (2 0 1 0 2)))
 (+ (:STEP (0 0 2 1 0)) (:STEP (0 2 1 1 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (1 1 2 0 0)) (:STEP (1 2 0 0 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (0 0 2 1 2)) (:STEP (0 2 1 1 2)))
 (+ (:STEP (1 1 2 0 2)) (:STEP (1 2 0 0 2))) (:STEP (1 0 0 1 2))
 (+ (:STEP (2 0 0 1 0)) (:STEP (1 2 0 1 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (2 1 1 0 0)) (:STEP (0 2 1 0 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (2 0 0 1 2)) (:STEP (1 2 0 1 2)))
 (+ (:STEP (2 1 1 0 2)) (:STEP (0 2 1 0 2))) (:STEP (0 0 1 1 2))
 (:STEP (0 1 0 1 2))
 (+ (:STEP (0 0 2 1 0)) (:STEP (2 0 1 1 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (1 1 2 0 0)) (:STEP (2 1 0 0 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (0 0 2 1 2)) (:STEP (2 0 1 1 2)))
 (+ (:STEP (1 1 2 0 2)) (:STEP (2 1 0 0 2)))
 (+ (:STEP (2 0 1 0 1)) (:STEP (0 2 0 1 0)) (:STEP (1 2 1 0 1))
    (:STEP (0 1 2 1 0)) (:STEP (1 0 2 0 1)) (:STEP (0 1 0 2 0))
    (:STEP (1 0 1 2 1)) (:STEP (0 1 0 1 2)))
 (+ (:STEP (2 1 0 0 1)) (:STEP (1 2 1 0 0)) (:STEP (0 2 0 0 1))
    (:STEP (1 0 2 0 0)) (:STEP (0 0 2 0 1)) (:STEP (1 0 0 2 0))
    (:STEP (0 0 1 2 1)) (:STEP (1 0 0 1 2)))
 (+ (:STEP (2 0 1 0 2)) (:STEP (0 2 0 1 2)) (:STEP (0 2 0 1 0))
    (:STEP (1 2 1 0 2)) (:STEP (0 1 2 1 2)) (:STEP (0 1 2 1 0))
    (:STEP (1 0 2 0 2)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (2 1 0 0 2)) (:STEP (1 2 1 0 0)) (:STEP (0 2 0 0 2))
    (:STEP (1 0 2 0 0)) (:STEP (0 0 2 0 2)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (2 0 2 0 1)) (:STEP (0 2 0 2 0)) (:STEP (2 0 1 2 1))
    (:STEP (0 2 0 1 2)) (:STEP (1 2 1 2 1)) (:STEP (0 1 2 1 2)))
 (+ (:STEP (2 1 2 1 0)) (:STEP (1 2 1 2 1)) (:STEP (2 1 0 2 0))
    (:STEP (1 2 1 0 2)) (:STEP (0 2 0 2 0)) (:STEP (1 0 2 0 2)))
 (+ (:STEP (0 0 1 0 1)) (:STEP (2 0 0 1 0)) (:STEP (0 2 1 0 1))
    (:STEP (1 2 1 0 1)) (:STEP (1 0 1 0 1)) (:STEP (1 0 2 0 1))
    (:STEP (1 0 2 1 0)) (:STEP (0 0 2 0 1)) (:STEP (1 0 0 2 0))
    (:STEP (0 0 1 2 1)) (:STEP (1 0 0 1 2)))
 (+ (:STEP (1 1 0 0 1)) (:STEP (2 1 1 0 0)) (:STEP (1 2 0 0 1))
    (:STEP (0 2 0 0 1)) (:STEP (0 1 0 0 1)) (:STEP (0 1 2 0 1))
    (:STEP (0 1 2 0 0)) (:STEP (1 0 2 0 1)) (:STEP (0 1 0 2 0))
    (:STEP (1 0 1 2 1)) (:STEP (0 1 0 1 2)))
 (+ (:STEP (0 0 1 0 2)) (:STEP (2 0 0 1 2)) (:STEP (2 0 0 1 0))
    (:STEP (0 2 1 0 2)) (:STEP (1 2 1 0 2)) (:STEP (1 0 1 0 2))
    (:STEP (1 0 2 0 2)) (:STEP (1 0 2 1 2)) (:STEP (1 0 2 1 0))
    (:STEP (0 0 2 0 2)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (1 1 0 0 2)) (:STEP (2 1 1 0 0)) (:STEP (1 2 0 0 2))
    (:STEP (0 2 0 0 2)) (:STEP (0 1 0 0 2)) (:STEP (0 1 2 0 2))
    (:STEP (0 1 2 0 0)) (:STEP (1 0 2 0 2)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (0 0 2 0 1)) (:STEP (2 0 0 2 0)) (:STEP (0 0 1 2 1))
    (:STEP (2 0 0 1 2)) (:STEP (0 2 1 2 1)) (:STEP (1 2 1 2 1))
    (:STEP (1 0 1 2 1)) (:STEP (1 0 2 1 2)))
 (+ (:STEP (1 1 2 1 0)) (:STEP (2 1 1 2 1)) (:STEP (1 1 0 2 0))
    (:STEP (2 1 1 0 2)) (:STEP (1 2 0 2 0)) (:STEP (0 2 0 2 0))
    (:STEP (0 1 0 2 0)) (:STEP (0 1 2 0 2)))
 (+ (:STEP (0 2 1 0 1)) (:STEP (0 2 0 1 0)) (:STEP (1 0 1 0 1))
    (:STEP (2 1 0 1 0)) (:STEP (1 0 2 0 1)) (:STEP (0 1 2 0 1))
    (:STEP (0 1 0 2 0)) (:STEP (1 0 1 2 1)) (:STEP (0 1 0 1 2)))
 (+ (:STEP (1 2 0 0 1)) (:STEP (1 2 1 0 0)) (:STEP (0 1 0 0 1))
    (:STEP (2 0 1 0 0)) (:STEP (0 0 2 0 1)) (:STEP (0 0 1 0 1))
    (:STEP (0 0 1 2 1)) (:STEP (0 0 1 2 0)) (:STEP (0 0 1 1 2)))
 (+ (:STEP (0 2 1 0 2)) (:STEP (0 2 0 1 2)) (:STEP (0 2 0 1 0))
    (:STEP (1 0 1 0 2)) (:STEP (2 1 0 1 2)) (:STEP (2 1 0 1 0))
    (:STEP (1 0 2 0 2)) (:STEP (0 1 2 0 2)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (1 2 0 0 2)) (:STEP (1 2 1 0 0)) (:STEP (0 1 0 0 2))
    (:STEP (2 0 1 0 0)) (:STEP (0 0 2 0 2)) (:STEP (0 0 1 0 2))
    (:STEP (0 0 1 2 0)))
 (+ (:STEP (2 0 2 0 1)) (:STEP (0 2 0 2 0)) (:STEP (0 2 1 2 1))
    (:STEP (0 2 0 1 2)) (:STEP (1 0 1 2 1)) (:STEP (2 1 0 2 1))
    (:STEP (2 1 0 1 2)))
 (+ (:STEP (2 1 2 1 0)) (:STEP (1 2 1 2 1)) (:STEP (1 2 0 2 0))
    (:STEP (1 2 1 0 2)) (:STEP (0 1 0 2 0)) (:STEP (2 0 1 2 0))
    (:STEP (2 0 1 0 2)))
 (+ (:STEP (0 0 2 1 0)) (:STEP (2 1 1 0 1)) (:STEP (0 1 1 0 1))
    (:STEP (0 2 1 1 0)) (:STEP (0 0 1 2 1)) (:STEP (0 0 1 2 0))
    (:STEP (0 0 1 1 2)))
 (+ (:STEP (1 1 0 0 1)) (:STEP (1 1 2 0 0)) (:STEP (2 0 0 0 1))
    (:STEP (1 0 0 0 1)) (:STEP (1 2 0 0 0)) (:STEP (0 0 2 0 1))
    (:STEP (1 0 0 2 0)) (:STEP (0 0 1 2 1)) (:STEP (1 0 0 1 2)))
 (+ (:STEP (0 0 2 1 2)) (:STEP (0 0 2 1 0)) (:STEP (2 1 1 0 2))
    (:STEP (0 1 1 0 2)) (:STEP (0 2 1 1 2)) (:STEP (0 2 1 1 0))
    (:STEP (0 0 1 2 0)))
 (+ (:STEP (1 1 0 0 2)) (:STEP (1 1 2 0 0)) (:STEP (2 0 0 0 2))
    (:STEP (1 0 0 0 2)) (:STEP (1 2 0 0 0)) (:STEP (0 0 2 0 2))
    (:STEP (1 0 0 2 0)))
 (+ (:STEP (0 0 2 2 1)) (:STEP (0 0 2 2 0)) (:STEP (0 0 1 2 1))
    (:STEP (0 0 2 1 2)) (:STEP (2 1 1 2 1)) (:STEP (0 1 1 2 1))
    (:STEP (0 2 1 1 2)))
 (+ (:STEP (1 1 2 2 0)) (:STEP (1 1 2 2 1)) (:STEP (1 1 0 2 0))
    (:STEP (1 1 2 0 2)) (:STEP (2 0 0 2 0)) (:STEP (1 0 0 2 0))
    (:STEP (1 2 0 0 2)))
 (+ (:STEP (0 0 1 0 2)) (:STEP (1 0 0 1 2)) (:STEP (1 0 0 1 0)))
 (+ (:STEP (0 0 1 0 1)) (:STEP (2 0 1 0 1)) (:STEP (2 0 0 1 0))
    (:STEP (1 0 1 0 1)) (:STEP (1 2 1 0 1)) (:STEP (1 2 0 1 0))
    (:STEP (0 0 2 0 1)) (:STEP (1 0 0 2 0)) (:STEP (0 0 1 2 1))
    (:STEP (1 0 0 1 2)))
 (+ (:STEP (1 1 0 0 1)) (:STEP (2 1 0 0 1)) (:STEP (2 1 1 0 0))
    (:STEP (0 1 0 0 1)) (:STEP (0 2 0 0 1)) (:STEP (0 2 1 0 0))
    (:STEP (0 0 2 0 1)) (:STEP (0 0 1 0 1)) (:STEP (0 0 1 2 1))
    (:STEP (0 0 1 2 0)) (:STEP (0 0 1 1 2)))
 (+ (:STEP (0 0 1 0 2)) (:STEP (2 0 1 0 2)) (:STEP (2 0 0 1 2))
    (:STEP (2 0 0 1 0)) (:STEP (1 0 1 0 2)) (:STEP (1 2 1 0 2))
    (:STEP (1 2 0 1 2)) (:STEP (1 2 0 1 0)) (:STEP (0 0 2 0 2))
    (:STEP (1 0 0 2 0)))
 (+ (:STEP (1 1 0 0 2)) (:STEP (2 1 0 0 2)) (:STEP (2 1 1 0 0))
    (:STEP (0 1 0 0 2)) (:STEP (0 2 0 0 2)) (:STEP (0 2 1 0 0))
    (:STEP (0 0 2 0 2)) (:STEP (0 0 1 0 2)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (0 0 2 0 1)) (:STEP (2 0 0 2 0)) (:STEP (0 0 1 2 1))
    (:STEP (2 0 1 2 1)) (:STEP (2 0 0 1 2)) (:STEP (1 0 1 2 1))
    (:STEP (1 2 1 2 1)) (:STEP (1 2 0 2 1)) (:STEP (1 2 0 1 2)))
 (+ (:STEP (1 1 2 1 0)) (:STEP (2 1 1 2 1)) (:STEP (1 1 0 2 0))
    (:STEP (2 1 0 2 0)) (:STEP (2 1 1 0 2)) (:STEP (0 1 0 2 0))
    (:STEP (0 2 0 2 0)) (:STEP (0 2 1 2 0)) (:STEP (0 2 1 0 2)))
 (+ (:STEP (0 0 1 1 2)) (:STEP (0 0 1 1 0)))
 (+ (:STEP (1 0 1 0 2)) (:STEP (0 1 0 1 2)) (:STEP (0 1 0 1 0)))
 (+ (:STEP (0 0 2 1 0)) (:STEP (0 1 1 0 1)) (:STEP (2 1 1 0 1))
    (:STEP (2 0 1 1 0)) (:STEP (0 0 1 2 1)) (:STEP (0 0 1 2 0))
    (:STEP (0 0 1 1 2)))
 (+ (:STEP (1 1 0 0 1)) (:STEP (1 1 2 0 0)) (:STEP (1 0 0 0 1))
    (:STEP (2 0 0 0 1)) (:STEP (2 1 0 0 0)) (:STEP (1 0 2 0 1))
    (:STEP (0 1 2 0 1)) (:STEP (0 1 0 2 0)) (:STEP (1 0 1 2 1))
    (:STEP (0 1 0 1 2)))
 (+ (:STEP (0 0 2 1 2)) (:STEP (0 0 2 1 0)) (:STEP (0 1 1 0 2))
    (:STEP (2 1 1 0 2)) (:STEP (2 0 1 1 2)) (:STEP (2 0 1 1 0))
    (:STEP (0 0 1 2 0)))
 (+ (:STEP (1 1 0 0 2)) (:STEP (1 1 2 0 0)) (:STEP (1 0 0 0 2))
    (:STEP (2 0 0 0 2)) (:STEP (2 1 0 0 0)) (:STEP (1 0 2 0 2))
    (:STEP (0 1 2 0 2)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (0 0 2 2 1)) (:STEP (0 0 2 2 0)) (:STEP (0 0 1 2 1))
    (:STEP (0 0 2 1 2)) (:STEP (0 1 1 2 1)) (:STEP (2 1 1 2 1))
    (:STEP (2 0 1 1 2)))
 (+ (:STEP (1 1 2 2 0)) (:STEP (1 1 2 2 1)) (:STEP (1 1 0 2 0))
    (:STEP (1 1 2 0 2)) (:STEP (1 0 0 2 0)) (:STEP (2 0 0 2 0))
    (:STEP (2 1 0 0 2))))
; compiling (DEFPARAMETER *SPARSE-MX* ...)

; file: /tmp/fileZlSzIu
; in: DEFPARAMETER *SPARSE-MX*
;     (DEFPARAMETER STEENROD::*SPARSE-MX*
;       (MAP 'VECTOR
;            (REDUCE #'LOGIOR
;                    (MAPCAR STEENROD::TRANSLATE
;                            (MAPCAR #'CDR STEENROD::*DEG4QUAD-BASIS*)))))
; --> PROGN 
; ==>
;   (SB-IMPL::%DEFPARAMETER 'STEENROD::*SPARSE-MX*
;                           (MAP 'VECTOR
;                                (REDUCE #'LOGIOR
;                                        (MAPCAR STEENROD::TRANSLATE
;                                                (MAPCAR #'CDR
;                                                        STEENROD::*DEG4QUAD-BASIS*))))
;                           NIL 'NIL (SB-C:SOURCE-LOCATION))
; 
; caught WARNING:
;   undefined variable: TRANSLATE
; 
; compilation unit finished
;   Undefined variable:
;     TRANSLATE
;   caught 1 WARNING condition
; compiling (DEFPARAMETER *SPARSE-MX* ...)
STEENROD> (mapcar #'cdr *deg4quad-basis*)

(((:STEP (0 2 0 1 0)) (:STEP (0 1 2 1 0)) (:STEP (0 1 0 2 0)))
 ((:STEP (1 2 1 0 0)) (:STEP (1 0 2 0 0)) (:STEP (1 0 0 2 0)))
 ((:STEP (0 2 0 1 2)) (:STEP (0 1 2 1 2)))
 ((:STEP (1 2 1 0 2)) (:STEP (1 0 2 0 2)))
 ((:STEP (2 0 0 1 0)) (:STEP (1 0 2 1 0)) (:STEP (1 0 0 2 0)))
 ((:STEP (2 1 1 0 0)) (:STEP (0 1 2 0 0)) (:STEP (0 1 0 2 0)))
 ((:STEP (2 0 0 1 2)) (:STEP (1 0 2 1 2)))
 ((:STEP (2 1 1 0 2)) (:STEP (0 1 2 0 2)))
 ((:STEP (0 2 0 1 0)) (:STEP (2 1 0 1 0)) (:STEP (0 1 0 2 0)))
 ((:STEP (1 2 1 0 0)) (:STEP (2 0 1 0 0)) (:STEP (0 0 1 2 0)))
 ((:STEP (0 2 0 1 2)) (:STEP (2 1 0 1 2)))
 ((:STEP (1 2 1 0 2)) (:STEP (2 0 1 0 2)))
 ((:STEP (0 0 2 1 0)) (:STEP (0 2 1 1 0)) (:STEP (0 0 1 2 0)))
 ((:STEP (1 1 2 0 0)) (:STEP (1 2 0 0 0)) (:STEP (1 0 0 2 0)))
 ((:STEP (0 0 2 1 2)) (:STEP (0 2 1 1 2)))
 ((:STEP (1 1 2 0 2)) (:STEP (1 2 0 0 2))) ((1 0 0 1 2))
 ((:STEP (2 0 0 1 0)) (:STEP (1 2 0 1 0)) (:STEP (1 0 0 2 0)))
 ((:STEP (2 1 1 0 0)) (:STEP (0 2 1 0 0)) (:STEP (0 0 1 2 0)))
 ((:STEP (2 0 0 1 2)) (:STEP (1 2 0 1 2)))
 ((:STEP (2 1 1 0 2)) (:STEP (0 2 1 0 2))) ((0 0 1 1 2)) ((0 1 0 1 2))
 ((:STEP (0 0 2 1 0)) (:STEP (2 0 1 1 0)) (:STEP (0 0 1 2 0)))
 ((:STEP (1 1 2 0 0)) (:STEP (2 1 0 0 0)) (:STEP (0 1 0 2 0)))
 ((:STEP (0 0 2 1 2)) (:STEP (2 0 1 1 2)))
 ((:STEP (1 1 2 0 2)) (:STEP (2 1 0 0 2)))
 ((:STEP (2 0 1 0 1)) (:STEP (0 2 0 1 0)) (:STEP (1 2 1 0 1))
  (:STEP (0 1 2 1 0)) (:STEP (1 0 2 0 1)) (:STEP (0 1 0 2 0))
  (:STEP (1 0 1 2 1)) (:STEP (0 1 0 1 2)))
 ((:STEP (2 1 0 0 1)) (:STEP (1 2 1 0 0)) (:STEP (0 2 0 0 1))
  (:STEP (1 0 2 0 0)) (:STEP (0 0 2 0 1)) (:STEP (1 0 0 2 0))
  (:STEP (0 0 1 2 1)) (:STEP (1 0 0 1 2)))
 ((:STEP (2 0 1 0 2)) (:STEP (0 2 0 1 2)) (:STEP (0 2 0 1 0))
  (:STEP (1 2 1 0 2)) (:STEP (0 1 2 1 2)) (:STEP (0 1 2 1 0))
  (:STEP (1 0 2 0 2)) (:STEP (0 1 0 2 0)))
 ((:STEP (2 1 0 0 2)) (:STEP (1 2 1 0 0)) (:STEP (0 2 0 0 2))
  (:STEP (1 0 2 0 0)) (:STEP (0 0 2 0 2)) (:STEP (1 0 0 2 0)))
 ((:STEP (2 0 2 0 1)) (:STEP (0 2 0 2 0)) (:STEP (2 0 1 2 1))
  (:STEP (0 2 0 1 2)) (:STEP (1 2 1 2 1)) (:STEP (0 1 2 1 2)))
 ((:STEP (2 1 2 1 0)) (:STEP (1 2 1 2 1)) (:STEP (2 1 0 2 0))
  (:STEP (1 2 1 0 2)) (:STEP (0 2 0 2 0)) (:STEP (1 0 2 0 2)))
 ((:STEP (0 0 1 0 1)) (:STEP (2 0 0 1 0)) (:STEP (0 2 1 0 1))
  (:STEP (1 2 1 0 1)) (:STEP (1 0 1 0 1)) (:STEP (1 0 2 0 1))
  (:STEP (1 0 2 1 0)) (:STEP (0 0 2 0 1)) (:STEP (1 0 0 2 0))
  (:STEP (0 0 1 2 1)) (:STEP (1 0 0 1 2)))
 ((:STEP (1 1 0 0 1)) (:STEP (2 1 1 0 0)) (:STEP (1 2 0 0 1))
  (:STEP (0 2 0 0 1)) (:STEP (0 1 0 0 1)) (:STEP (0 1 2 0 1))
  (:STEP (0 1 2 0 0)) (:STEP (1 0 2 0 1)) (:STEP (0 1 0 2 0))
  (:STEP (1 0 1 2 1)) (:STEP (0 1 0 1 2)))
 ((:STEP (0 0 1 0 2)) (:STEP (2 0 0 1 2)) (:STEP (2 0 0 1 0))
  (:STEP (0 2 1 0 2)) (:STEP (1 2 1 0 2)) (:STEP (1 0 1 0 2))
  (:STEP (1 0 2 0 2)) (:STEP (1 0 2 1 2)) (:STEP (1 0 2 1 0))
  (:STEP (0 0 2 0 2)) (:STEP (1 0 0 2 0)))
 ((:STEP (1 1 0 0 2)) (:STEP (2 1 1 0 0)) (:STEP (1 2 0 0 2))
  (:STEP (0 2 0 0 2)) (:STEP (0 1 0 0 2)) (:STEP (0 1 2 0 2))
  (:STEP (0 1 2 0 0)) (:STEP (1 0 2 0 2)) (:STEP (0 1 0 2 0)))
 ((:STEP (0 0 2 0 1)) (:STEP (2 0 0 2 0)) (:STEP (0 0 1 2 1))
  (:STEP (2 0 0 1 2)) (:STEP (0 2 1 2 1)) (:STEP (1 2 1 2 1))
  (:STEP (1 0 1 2 1)) (:STEP (1 0 2 1 2)))
 ((:STEP (1 1 2 1 0)) (:STEP (2 1 1 2 1)) (:STEP (1 1 0 2 0))
  (:STEP (2 1 1 0 2)) (:STEP (1 2 0 2 0)) (:STEP (0 2 0 2 0))
  (:STEP (0 1 0 2 0)) (:STEP (0 1 2 0 2)))
 ((:STEP (0 2 1 0 1)) (:STEP (0 2 0 1 0)) (:STEP (1 0 1 0 1))
  (:STEP (2 1 0 1 0)) (:STEP (1 0 2 0 1)) (:STEP (0 1 2 0 1))
  (:STEP (0 1 0 2 0)) (:STEP (1 0 1 2 1)) (:STEP (0 1 0 1 2)))
 ((:STEP (1 2 0 0 1)) (:STEP (1 2 1 0 0)) (:STEP (0 1 0 0 1))
  (:STEP (2 0 1 0 0)) (:STEP (0 0 2 0 1)) (:STEP (0 0 1 0 1))
  (:STEP (0 0 1 2 1)) (:STEP (0 0 1 2 0)) (:STEP (0 0 1 1 2)))
 ((:STEP (0 2 1 0 2)) (:STEP (0 2 0 1 2)) (:STEP (0 2 0 1 0))
  (:STEP (1 0 1 0 2)) (:STEP (2 1 0 1 2)) (:STEP (2 1 0 1 0))
  (:STEP (1 0 2 0 2)) (:STEP (0 1 2 0 2)) (:STEP (0 1 0 2 0)))
 ((:STEP (1 2 0 0 2)) (:STEP (1 2 1 0 0)) (:STEP (0 1 0 0 2))
  (:STEP (2 0 1 0 0)) (:STEP (0 0 2 0 2)) (:STEP (0 0 1 0 2))
  (:STEP (0 0 1 2 0)))
 ((:STEP (2 0 2 0 1)) (:STEP (0 2 0 2 0)) (:STEP (0 2 1 2 1))
  (:STEP (0 2 0 1 2)) (:STEP (1 0 1 2 1)) (:STEP (2 1 0 2 1))
  (:STEP (2 1 0 1 2)))
 ((:STEP (2 1 2 1 0)) (:STEP (1 2 1 2 1)) (:STEP (1 2 0 2 0))
  (:STEP (1 2 1 0 2)) (:STEP (0 1 0 2 0)) (:STEP (2 0 1 2 0))
  (:STEP (2 0 1 0 2)))
 ((:STEP (0 0 2 1 0)) (:STEP (2 1 1 0 1)) (:STEP (0 1 1 0 1))
  (:STEP (0 2 1 1 0)) (:STEP (0 0 1 2 1)) (:STEP (0 0 1 2 0))
  (:STEP (0 0 1 1 2)))
 ((:STEP (1 1 0 0 1)) (:STEP (1 1 2 0 0)) (:STEP (2 0 0 0 1))
  (:STEP (1 0 0 0 1)) (:STEP (1 2 0 0 0)) (:STEP (0 0 2 0 1))
  (:STEP (1 0 0 2 0)) (:STEP (0 0 1 2 1)) (:STEP (1 0 0 1 2)))
 ((:STEP (0 0 2 1 2)) (:STEP (0 0 2 1 0)) (:STEP (2 1 1 0 2))
  (:STEP (0 1 1 0 2)) (:STEP (0 2 1 1 2)) (:STEP (0 2 1 1 0))
  (:STEP (0 0 1 2 0)))
 ((:STEP (1 1 0 0 2)) (:STEP (1 1 2 0 0)) (:STEP (2 0 0 0 2))
  (:STEP (1 0 0 0 2)) (:STEP (1 2 0 0 0)) (:STEP (0 0 2 0 2))
  (:STEP (1 0 0 2 0)))
 ((:STEP (0 0 2 2 1)) (:STEP (0 0 2 2 0)) (:STEP (0 0 1 2 1))
  (:STEP (0 0 2 1 2)) (:STEP (2 1 1 2 1)) (:STEP (0 1 1 2 1))
  (:STEP (0 2 1 1 2)))
 ((:STEP (1 1 2 2 0)) (:STEP (1 1 2 2 1)) (:STEP (1 1 0 2 0))
  (:STEP (1 1 2 0 2)) (:STEP (2 0 0 2 0)) (:STEP (1 0 0 2 0))
  (:STEP (1 2 0 0 2)))
 ((:STEP (0 0 1 0 2)) (:STEP (1 0 0 1 2)) (:STEP (1 0 0 1 0)))
 ((:STEP (0 0 1 0 1)) (:STEP (2 0 1 0 1)) (:STEP (2 0 0 1 0))
  (:STEP (1 0 1 0 1)) (:STEP (1 2 1 0 1)) (:STEP (1 2 0 1 0))
  (:STEP (0 0 2 0 1)) (:STEP (1 0 0 2 0)) (:STEP (0 0 1 2 1))
  (:STEP (1 0 0 1 2)))
 ((:STEP (1 1 0 0 1)) (:STEP (2 1 0 0 1)) (:STEP (2 1 1 0 0))
  (:STEP (0 1 0 0 1)) (:STEP (0 2 0 0 1)) (:STEP (0 2 1 0 0))
  (:STEP (0 0 2 0 1)) (:STEP (0 0 1 0 1)) (:STEP (0 0 1 2 1))
  (:STEP (0 0 1 2 0)) (:STEP (0 0 1 1 2)))
 ((:STEP (0 0 1 0 2)) (:STEP (2 0 1 0 2)) (:STEP (2 0 0 1 2))
  (:STEP (2 0 0 1 0)) (:STEP (1 0 1 0 2)) (:STEP (1 2 1 0 2))
  (:STEP (1 2 0 1 2)) (:STEP (1 2 0 1 0)) (:STEP (0 0 2 0 2))
  (:STEP (1 0 0 2 0)))
 ((:STEP (1 1 0 0 2)) (:STEP (2 1 0 0 2)) (:STEP (2 1 1 0 0))
  (:STEP (0 1 0 0 2)) (:STEP (0 2 0 0 2)) (:STEP (0 2 1 0 0))
  (:STEP (0 0 2 0 2)) (:STEP (0 0 1 0 2)) (:STEP (0 0 1 2 0)))
 ((:STEP (0 0 2 0 1)) (:STEP (2 0 0 2 0)) (:STEP (0 0 1 2 1))
  (:STEP (2 0 1 2 1)) (:STEP (2 0 0 1 2)) (:STEP (1 0 1 2 1))
  (:STEP (1 2 1 2 1)) (:STEP (1 2 0 2 1)) (:STEP (1 2 0 1 2)))
 ((:STEP (1 1 2 1 0)) (:STEP (2 1 1 2 1)) (:STEP (1 1 0 2 0))
  (:STEP (2 1 0 2 0)) (:STEP (2 1 1 0 2)) (:STEP (0 1 0 2 0))
  (:STEP (0 2 0 2 0)) (:STEP (0 2 1 2 0)) (:STEP (0 2 1 0 2)))
 ((:STEP (0 0 1 1 2)) (:STEP (0 0 1 1 0)))
 ((:STEP (1 0 1 0 2)) (:STEP (0 1 0 1 2)) (:STEP (0 1 0 1 0)))
 ((:STEP (0 0 2 1 0)) (:STEP (0 1 1 0 1)) (:STEP (2 1 1 0 1))
  (:STEP (2 0 1 1 0)) (:STEP (0 0 1 2 1)) (:STEP (0 0 1 2 0))
  (:STEP (0 0 1 1 2)))
 ((:STEP (1 1 0 0 1)) (:STEP (1 1 2 0 0)) (:STEP (1 0 0 0 1))
  (:STEP (2 0 0 0 1)) (:STEP (2 1 0 0 0)) (:STEP (1 0 2 0 1))
  (:STEP (0 1 2 0 1)) (:STEP (0 1 0 2 0)) (:STEP (1 0 1 2 1))
  (:STEP (0 1 0 1 2)))
 ((:STEP (0 0 2 1 2)) (:STEP (0 0 2 1 0)) (:STEP (0 1 1 0 2))
  (:STEP (2 1 1 0 2)) (:STEP (2 0 1 1 2)) (:STEP (2 0 1 1 0))
  (:STEP (0 0 1 2 0)))
 ((:STEP (1 1 0 0 2)) (:STEP (1 1 2 0 0)) (:STEP (1 0 0 0 2))
  (:STEP (2 0 0 0 2)) (:STEP (2 1 0 0 0)) (:STEP (1 0 2 0 2))
  (:STEP (0 1 2 0 2)) (:STEP (0 1 0 2 0)))
 ((:STEP (0 0 2 2 1)) (:STEP (0 0 2 2 0)) (:STEP (0 0 1 2 1))
  (:STEP (0 0 2 1 2)) (:STEP (0 1 1 2 1)) (:STEP (2 1 1 2 1))
  (:STEP (2 0 1 1 2)))
 ((:STEP (1 1 2 2 0)) (:STEP (1 1 2 2 1)) (:STEP (1 1 0 2 0))
  (:STEP (1 1 2 0 2)) (:STEP (1 0 0 2 0)) (:STEP (2 0 0 2 0))
  (:STEP (2 1 0 0 2))))
STEENROD> (mapcar #'translate (mapcar #'cdr *deg4quad-basis*))
; compiling (DEFPARAMETER *SPARSE-MX* ...); Evaluation aborted on #<TYPE-ERROR expected-type: INTEGER datum: NIL>.
STEENROD> (mapcar #'cdr *deg4quad-basis*)

(((:STEP (0 2 0 1 0)) (:STEP (0 1 2 1 0)) (:STEP (0 1 0 2 0)))
 ((:STEP (1 2 1 0 0)) (:STEP (1 0 2 0 0)) (:STEP (1 0 0 2 0)))
 ((:STEP (0 2 0 1 2)) (:STEP (0 1 2 1 2)))
 ((:STEP (1 2 1 0 2)) (:STEP (1 0 2 0 2)))
 ((:STEP (2 0 0 1 0)) (:STEP (1 0 2 1 0)) (:STEP (1 0 0 2 0)))
 ((:STEP (2 1 1 0 0)) (:STEP (0 1 2 0 0)) (:STEP (0 1 0 2 0)))
 ((:STEP (2 0 0 1 2)) (:STEP (1 0 2 1 2)))
 ((:STEP (2 1 1 0 2)) (:STEP (0 1 2 0 2)))
 ((:STEP (0 2 0 1 0)) (:STEP (2 1 0 1 0)) (:STEP (0 1 0 2 0)))
 ((:STEP (1 2 1 0 0)) (:STEP (2 0 1 0 0)) (:STEP (0 0 1 2 0)))
 ((:STEP (0 2 0 1 2)) (:STEP (2 1 0 1 2)))
 ((:STEP (1 2 1 0 2)) (:STEP (2 0 1 0 2)))
 ((:STEP (0 0 2 1 0)) (:STEP (0 2 1 1 0)) (:STEP (0 0 1 2 0)))
 ((:STEP (1 1 2 0 0)) (:STEP (1 2 0 0 0)) (:STEP (1 0 0 2 0)))
 ((:STEP (0 0 2 1 2)) (:STEP (0 2 1 1 2)))
 ((:STEP (1 1 2 0 2)) (:STEP (1 2 0 0 2))) ((1 0 0 1 2))
 ((:STEP (2 0 0 1 0)) (:STEP (1 2 0 1 0)) (:STEP (1 0 0 2 0)))
 ((:STEP (2 1 1 0 0)) (:STEP (0 2 1 0 0)) (:STEP (0 0 1 2 0)))
 ((:STEP (2 0 0 1 2)) (:STEP (1 2 0 1 2)))
 ((:STEP (2 1 1 0 2)) (:STEP (0 2 1 0 2))) ((0 0 1 1 2)) ((0 1 0 1 2))
 ((:STEP (0 0 2 1 0)) (:STEP (2 0 1 1 0)) (:STEP (0 0 1 2 0)))
 ((:STEP (1 1 2 0 0)) (:STEP (2 1 0 0 0)) (:STEP (0 1 0 2 0)))
 ((:STEP (0 0 2 1 2)) (:STEP (2 0 1 1 2)))
 ((:STEP (1 1 2 0 2)) (:STEP (2 1 0 0 2)))
 ((:STEP (2 0 1 0 1)) (:STEP (0 2 0 1 0)) (:STEP (1 2 1 0 1))
  (:STEP (0 1 2 1 0)) (:STEP (1 0 2 0 1)) (:STEP (0 1 0 2 0))
  (:STEP (1 0 1 2 1)) (:STEP (0 1 0 1 2)))
 ((:STEP (2 1 0 0 1)) (:STEP (1 2 1 0 0)) (:STEP (0 2 0 0 1))
  (:STEP (1 0 2 0 0)) (:STEP (0 0 2 0 1)) (:STEP (1 0 0 2 0))
  (:STEP (0 0 1 2 1)) (:STEP (1 0 0 1 2)))
 ((:STEP (2 0 1 0 2)) (:STEP (0 2 0 1 2)) (:STEP (0 2 0 1 0))
  (:STEP (1 2 1 0 2)) (:STEP (0 1 2 1 2)) (:STEP (0 1 2 1 0))
  (:STEP (1 0 2 0 2)) (:STEP (0 1 0 2 0)))
 ((:STEP (2 1 0 0 2)) (:STEP (1 2 1 0 0)) (:STEP (0 2 0 0 2))
  (:STEP (1 0 2 0 0)) (:STEP (0 0 2 0 2)) (:STEP (1 0 0 2 0)))
 ((:STEP (2 0 2 0 1)) (:STEP (0 2 0 2 0)) (:STEP (2 0 1 2 1))
  (:STEP (0 2 0 1 2)) (:STEP (1 2 1 2 1)) (:STEP (0 1 2 1 2)))
 ((:STEP (2 1 2 1 0)) (:STEP (1 2 1 2 1)) (:STEP (2 1 0 2 0))
  (:STEP (1 2 1 0 2)) (:STEP (0 2 0 2 0)) (:STEP (1 0 2 0 2)))
 ((:STEP (0 0 1 0 1)) (:STEP (2 0 0 1 0)) (:STEP (0 2 1 0 1))
  (:STEP (1 2 1 0 1)) (:STEP (1 0 1 0 1)) (:STEP (1 0 2 0 1))
  (:STEP (1 0 2 1 0)) (:STEP (0 0 2 0 1)) (:STEP (1 0 0 2 0))
  (:STEP (0 0 1 2 1)) (:STEP (1 0 0 1 2)))
 ((:STEP (1 1 0 0 1)) (:STEP (2 1 1 0 0)) (:STEP (1 2 0 0 1))
  (:STEP (0 2 0 0 1)) (:STEP (0 1 0 0 1)) (:STEP (0 1 2 0 1))
  (:STEP (0 1 2 0 0)) (:STEP (1 0 2 0 1)) (:STEP (0 1 0 2 0))
  (:STEP (1 0 1 2 1)) (:STEP (0 1 0 1 2)))
 ((:STEP (0 0 1 0 2)) (:STEP (2 0 0 1 2)) (:STEP (2 0 0 1 0))
  (:STEP (0 2 1 0 2)) (:STEP (1 2 1 0 2)) (:STEP (1 0 1 0 2))
  (:STEP (1 0 2 0 2)) (:STEP (1 0 2 1 2)) (:STEP (1 0 2 1 0))
  (:STEP (0 0 2 0 2)) (:STEP (1 0 0 2 0)))
 ((:STEP (1 1 0 0 2)) (:STEP (2 1 1 0 0)) (:STEP (1 2 0 0 2))
  (:STEP (0 2 0 0 2)) (:STEP (0 1 0 0 2)) (:STEP (0 1 2 0 2))
  (:STEP (0 1 2 0 0)) (:STEP (1 0 2 0 2)) (:STEP (0 1 0 2 0)))
 ((:STEP (0 0 2 0 1)) (:STEP (2 0 0 2 0)) (:STEP (0 0 1 2 1))
  (:STEP (2 0 0 1 2)) (:STEP (0 2 1 2 1)) (:STEP (1 2 1 2 1))
  (:STEP (1 0 1 2 1)) (:STEP (1 0 2 1 2)))
 ((:STEP (1 1 2 1 0)) (:STEP (2 1 1 2 1)) (:STEP (1 1 0 2 0))
  (:STEP (2 1 1 0 2)) (:STEP (1 2 0 2 0)) (:STEP (0 2 0 2 0))
  (:STEP (0 1 0 2 0)) (:STEP (0 1 2 0 2)))
 ((:STEP (0 2 1 0 1)) (:STEP (0 2 0 1 0)) (:STEP (1 0 1 0 1))
  (:STEP (2 1 0 1 0)) (:STEP (1 0 2 0 1)) (:STEP (0 1 2 0 1))
  (:STEP (0 1 0 2 0)) (:STEP (1 0 1 2 1)) (:STEP (0 1 0 1 2)))
 ((:STEP (1 2 0 0 1)) (:STEP (1 2 1 0 0)) (:STEP (0 1 0 0 1))
  (:STEP (2 0 1 0 0)) (:STEP (0 0 2 0 1)) (:STEP (0 0 1 0 1))
  (:STEP (0 0 1 2 1)) (:STEP (0 0 1 2 0)) (:STEP (0 0 1 1 2)))
 ((:STEP (0 2 1 0 2)) (:STEP (0 2 0 1 2)) (:STEP (0 2 0 1 0))
  (:STEP (1 0 1 0 2)) (:STEP (2 1 0 1 2)) (:STEP (2 1 0 1 0))
  (:STEP (1 0 2 0 2)) (:STEP (0 1 2 0 2)) (:STEP (0 1 0 2 0)))
 ((:STEP (1 2 0 0 2)) (:STEP (1 2 1 0 0)) (:STEP (0 1 0 0 2))
  (:STEP (2 0 1 0 0)) (:STEP (0 0 2 0 2)) (:STEP (0 0 1 0 2))
  (:STEP (0 0 1 2 0)))
 ((:STEP (2 0 2 0 1)) (:STEP (0 2 0 2 0)) (:STEP (0 2 1 2 1))
  (:STEP (0 2 0 1 2)) (:STEP (1 0 1 2 1)) (:STEP (2 1 0 2 1))
  (:STEP (2 1 0 1 2)))
 ((:STEP (2 1 2 1 0)) (:STEP (1 2 1 2 1)) (:STEP (1 2 0 2 0))
  (:STEP (1 2 1 0 2)) (:STEP (0 1 0 2 0)) (:STEP (2 0 1 2 0))
  (:STEP (2 0 1 0 2)))
 ((:STEP (0 0 2 1 0)) (:STEP (2 1 1 0 1)) (:STEP (0 1 1 0 1))
  (:STEP (0 2 1 1 0)) (:STEP (0 0 1 2 1)) (:STEP (0 0 1 2 0))
  (:STEP (0 0 1 1 2)))
 ((:STEP (1 1 0 0 1)) (:STEP (1 1 2 0 0)) (:STEP (2 0 0 0 1))
  (:STEP (1 0 0 0 1)) (:STEP (1 2 0 0 0)) (:STEP (0 0 2 0 1))
  (:STEP (1 0 0 2 0)) (:STEP (0 0 1 2 1)) (:STEP (1 0 0 1 2)))
 ((:STEP (0 0 2 1 2)) (:STEP (0 0 2 1 0)) (:STEP (2 1 1 0 2))
  (:STEP (0 1 1 0 2)) (:STEP (0 2 1 1 2)) (:STEP (0 2 1 1 0))
  (:STEP (0 0 1 2 0)))
 ((:STEP (1 1 0 0 2)) (:STEP (1 1 2 0 0)) (:STEP (2 0 0 0 2))
  (:STEP (1 0 0 0 2)) (:STEP (1 2 0 0 0)) (:STEP (0 0 2 0 2))
  (:STEP (1 0 0 2 0)))
 ((:STEP (0 0 2 2 1)) (:STEP (0 0 2 2 0)) (:STEP (0 0 1 2 1))
  (:STEP (0 0 2 1 2)) (:STEP (2 1 1 2 1)) (:STEP (0 1 1 2 1))
  (:STEP (0 2 1 1 2)))
 ((:STEP (1 1 2 2 0)) (:STEP (1 1 2 2 1)) (:STEP (1 1 0 2 0))
  (:STEP (1 1 2 0 2)) (:STEP (2 0 0 2 0)) (:STEP (1 0 0 2 0))
  (:STEP (1 2 0 0 2)))
 ((:STEP (0 0 1 0 2)) (:STEP (1 0 0 1 2)) (:STEP (1 0 0 1 0)))
 ((:STEP (0 0 1 0 1)) (:STEP (2 0 1 0 1)) (:STEP (2 0 0 1 0))
  (:STEP (1 0 1 0 1)) (:STEP (1 2 1 0 1)) (:STEP (1 2 0 1 0))
  (:STEP (0 0 2 0 1)) (:STEP (1 0 0 2 0)) (:STEP (0 0 1 2 1))
  (:STEP (1 0 0 1 2)))
 ((:STEP (1 1 0 0 1)) (:STEP (2 1 0 0 1)) (:STEP (2 1 1 0 0))
  (:STEP (0 1 0 0 1)) (:STEP (0 2 0 0 1)) (:STEP (0 2 1 0 0))
  (:STEP (0 0 2 0 1)) (:STEP (0 0 1 0 1)) (:STEP (0 0 1 2 1))
  (:STEP (0 0 1 2 0)) (:STEP (0 0 1 1 2)))
 ((:STEP (0 0 1 0 2)) (:STEP (2 0 1 0 2)) (:STEP (2 0 0 1 2))
  (:STEP (2 0 0 1 0)) (:STEP (1 0 1 0 2)) (:STEP (1 2 1 0 2))
  (:STEP (1 2 0 1 2)) (:STEP (1 2 0 1 0)) (:STEP (0 0 2 0 2))
  (:STEP (1 0 0 2 0)))
 ((:STEP (1 1 0 0 2)) (:STEP (2 1 0 0 2)) (:STEP (2 1 1 0 0))
  (:STEP (0 1 0 0 2)) (:STEP (0 2 0 0 2)) (:STEP (0 2 1 0 0))
  (:STEP (0 0 2 0 2)) (:STEP (0 0 1 0 2)) (:STEP (0 0 1 2 0)))
 ((:STEP (0 0 2 0 1)) (:STEP (2 0 0 2 0)) (:STEP (0 0 1 2 1))
  (:STEP (2 0 1 2 1)) (:STEP (2 0 0 1 2)) (:STEP (1 0 1 2 1))
  (:STEP (1 2 1 2 1)) (:STEP (1 2 0 2 1)) (:STEP (1 2 0 1 2)))
 ((:STEP (1 1 2 1 0)) (:STEP (2 1 1 2 1)) (:STEP (1 1 0 2 0))
  (:STEP (2 1 0 2 0)) (:STEP (2 1 1 0 2)) (:STEP (0 1 0 2 0))
  (:STEP (0 2 0 2 0)) (:STEP (0 2 1 2 0)) (:STEP (0 2 1 0 2)))
 ((:STEP (0 0 1 1 2)) (:STEP (0 0 1 1 0)))
 ((:STEP (1 0 1 0 2)) (:STEP (0 1 0 1 2)) (:STEP (0 1 0 1 0)))
 ((:STEP (0 0 2 1 0)) (:STEP (0 1 1 0 1)) (:STEP (2 1 1 0 1))
  (:STEP (2 0 1 1 0)) (:STEP (0 0 1 2 1)) (:STEP (0 0 1 2 0))
  (:STEP (0 0 1 1 2)))
 ((:STEP (1 1 0 0 1)) (:STEP (1 1 2 0 0)) (:STEP (1 0 0 0 1))
  (:STEP (2 0 0 0 1)) (:STEP (2 1 0 0 0)) (:STEP (1 0 2 0 1))
  (:STEP (0 1 2 0 1)) (:STEP (0 1 0 2 0)) (:STEP (1 0 1 2 1))
  (:STEP (0 1 0 1 2)))
 ((:STEP (0 0 2 1 2)) (:STEP (0 0 2 1 0)) (:STEP (0 1 1 0 2))
  (:STEP (2 1 1 0 2)) (:STEP (2 0 1 1 2)) (:STEP (2 0 1 1 0))
  (:STEP (0 0 1 2 0)))
 ((:STEP (1 1 0 0 2)) (:STEP (1 1 2 0 0)) (:STEP (1 0 0 0 2))
  (:STEP (2 0 0 0 2)) (:STEP (2 1 0 0 0)) (:STEP (1 0 2 0 2))
  (:STEP (0 1 2 0 2)) (:STEP (0 1 0 2 0)))
 ((:STEP (0 0 2 2 1)) (:STEP (0 0 2 2 0)) (:STEP (0 0 1 2 1))
  (:STEP (0 0 2 1 2)) (:STEP (0 1 1 2 1)) (:STEP (2 1 1 2 1))
  (:STEP (2 0 1 1 2)))
 ((:STEP (1 1 2 2 0)) (:STEP (1 1 2 2 1)) (:STEP (1 1 0 2 0))
  (:STEP (1 1 2 0 2)) (:STEP (1 0 0 2 0)) (:STEP (2 0 0 2 0))
  (:STEP (2 1 0 0 2))))
STEENROD> (car *)
((:STEP (0 2 0 1 0)) (:STEP (0 1 2 1 0)) (:STEP (0 1 0 2 0)))
STEENROD> (mapcar #'translate)
; Evaluation aborted on #<SB-INT:SIMPLE-PROGRAM-ERROR "~S called with invalid number of arguments: ~S" {100803E4A3}>.
STEENROD> (mapcar #'translate *)
(256 1 604462909807314587353088)
STEENROD> (logior (mapcar #'translate *))
; Evaluation aborted on #<TYPE-ERROR expected-type: INTEGER datum: NIL>.
STEENROD> (reduce #'logior (mapcar #'translate *))
; Evaluation aborted on #<TYPE-ERROR expected-type: INTEGER datum: NIL>.
STEENROD> (reduce #'logior (mapcar #'translate *) :initial-value 0)
; Evaluation aborted on #<TYPE-ERROR expected-type: INTEGER datum: NIL>.
STEENROD> (apply #'logior (mapcar #'translate *))
; Evaluation aborted on #<TYPE-ERROR expected-type: INTEGER datum: NIL>.
STEENROD> (car (mapcar #'cdr *deg4quad-basis*))
((:STEP (0 2 0 1 0)) (:STEP (0 1 2 1 0)) (:STEP (0 1 0 2 0)))
STEENROD> (reduce #'logior (mapcar #'translate *) :initial-value 0)
604462909807314587353345
; compiling (DEFPARAMETER *SPARSE-MX* ...)
; compiling (DEFPARAMETER *SPARSE-MX* ...)
STEENROD> (mapcar #'cdr *deg4quad-basis*)

(((:STEP (0 2 0 1 0)) (:STEP (0 1 2 1 0)) (:STEP (0 1 0 2 0)))
 ((:STEP (1 2 1 0 0)) (:STEP (1 0 2 0 0)) (:STEP (1 0 0 2 0)))
 ((:STEP (0 2 0 1 2)) (:STEP (0 1 2 1 2)))
 ((:STEP (1 2 1 0 2)) (:STEP (1 0 2 0 2)))
 ((:STEP (2 0 0 1 0)) (:STEP (1 0 2 1 0)) (:STEP (1 0 0 2 0)))
 ((:STEP (2 1 1 0 0)) (:STEP (0 1 2 0 0)) (:STEP (0 1 0 2 0)))
 ((:STEP (2 0 0 1 2)) (:STEP (1 0 2 1 2)))
 ((:STEP (2 1 1 0 2)) (:STEP (0 1 2 0 2)))
 ((:STEP (0 2 0 1 0)) (:STEP (2 1 0 1 0)) (:STEP (0 1 0 2 0)))
 ((:STEP (1 2 1 0 0)) (:STEP (2 0 1 0 0)) (:STEP (0 0 1 2 0)))
 ((:STEP (0 2 0 1 2)) (:STEP (2 1 0 1 2)))
 ((:STEP (1 2 1 0 2)) (:STEP (2 0 1 0 2)))
 ((:STEP (0 0 2 1 0)) (:STEP (0 2 1 1 0)) (:STEP (0 0 1 2 0)))
 ((:STEP (1 1 2 0 0)) (:STEP (1 2 0 0 0)) (:STEP (1 0 0 2 0)))
 ((:STEP (0 0 2 1 2)) (:STEP (0 2 1 1 2)))
 ((:STEP (1 1 2 0 2)) (:STEP (1 2 0 0 2))) ((1 0 0 1 2))
 ((:STEP (2 0 0 1 0)) (:STEP (1 2 0 1 0)) (:STEP (1 0 0 2 0)))
 ((:STEP (2 1 1 0 0)) (:STEP (0 2 1 0 0)) (:STEP (0 0 1 2 0)))
 ((:STEP (2 0 0 1 2)) (:STEP (1 2 0 1 2)))
 ((:STEP (2 1 1 0 2)) (:STEP (0 2 1 0 2))) ((0 0 1 1 2)) ((0 1 0 1 2))
 ((:STEP (0 0 2 1 0)) (:STEP (2 0 1 1 0)) (:STEP (0 0 1 2 0)))
 ((:STEP (1 1 2 0 0)) (:STEP (2 1 0 0 0)) (:STEP (0 1 0 2 0)))
 ((:STEP (0 0 2 1 2)) (:STEP (2 0 1 1 2)))
 ((:STEP (1 1 2 0 2)) (:STEP (2 1 0 0 2)))
 ((:STEP (2 0 1 0 1)) (:STEP (0 2 0 1 0)) (:STEP (1 2 1 0 1))
  (:STEP (0 1 2 1 0)) (:STEP (1 0 2 0 1)) (:STEP (0 1 0 2 0))
  (:STEP (1 0 1 2 1)) (:STEP (0 1 0 1 2)))
 ((:STEP (2 1 0 0 1)) (:STEP (1 2 1 0 0)) (:STEP (0 2 0 0 1))
  (:STEP (1 0 2 0 0)) (:STEP (0 0 2 0 1)) (:STEP (1 0 0 2 0))
  (:STEP (0 0 1 2 1)) (:STEP (1 0 0 1 2)))
 ((:STEP (2 0 1 0 2)) (:STEP (0 2 0 1 2)) (:STEP (0 2 0 1 0))
  (:STEP (1 2 1 0 2)) (:STEP (0 1 2 1 2)) (:STEP (0 1 2 1 0))
  (:STEP (1 0 2 0 2)) (:STEP (0 1 0 2 0)))
 ((:STEP (2 1 0 0 2)) (:STEP (1 2 1 0 0)) (:STEP (0 2 0 0 2))
  (:STEP (1 0 2 0 0)) (:STEP (0 0 2 0 2)) (:STEP (1 0 0 2 0)))
 ((:STEP (2 0 2 0 1)) (:STEP (0 2 0 2 0)) (:STEP (2 0 1 2 1))
  (:STEP (0 2 0 1 2)) (:STEP (1 2 1 2 1)) (:STEP (0 1 2 1 2)))
 ((:STEP (2 1 2 1 0)) (:STEP (1 2 1 2 1)) (:STEP (2 1 0 2 0))
  (:STEP (1 2 1 0 2)) (:STEP (0 2 0 2 0)) (:STEP (1 0 2 0 2)))
 ((:STEP (0 0 1 0 1)) (:STEP (2 0 0 1 0)) (:STEP (0 2 1 0 1))
  (:STEP (1 2 1 0 1)) (:STEP (1 0 1 0 1)) (:STEP (1 0 2 0 1))
  (:STEP (1 0 2 1 0)) (:STEP (0 0 2 0 1)) (:STEP (1 0 0 2 0))
  (:STEP (0 0 1 2 1)) (:STEP (1 0 0 1 2)))
 ((:STEP (1 1 0 0 1)) (:STEP (2 1 1 0 0)) (:STEP (1 2 0 0 1))
  (:STEP (0 2 0 0 1)) (:STEP (0 1 0 0 1)) (:STEP (0 1 2 0 1))
  (:STEP (0 1 2 0 0)) (:STEP (1 0 2 0 1)) (:STEP (0 1 0 2 0))
  (:STEP (1 0 1 2 1)) (:STEP (0 1 0 1 2)))
 ((:STEP (0 0 1 0 2)) (:STEP (2 0 0 1 2)) (:STEP (2 0 0 1 0))
  (:STEP (0 2 1 0 2)) (:STEP (1 2 1 0 2)) (:STEP (1 0 1 0 2))
  (:STEP (1 0 2 0 2)) (:STEP (1 0 2 1 2)) (:STEP (1 0 2 1 0))
  (:STEP (0 0 2 0 2)) (:STEP (1 0 0 2 0)))
 ((:STEP (1 1 0 0 2)) (:STEP (2 1 1 0 0)) (:STEP (1 2 0 0 2))
  (:STEP (0 2 0 0 2)) (:STEP (0 1 0 0 2)) (:STEP (0 1 2 0 2))
  (:STEP (0 1 2 0 0)) (:STEP (1 0 2 0 2)) (:STEP (0 1 0 2 0)))
 ((:STEP (0 0 2 0 1)) (:STEP (2 0 0 2 0)) (:STEP (0 0 1 2 1))
  (:STEP (2 0 0 1 2)) (:STEP (0 2 1 2 1)) (:STEP (1 2 1 2 1))
  (:STEP (1 0 1 2 1)) (:STEP (1 0 2 1 2)))
 ((:STEP (1 1 2 1 0)) (:STEP (2 1 1 2 1)) (:STEP (1 1 0 2 0))
  (:STEP (2 1 1 0 2)) (:STEP (1 2 0 2 0)) (:STEP (0 2 0 2 0))
  (:STEP (0 1 0 2 0)) (:STEP (0 1 2 0 2)))
 ((:STEP (0 2 1 0 1)) (:STEP (0 2 0 1 0)) (:STEP (1 0 1 0 1))
  (:STEP (2 1 0 1 0)) (:STEP (1 0 2 0 1)) (:STEP (0 1 2 0 1))
  (:STEP (0 1 0 2 0)) (:STEP (1 0 1 2 1)) (:STEP (0 1 0 1 2)))
 ((:STEP (1 2 0 0 1)) (:STEP (1 2 1 0 0)) (:STEP (0 1 0 0 1))
  (:STEP (2 0 1 0 0)) (:STEP (0 0 2 0 1)) (:STEP (0 0 1 0 1))
  (:STEP (0 0 1 2 1)) (:STEP (0 0 1 2 0)) (:STEP (0 0 1 1 2)))
 ((:STEP (0 2 1 0 2)) (:STEP (0 2 0 1 2)) (:STEP (0 2 0 1 0))
  (:STEP (1 0 1 0 2)) (:STEP (2 1 0 1 2)) (:STEP (2 1 0 1 0))
  (:STEP (1 0 2 0 2)) (:STEP (0 1 2 0 2)) (:STEP (0 1 0 2 0)))
 ((:STEP (1 2 0 0 2)) (:STEP (1 2 1 0 0)) (:STEP (0 1 0 0 2))
  (:STEP (2 0 1 0 0)) (:STEP (0 0 2 0 2)) (:STEP (0 0 1 0 2))
  (:STEP (0 0 1 2 0)))
 ((:STEP (2 0 2 0 1)) (:STEP (0 2 0 2 0)) (:STEP (0 2 1 2 1))
  (:STEP (0 2 0 1 2)) (:STEP (1 0 1 2 1)) (:STEP (2 1 0 2 1))
  (:STEP (2 1 0 1 2)))
 ((:STEP (2 1 2 1 0)) (:STEP (1 2 1 2 1)) (:STEP (1 2 0 2 0))
  (:STEP (1 2 1 0 2)) (:STEP (0 1 0 2 0)) (:STEP (2 0 1 2 0))
  (:STEP (2 0 1 0 2)))
 ((:STEP (0 0 2 1 0)) (:STEP (2 1 1 0 1)) (:STEP (0 1 1 0 1))
  (:STEP (0 2 1 1 0)) (:STEP (0 0 1 2 1)) (:STEP (0 0 1 2 0))
  (:STEP (0 0 1 1 2)))
 ((:STEP (1 1 0 0 1)) (:STEP (1 1 2 0 0)) (:STEP (2 0 0 0 1))
  (:STEP (1 0 0 0 1)) (:STEP (1 2 0 0 0)) (:STEP (0 0 2 0 1))
  (:STEP (1 0 0 2 0)) (:STEP (0 0 1 2 1)) (:STEP (1 0 0 1 2)))
 ((:STEP (0 0 2 1 2)) (:STEP (0 0 2 1 0)) (:STEP (2 1 1 0 2))
  (:STEP (0 1 1 0 2)) (:STEP (0 2 1 1 2)) (:STEP (0 2 1 1 0))
  (:STEP (0 0 1 2 0)))
 ((:STEP (1 1 0 0 2)) (:STEP (1 1 2 0 0)) (:STEP (2 0 0 0 2))
  (:STEP (1 0 0 0 2)) (:STEP (1 2 0 0 0)) (:STEP (0 0 2 0 2))
  (:STEP (1 0 0 2 0)))
 ((:STEP (0 0 2 2 1)) (:STEP (0 0 2 2 0)) (:STEP (0 0 1 2 1))
  (:STEP (0 0 2 1 2)) (:STEP (2 1 1 2 1)) (:STEP (0 1 1 2 1))
  (:STEP (0 2 1 1 2)))
 ((:STEP (1 1 2 2 0)) (:STEP (1 1 2 2 1)) (:STEP (1 1 0 2 0))
  (:STEP (1 1 2 0 2)) (:STEP (2 0 0 2 0)) (:STEP (1 0 0 2 0))
  (:STEP (1 2 0 0 2)))
 ((:STEP (0 0 1 0 2)) (:STEP (1 0 0 1 2)) (:STEP (1 0 0 1 0)))
 ((:STEP (0 0 1 0 1)) (:STEP (2 0 1 0 1)) (:STEP (2 0 0 1 0))
  (:STEP (1 0 1 0 1)) (:STEP (1 2 1 0 1)) (:STEP (1 2 0 1 0))
  (:STEP (0 0 2 0 1)) (:STEP (1 0 0 2 0)) (:STEP (0 0 1 2 1))
  (:STEP (1 0 0 1 2)))
 ((:STEP (1 1 0 0 1)) (:STEP (2 1 0 0 1)) (:STEP (2 1 1 0 0))
  (:STEP (0 1 0 0 1)) (:STEP (0 2 0 0 1)) (:STEP (0 2 1 0 0))
  (:STEP (0 0 2 0 1)) (:STEP (0 0 1 0 1)) (:STEP (0 0 1 2 1))
  (:STEP (0 0 1 2 0)) (:STEP (0 0 1 1 2)))
 ((:STEP (0 0 1 0 2)) (:STEP (2 0 1 0 2)) (:STEP (2 0 0 1 2))
  (:STEP (2 0 0 1 0)) (:STEP (1 0 1 0 2)) (:STEP (1 2 1 0 2))
  (:STEP (1 2 0 1 2)) (:STEP (1 2 0 1 0)) (:STEP (0 0 2 0 2))
  (:STEP (1 0 0 2 0)))
 ((:STEP (1 1 0 0 2)) (:STEP (2 1 0 0 2)) (:STEP (2 1 1 0 0))
  (:STEP (0 1 0 0 2)) (:STEP (0 2 0 0 2)) (:STEP (0 2 1 0 0))
  (:STEP (0 0 2 0 2)) (:STEP (0 0 1 0 2)) (:STEP (0 0 1 2 0)))
 ((:STEP (0 0 2 0 1)) (:STEP (2 0 0 2 0)) (:STEP (0 0 1 2 1))
  (:STEP (2 0 1 2 1)) (:STEP (2 0 0 1 2)) (:STEP (1 0 1 2 1))
  (:STEP (1 2 1 2 1)) (:STEP (1 2 0 2 1)) (:STEP (1 2 0 1 2)))
 ((:STEP (1 1 2 1 0)) (:STEP (2 1 1 2 1)) (:STEP (1 1 0 2 0))
  (:STEP (2 1 0 2 0)) (:STEP (2 1 1 0 2)) (:STEP (0 1 0 2 0))
  (:STEP (0 2 0 2 0)) (:STEP (0 2 1 2 0)) (:STEP (0 2 1 0 2)))
 ((:STEP (0 0 1 1 2)) (:STEP (0 0 1 1 0)))
 ((:STEP (1 0 1 0 2)) (:STEP (0 1 0 1 2)) (:STEP (0 1 0 1 0)))
 ((:STEP (0 0 2 1 0)) (:STEP (0 1 1 0 1)) (:STEP (2 1 1 0 1))
  (:STEP (2 0 1 1 0)) (:STEP (0 0 1 2 1)) (:STEP (0 0 1 2 0))
  (:STEP (0 0 1 1 2)))
 ((:STEP (1 1 0 0 1)) (:STEP (1 1 2 0 0)) (:STEP (1 0 0 0 1))
  (:STEP (2 0 0 0 1)) (:STEP (2 1 0 0 0)) (:STEP (1 0 2 0 1))
  (:STEP (0 1 2 0 1)) (:STEP (0 1 0 2 0)) (:STEP (1 0 1 2 1))
  (:STEP (0 1 0 1 2)))
 ((:STEP (0 0 2 1 2)) (:STEP (0 0 2 1 0)) (:STEP (0 1 1 0 2))
  (:STEP (2 1 1 0 2)) (:STEP (2 0 1 1 2)) (:STEP (2 0 1 1 0))
  (:STEP (0 0 1 2 0)))
 ((:STEP (1 1 0 0 2)) (:STEP (1 1 2 0 0)) (:STEP (1 0 0 0 2))
  (:STEP (2 0 0 0 2)) (:STEP (2 1 0 0 0)) (:STEP (1 0 2 0 2))
  (:STEP (0 1 2 0 2)) (:STEP (0 1 0 2 0)))
 ((:STEP (0 0 2 2 1)) (:STEP (0 0 2 2 0)) (:STEP (0 0 1 2 1))
  (:STEP (0 0 2 1 2)) (:STEP (0 1 1 2 1)) (:STEP (2 1 1 2 1))
  (:STEP (2 0 1 1 2)))
 ((:STEP (1 1 2 2 0)) (:STEP (1 1 2 2 1)) (:STEP (1 1 0 2 0))
  (:STEP (1 1 2 0 2)) (:STEP (1 0 0 2 0)) (:STEP (2 0 0 2 0))
  (:STEP (2 1 0 0 2))))
STEENROD> (mapcar #'translate (mapcar #'cdr *deg4quad-basis*))
; Evaluation aborted on #<TYPE-ERROR expected-type: INTEGER datum: NIL>.
STEENROD> (mapcar #'translate (car (mapcar #'cdr *deg4quad-basis*)))
(256 1 604462909807314587353088)
; compiling (DEFPARAMETER *SPARSE-MX* ...)

; file: /tmp/file9VJOvd
; in: DEFPARAMETER *SPARSE-MX*
;     (REDUCE #'LOGIOR (MAPCAR #'STEENROD::TRANSLATE STEENROD::VEC)
;             :INITIAL-ELEMENT 0)
; 
; caught WARNING:
;   :INITIAL-ELEMENT is not a known argument keyword.
; 
; compilation unit finished
;   caught 1 WARNING condition
; compiling (DEFPARAMETER *SPARSE-MX* ...)
STEENROD> (mapcar #'cdr *deg4quad-basis*)

(((:STEP (0 2 0 1 0)) (:STEP (0 1 2 1 0)) (:STEP (0 1 0 2 0)))
 ((:STEP (1 2 1 0 0)) (:STEP (1 0 2 0 0)) (:STEP (1 0 0 2 0)))
 ((:STEP (0 2 0 1 2)) (:STEP (0 1 2 1 2)))
 ((:STEP (1 2 1 0 2)) (:STEP (1 0 2 0 2)))
 ((:STEP (2 0 0 1 0)) (:STEP (1 0 2 1 0)) (:STEP (1 0 0 2 0)))
 ((:STEP (2 1 1 0 0)) (:STEP (0 1 2 0 0)) (:STEP (0 1 0 2 0)))
 ((:STEP (2 0 0 1 2)) (:STEP (1 0 2 1 2)))
 ((:STEP (2 1 1 0 2)) (:STEP (0 1 2 0 2)))
 ((:STEP (0 2 0 1 0)) (:STEP (2 1 0 1 0)) (:STEP (0 1 0 2 0)))
 ((:STEP (1 2 1 0 0)) (:STEP (2 0 1 0 0)) (:STEP (0 0 1 2 0)))
 ((:STEP (0 2 0 1 2)) (:STEP (2 1 0 1 2)))
 ((:STEP (1 2 1 0 2)) (:STEP (2 0 1 0 2)))
 ((:STEP (0 0 2 1 0)) (:STEP (0 2 1 1 0)) (:STEP (0 0 1 2 0)))
 ((:STEP (1 1 2 0 0)) (:STEP (1 2 0 0 0)) (:STEP (1 0 0 2 0)))
 ((:STEP (0 0 2 1 2)) (:STEP (0 2 1 1 2)))
 ((:STEP (1 1 2 0 2)) (:STEP (1 2 0 0 2))) ((1 0 0 1 2))
 ((:STEP (2 0 0 1 0)) (:STEP (1 2 0 1 0)) (:STEP (1 0 0 2 0)))
 ((:STEP (2 1 1 0 0)) (:STEP (0 2 1 0 0)) (:STEP (0 0 1 2 0)))
 ((:STEP (2 0 0 1 2)) (:STEP (1 2 0 1 2)))
 ((:STEP (2 1 1 0 2)) (:STEP (0 2 1 0 2))) ((0 0 1 1 2)) ((0 1 0 1 2))
 ((:STEP (0 0 2 1 0)) (:STEP (2 0 1 1 0)) (:STEP (0 0 1 2 0)))
 ((:STEP (1 1 2 0 0)) (:STEP (2 1 0 0 0)) (:STEP (0 1 0 2 0)))
 ((:STEP (0 0 2 1 2)) (:STEP (2 0 1 1 2)))
 ((:STEP (1 1 2 0 2)) (:STEP (2 1 0 0 2)))
 ((:STEP (2 0 1 0 1)) (:STEP (0 2 0 1 0)) (:STEP (1 2 1 0 1))
  (:STEP (0 1 2 1 0)) (:STEP (1 0 2 0 1)) (:STEP (0 1 0 2 0))
  (:STEP (1 0 1 2 1)) (:STEP (0 1 0 1 2)))
 ((:STEP (2 1 0 0 1)) (:STEP (1 2 1 0 0)) (:STEP (0 2 0 0 1))
  (:STEP (1 0 2 0 0)) (:STEP (0 0 2 0 1)) (:STEP (1 0 0 2 0))
  (:STEP (0 0 1 2 1)) (:STEP (1 0 0 1 2)))
 ((:STEP (2 0 1 0 2)) (:STEP (0 2 0 1 2)) (:STEP (0 2 0 1 0))
  (:STEP (1 2 1 0 2)) (:STEP (0 1 2 1 2)) (:STEP (0 1 2 1 0))
  (:STEP (1 0 2 0 2)) (:STEP (0 1 0 2 0)))
 ((:STEP (2 1 0 0 2)) (:STEP (1 2 1 0 0)) (:STEP (0 2 0 0 2))
  (:STEP (1 0 2 0 0)) (:STEP (0 0 2 0 2)) (:STEP (1 0 0 2 0)))
 ((:STEP (2 0 2 0 1)) (:STEP (0 2 0 2 0)) (:STEP (2 0 1 2 1))
  (:STEP (0 2 0 1 2)) (:STEP (1 2 1 2 1)) (:STEP (0 1 2 1 2)))
 ((:STEP (2 1 2 1 0)) (:STEP (1 2 1 2 1)) (:STEP (2 1 0 2 0))
  (:STEP (1 2 1 0 2)) (:STEP (0 2 0 2 0)) (:STEP (1 0 2 0 2)))
 ((:STEP (0 0 1 0 1)) (:STEP (2 0 0 1 0)) (:STEP (0 2 1 0 1))
  (:STEP (1 2 1 0 1)) (:STEP (1 0 1 0 1)) (:STEP (1 0 2 0 1))
  (:STEP (1 0 2 1 0)) (:STEP (0 0 2 0 1)) (:STEP (1 0 0 2 0))
  (:STEP (0 0 1 2 1)) (:STEP (1 0 0 1 2)))
 ((:STEP (1 1 0 0 1)) (:STEP (2 1 1 0 0)) (:STEP (1 2 0 0 1))
  (:STEP (0 2 0 0 1)) (:STEP (0 1 0 0 1)) (:STEP (0 1 2 0 1))
  (:STEP (0 1 2 0 0)) (:STEP (1 0 2 0 1)) (:STEP (0 1 0 2 0))
  (:STEP (1 0 1 2 1)) (:STEP (0 1 0 1 2)))
 ((:STEP (0 0 1 0 2)) (:STEP (2 0 0 1 2)) (:STEP (2 0 0 1 0))
  (:STEP (0 2 1 0 2)) (:STEP (1 2 1 0 2)) (:STEP (1 0 1 0 2))
  (:STEP (1 0 2 0 2)) (:STEP (1 0 2 1 2)) (:STEP (1 0 2 1 0))
  (:STEP (0 0 2 0 2)) (:STEP (1 0 0 2 0)))
 ((:STEP (1 1 0 0 2)) (:STEP (2 1 1 0 0)) (:STEP (1 2 0 0 2))
  (:STEP (0 2 0 0 2)) (:STEP (0 1 0 0 2)) (:STEP (0 1 2 0 2))
  (:STEP (0 1 2 0 0)) (:STEP (1 0 2 0 2)) (:STEP (0 1 0 2 0)))
 ((:STEP (0 0 2 0 1)) (:STEP (2 0 0 2 0)) (:STEP (0 0 1 2 1))
  (:STEP (2 0 0 1 2)) (:STEP (0 2 1 2 1)) (:STEP (1 2 1 2 1))
  (:STEP (1 0 1 2 1)) (:STEP (1 0 2 1 2)))
 ((:STEP (1 1 2 1 0)) (:STEP (2 1 1 2 1)) (:STEP (1 1 0 2 0))
  (:STEP (2 1 1 0 2)) (:STEP (1 2 0 2 0)) (:STEP (0 2 0 2 0))
  (:STEP (0 1 0 2 0)) (:STEP (0 1 2 0 2)))
 ((:STEP (0 2 1 0 1)) (:STEP (0 2 0 1 0)) (:STEP (1 0 1 0 1))
  (:STEP (2 1 0 1 0)) (:STEP (1 0 2 0 1)) (:STEP (0 1 2 0 1))
  (:STEP (0 1 0 2 0)) (:STEP (1 0 1 2 1)) (:STEP (0 1 0 1 2)))
 ((:STEP (1 2 0 0 1)) (:STEP (1 2 1 0 0)) (:STEP (0 1 0 0 1))
  (:STEP (2 0 1 0 0)) (:STEP (0 0 2 0 1)) (:STEP (0 0 1 0 1))
  (:STEP (0 0 1 2 1)) (:STEP (0 0 1 2 0)) (:STEP (0 0 1 1 2)))
 ((:STEP (0 2 1 0 2)) (:STEP (0 2 0 1 2)) (:STEP (0 2 0 1 0))
  (:STEP (1 0 1 0 2)) (:STEP (2 1 0 1 2)) (:STEP (2 1 0 1 0))
  (:STEP (1 0 2 0 2)) (:STEP (0 1 2 0 2)) (:STEP (0 1 0 2 0)))
 ((:STEP (1 2 0 0 2)) (:STEP (1 2 1 0 0)) (:STEP (0 1 0 0 2))
  (:STEP (2 0 1 0 0)) (:STEP (0 0 2 0 2)) (:STEP (0 0 1 0 2))
  (:STEP (0 0 1 2 0)))
 ((:STEP (2 0 2 0 1)) (:STEP (0 2 0 2 0)) (:STEP (0 2 1 2 1))
  (:STEP (0 2 0 1 2)) (:STEP (1 0 1 2 1)) (:STEP (2 1 0 2 1))
  (:STEP (2 1 0 1 2)))
 ((:STEP (2 1 2 1 0)) (:STEP (1 2 1 2 1)) (:STEP (1 2 0 2 0))
  (:STEP (1 2 1 0 2)) (:STEP (0 1 0 2 0)) (:STEP (2 0 1 2 0))
  (:STEP (2 0 1 0 2)))
 ((:STEP (0 0 2 1 0)) (:STEP (2 1 1 0 1)) (:STEP (0 1 1 0 1))
  (:STEP (0 2 1 1 0)) (:STEP (0 0 1 2 1)) (:STEP (0 0 1 2 0))
  (:STEP (0 0 1 1 2)))
 ((:STEP (1 1 0 0 1)) (:STEP (1 1 2 0 0)) (:STEP (2 0 0 0 1))
  (:STEP (1 0 0 0 1)) (:STEP (1 2 0 0 0)) (:STEP (0 0 2 0 1))
  (:STEP (1 0 0 2 0)) (:STEP (0 0 1 2 1)) (:STEP (1 0 0 1 2)))
 ((:STEP (0 0 2 1 2)) (:STEP (0 0 2 1 0)) (:STEP (2 1 1 0 2))
  (:STEP (0 1 1 0 2)) (:STEP (0 2 1 1 2)) (:STEP (0 2 1 1 0))
  (:STEP (0 0 1 2 0)))
 ((:STEP (1 1 0 0 2)) (:STEP (1 1 2 0 0)) (:STEP (2 0 0 0 2))
  (:STEP (1 0 0 0 2)) (:STEP (1 2 0 0 0)) (:STEP (0 0 2 0 2))
  (:STEP (1 0 0 2 0)))
 ((:STEP (0 0 2 2 1)) (:STEP (0 0 2 2 0)) (:STEP (0 0 1 2 1))
  (:STEP (0 0 2 1 2)) (:STEP (2 1 1 2 1)) (:STEP (0 1 1 2 1))
  (:STEP (0 2 1 1 2)))
 ((:STEP (1 1 2 2 0)) (:STEP (1 1 2 2 1)) (:STEP (1 1 0 2 0))
  (:STEP (1 1 2 0 2)) (:STEP (2 0 0 2 0)) (:STEP (1 0 0 2 0))
  (:STEP (1 2 0 0 2)))
 ((:STEP (0 0 1 0 2)) (:STEP (1 0 0 1 2)) (:STEP (1 0 0 1 0)))
 ((:STEP (0 0 1 0 1)) (:STEP (2 0 1 0 1)) (:STEP (2 0 0 1 0))
  (:STEP (1 0 1 0 1)) (:STEP (1 2 1 0 1)) (:STEP (1 2 0 1 0))
  (:STEP (0 0 2 0 1)) (:STEP (1 0 0 2 0)) (:STEP (0 0 1 2 1))
  (:STEP (1 0 0 1 2)))
 ((:STEP (1 1 0 0 1)) (:STEP (2 1 0 0 1)) (:STEP (2 1 1 0 0))
  (:STEP (0 1 0 0 1)) (:STEP (0 2 0 0 1)) (:STEP (0 2 1 0 0))
  (:STEP (0 0 2 0 1)) (:STEP (0 0 1 0 1)) (:STEP (0 0 1 2 1))
  (:STEP (0 0 1 2 0)) (:STEP (0 0 1 1 2)))
 ((:STEP (0 0 1 0 2)) (:STEP (2 0 1 0 2)) (:STEP (2 0 0 1 2))
  (:STEP (2 0 0 1 0)) (:STEP (1 0 1 0 2)) (:STEP (1 2 1 0 2))
  (:STEP (1 2 0 1 2)) (:STEP (1 2 0 1 0)) (:STEP (0 0 2 0 2))
  (:STEP (1 0 0 2 0)))
 ((:STEP (1 1 0 0 2)) (:STEP (2 1 0 0 2)) (:STEP (2 1 1 0 0))
  (:STEP (0 1 0 0 2)) (:STEP (0 2 0 0 2)) (:STEP (0 2 1 0 0))
  (:STEP (0 0 2 0 2)) (:STEP (0 0 1 0 2)) (:STEP (0 0 1 2 0)))
 ((:STEP (0 0 2 0 1)) (:STEP (2 0 0 2 0)) (:STEP (0 0 1 2 1))
  (:STEP (2 0 1 2 1)) (:STEP (2 0 0 1 2)) (:STEP (1 0 1 2 1))
  (:STEP (1 2 1 2 1)) (:STEP (1 2 0 2 1)) (:STEP (1 2 0 1 2)))
 ((:STEP (1 1 2 1 0)) (:STEP (2 1 1 2 1)) (:STEP (1 1 0 2 0))
  (:STEP (2 1 0 2 0)) (:STEP (2 1 1 0 2)) (:STEP (0 1 0 2 0))
  (:STEP (0 2 0 2 0)) (:STEP (0 2 1 2 0)) (:STEP (0 2 1 0 2)))
 ((:STEP (0 0 1 1 2)) (:STEP (0 0 1 1 0)))
 ((:STEP (1 0 1 0 2)) (:STEP (0 1 0 1 2)) (:STEP (0 1 0 1 0)))
 ((:STEP (0 0 2 1 0)) (:STEP (0 1 1 0 1)) (:STEP (2 1 1 0 1))
  (:STEP (2 0 1 1 0)) (:STEP (0 0 1 2 1)) (:STEP (0 0 1 2 0))
  (:STEP (0 0 1 1 2)))
 ((:STEP (1 1 0 0 1)) (:STEP (1 1 2 0 0)) (:STEP (1 0 0 0 1))
  (:STEP (2 0 0 0 1)) (:STEP (2 1 0 0 0)) (:STEP (1 0 2 0 1))
  (:STEP (0 1 2 0 1)) (:STEP (0 1 0 2 0)) (:STEP (1 0 1 2 1))
  (:STEP (0 1 0 1 2)))
 ((:STEP (0 0 2 1 2)) (:STEP (0 0 2 1 0)) (:STEP (0 1 1 0 2))
  (:STEP (2 1 1 0 2)) (:STEP (2 0 1 1 2)) (:STEP (2 0 1 1 0))
  (:STEP (0 0 1 2 0)))
 ((:STEP (1 1 0 0 2)) (:STEP (1 1 2 0 0)) (:STEP (1 0 0 0 2))
  (:STEP (2 0 0 0 2)) (:STEP (2 1 0 0 0)) (:STEP (1 0 2 0 2))
  (:STEP (0 1 2 0 2)) (:STEP (0 1 0 2 0)))
 ((:STEP (0 0 2 2 1)) (:STEP (0 0 2 2 0)) (:STEP (0 0 1 2 1))
  (:STEP (0 0 2 1 2)) (:STEP (0 1 1 2 1)) (:STEP (2 1 1 2 1))
  (:STEP (2 0 1 1 2)))
 ((:STEP (1 1 2 2 0)) (:STEP (1 1 2 2 1)) (:STEP (1 1 0 2 0))
  (:STEP (1 1 2 0 2)) (:STEP (1 0 0 2 0)) (:STEP (2 0 0 2 0))
  (:STEP (2 1 0 0 2))))
STEENROD> (mapcar #'translate (car (mapcar #'cdr *deg4quad-basis*)))
(256 1 604462909807314587353088)
STEENROD> (mapcar (lambda (vec) vec)
		  (mapcar #'cdr *deg4quad-basis*))
; Evaluation aborted on #<TYPE-ERROR expected-type: INTEGER datum: NIL>.
STEENROD> (mapcar (lambda (vec) vec)
		  (mapcar #'cdr *deg4quad-basis*))
(((:STEP (0 2 0 1 0)) (:STEP (0 1 2 1 0)) (:STEP (0 1 0 2 0)))
 ((:STEP (1 2 1 0 0)) (:STEP (1 0 2 0 0)) (:STEP (1 0 0 2 0)))
 ((:STEP (0 2 0 1 2)) (:STEP (0 1 2 1 2)))
 ((:STEP (1 2 1 0 2)) (:STEP (1 0 2 0 2)))
 ((:STEP (2 0 0 1 0)) (:STEP (1 0 2 1 0)) (:STEP (1 0 0 2 0)))
 ((:STEP (2 1 1 0 0)) (:STEP (0 1 2 0 0)) (:STEP (0 1 0 2 0)))
 ((:STEP (2 0 0 1 2)) (:STEP (1 0 2 1 2)))
 ((:STEP (2 1 1 0 2)) (:STEP (0 1 2 0 2)))
 ((:STEP (0 2 0 1 0)) (:STEP (2 1 0 1 0)) (:STEP (0 1 0 2 0)))
 ((:STEP (1 2 1 0 0)) (:STEP (2 0 1 0 0)) (:STEP (0 0 1 2 0)))
 ((:STEP (0 2 0 1 2)) (:STEP (2 1 0 1 2)))
 ((:STEP (1 2 1 0 2)) (:STEP (2 0 1 0 2)))
 ((:STEP (0 0 2 1 0)) (:STEP (0 2 1 1 0)) (:STEP (0 0 1 2 0)))
 ((:STEP (1 1 2 0 0)) (:STEP (1 2 0 0 0)) (:STEP (1 0 0 2 0)))
 ((:STEP (0 0 2 1 2)) (:STEP (0 2 1 1 2)))
 ((:STEP (1 1 2 0 2)) (:STEP (1 2 0 0 2))) ((1 0 0 1 2))
 ((:STEP (2 0 0 1 0)) (:STEP (1 2 0 1 0)) (:STEP (1 0 0 2 0)))
 ((:STEP (2 1 1 0 0)) (:STEP (0 2 1 0 0)) (:STEP (0 0 1 2 0)))
 ((:STEP (2 0 0 1 2)) (:STEP (1 2 0 1 2)))
 ((:STEP (2 1 1 0 2)) (:STEP (0 2 1 0 2))) ((0 0 1 1 2)) ((0 1 0 1 2))
 ((:STEP (0 0 2 1 0)) (:STEP (2 0 1 1 0)) (:STEP (0 0 1 2 0)))
 ((:STEP (1 1 2 0 0)) (:STEP (2 1 0 0 0)) (:STEP (0 1 0 2 0)))
 ((:STEP (0 0 2 1 2)) (:STEP (2 0 1 1 2)))
 ((:STEP (1 1 2 0 2)) (:STEP (2 1 0 0 2)))
 ((:STEP (2 0 1 0 1)) (:STEP (0 2 0 1 0)) (:STEP (1 2 1 0 1))
  (:STEP (0 1 2 1 0)) (:STEP (1 0 2 0 1)) (:STEP (0 1 0 2 0))
  (:STEP (1 0 1 2 1)) (:STEP (0 1 0 1 2)))
 ((:STEP (2 1 0 0 1)) (:STEP (1 2 1 0 0)) (:STEP (0 2 0 0 1))
  (:STEP (1 0 2 0 0)) (:STEP (0 0 2 0 1)) (:STEP (1 0 0 2 0))
  (:STEP (0 0 1 2 1)) (:STEP (1 0 0 1 2)))
 ((:STEP (2 0 1 0 2)) (:STEP (0 2 0 1 2)) (:STEP (0 2 0 1 0))
  (:STEP (1 2 1 0 2)) (:STEP (0 1 2 1 2)) (:STEP (0 1 2 1 0))
  (:STEP (1 0 2 0 2)) (:STEP (0 1 0 2 0)))
 ((:STEP (2 1 0 0 2)) (:STEP (1 2 1 0 0)) (:STEP (0 2 0 0 2))
  (:STEP (1 0 2 0 0)) (:STEP (0 0 2 0 2)) (:STEP (1 0 0 2 0)))
 ((:STEP (2 0 2 0 1)) (:STEP (0 2 0 2 0)) (:STEP (2 0 1 2 1))
  (:STEP (0 2 0 1 2)) (:STEP (1 2 1 2 1)) (:STEP (0 1 2 1 2)))
 ((:STEP (2 1 2 1 0)) (:STEP (1 2 1 2 1)) (:STEP (2 1 0 2 0))
  (:STEP (1 2 1 0 2)) (:STEP (0 2 0 2 0)) (:STEP (1 0 2 0 2)))
 ((:STEP (0 0 1 0 1)) (:STEP (2 0 0 1 0)) (:STEP (0 2 1 0 1))
  (:STEP (1 2 1 0 1)) (:STEP (1 0 1 0 1)) (:STEP (1 0 2 0 1))
  (:STEP (1 0 2 1 0)) (:STEP (0 0 2 0 1)) (:STEP (1 0 0 2 0))
  (:STEP (0 0 1 2 1)) (:STEP (1 0 0 1 2)))
 ((:STEP (1 1 0 0 1)) (:STEP (2 1 1 0 0)) (:STEP (1 2 0 0 1))
  (:STEP (0 2 0 0 1)) (:STEP (0 1 0 0 1)) (:STEP (0 1 2 0 1))
  (:STEP (0 1 2 0 0)) (:STEP (1 0 2 0 1)) (:STEP (0 1 0 2 0))
  (:STEP (1 0 1 2 1)) (:STEP (0 1 0 1 2)))
 ((:STEP (0 0 1 0 2)) (:STEP (2 0 0 1 2)) (:STEP (2 0 0 1 0))
  (:STEP (0 2 1 0 2)) (:STEP (1 2 1 0 2)) (:STEP (1 0 1 0 2))
  (:STEP (1 0 2 0 2)) (:STEP (1 0 2 1 2)) (:STEP (1 0 2 1 0))
  (:STEP (0 0 2 0 2)) (:STEP (1 0 0 2 0)))
 ((:STEP (1 1 0 0 2)) (:STEP (2 1 1 0 0)) (:STEP (1 2 0 0 2))
  (:STEP (0 2 0 0 2)) (:STEP (0 1 0 0 2)) (:STEP (0 1 2 0 2))
  (:STEP (0 1 2 0 0)) (:STEP (1 0 2 0 2)) (:STEP (0 1 0 2 0)))
 ((:STEP (0 0 2 0 1)) (:STEP (2 0 0 2 0)) (:STEP (0 0 1 2 1))
  (:STEP (2 0 0 1 2)) (:STEP (0 2 1 2 1)) (:STEP (1 2 1 2 1))
  (:STEP (1 0 1 2 1)) (:STEP (1 0 2 1 2)))
 ((:STEP (1 1 2 1 0)) (:STEP (2 1 1 2 1)) (:STEP (1 1 0 2 0))
  (:STEP (2 1 1 0 2)) (:STEP (1 2 0 2 0)) (:STEP (0 2 0 2 0))
  (:STEP (0 1 0 2 0)) (:STEP (0 1 2 0 2)))
 ((:STEP (0 2 1 0 1)) (:STEP (0 2 0 1 0)) (:STEP (1 0 1 0 1))
  (:STEP (2 1 0 1 0)) (:STEP (1 0 2 0 1)) (:STEP (0 1 2 0 1))
  (:STEP (0 1 0 2 0)) (:STEP (1 0 1 2 1)) (:STEP (0 1 0 1 2)))
 ((:STEP (1 2 0 0 1)) (:STEP (1 2 1 0 0)) (:STEP (0 1 0 0 1))
  (:STEP (2 0 1 0 0)) (:STEP (0 0 2 0 1)) (:STEP (0 0 1 0 1))
  (:STEP (0 0 1 2 1)) (:STEP (0 0 1 2 0)) (:STEP (0 0 1 1 2)))
 ((:STEP (0 2 1 0 2)) (:STEP (0 2 0 1 2)) (:STEP (0 2 0 1 0))
  (:STEP (1 0 1 0 2)) (:STEP (2 1 0 1 2)) (:STEP (2 1 0 1 0))
  (:STEP (1 0 2 0 2)) (:STEP (0 1 2 0 2)) (:STEP (0 1 0 2 0)))
 ((:STEP (1 2 0 0 2)) (:STEP (1 2 1 0 0)) (:STEP (0 1 0 0 2))
  (:STEP (2 0 1 0 0)) (:STEP (0 0 2 0 2)) (:STEP (0 0 1 0 2))
  (:STEP (0 0 1 2 0)))
 ((:STEP (2 0 2 0 1)) (:STEP (0 2 0 2 0)) (:STEP (0 2 1 2 1))
  (:STEP (0 2 0 1 2)) (:STEP (1 0 1 2 1)) (:STEP (2 1 0 2 1))
  (:STEP (2 1 0 1 2)))
 ((:STEP (2 1 2 1 0)) (:STEP (1 2 1 2 1)) (:STEP (1 2 0 2 0))
  (:STEP (1 2 1 0 2)) (:STEP (0 1 0 2 0)) (:STEP (2 0 1 2 0))
  (:STEP (2 0 1 0 2)))
 ((:STEP (0 0 2 1 0)) (:STEP (2 1 1 0 1)) (:STEP (0 1 1 0 1))
  (:STEP (0 2 1 1 0)) (:STEP (0 0 1 2 1)) (:STEP (0 0 1 2 0))
  (:STEP (0 0 1 1 2)))
 ((:STEP (1 1 0 0 1)) (:STEP (1 1 2 0 0)) (:STEP (2 0 0 0 1))
  (:STEP (1 0 0 0 1)) (:STEP (1 2 0 0 0)) (:STEP (0 0 2 0 1))
  (:STEP (1 0 0 2 0)) (:STEP (0 0 1 2 1)) (:STEP (1 0 0 1 2)))
 ((:STEP (0 0 2 1 2)) (:STEP (0 0 2 1 0)) (:STEP (2 1 1 0 2))
  (:STEP (0 1 1 0 2)) (:STEP (0 2 1 1 2)) (:STEP (0 2 1 1 0))
  (:STEP (0 0 1 2 0)))
 ((:STEP (1 1 0 0 2)) (:STEP (1 1 2 0 0)) (:STEP (2 0 0 0 2))
  (:STEP (1 0 0 0 2)) (:STEP (1 2 0 0 0)) (:STEP (0 0 2 0 2))
  (:STEP (1 0 0 2 0)))
 ((:STEP (0 0 2 2 1)) (:STEP (0 0 2 2 0)) (:STEP (0 0 1 2 1))
  (:STEP (0 0 2 1 2)) (:STEP (2 1 1 2 1)) (:STEP (0 1 1 2 1))
  (:STEP (0 2 1 1 2)))
 ((:STEP (1 1 2 2 0)) (:STEP (1 1 2 2 1)) (:STEP (1 1 0 2 0))
  (:STEP (1 1 2 0 2)) (:STEP (2 0 0 2 0)) (:STEP (1 0 0 2 0))
  (:STEP (1 2 0 0 2)))
 ((:STEP (0 0 1 0 2)) (:STEP (1 0 0 1 2)) (:STEP (1 0 0 1 0)))
 ((:STEP (0 0 1 0 1)) (:STEP (2 0 1 0 1)) (:STEP (2 0 0 1 0))
  (:STEP (1 0 1 0 1)) (:STEP (1 2 1 0 1)) (:STEP (1 2 0 1 0))
  (:STEP (0 0 2 0 1)) (:STEP (1 0 0 2 0)) (:STEP (0 0 1 2 1))
  (:STEP (1 0 0 1 2)))
 ((:STEP (1 1 0 0 1)) (:STEP (2 1 0 0 1)) (:STEP (2 1 1 0 0))
  (:STEP (0 1 0 0 1)) (:STEP (0 2 0 0 1)) (:STEP (0 2 1 0 0))
  (:STEP (0 0 2 0 1)) (:STEP (0 0 1 0 1)) (:STEP (0 0 1 2 1))
  (:STEP (0 0 1 2 0)) (:STEP (0 0 1 1 2)))
 ((:STEP (0 0 1 0 2)) (:STEP (2 0 1 0 2)) (:STEP (2 0 0 1 2))
  (:STEP (2 0 0 1 0)) (:STEP (1 0 1 0 2)) (:STEP (1 2 1 0 2))
  (:STEP (1 2 0 1 2)) (:STEP (1 2 0 1 0)) (:STEP (0 0 2 0 2))
  (:STEP (1 0 0 2 0)))
 ((:STEP (1 1 0 0 2)) (:STEP (2 1 0 0 2)) (:STEP (2 1 1 0 0))
  (:STEP (0 1 0 0 2)) (:STEP (0 2 0 0 2)) (:STEP (0 2 1 0 0))
  (:STEP (0 0 2 0 2)) (:STEP (0 0 1 0 2)) (:STEP (0 0 1 2 0)))
 ((:STEP (0 0 2 0 1)) (:STEP (2 0 0 2 0)) (:STEP (0 0 1 2 1))
  (:STEP (2 0 1 2 1)) (:STEP (2 0 0 1 2)) (:STEP (1 0 1 2 1))
  (:STEP (1 2 1 2 1)) (:STEP (1 2 0 2 1)) (:STEP (1 2 0 1 2)))
 ((:STEP (1 1 2 1 0)) (:STEP (2 1 1 2 1)) (:STEP (1 1 0 2 0))
  (:STEP (2 1 0 2 0)) (:STEP (2 1 1 0 2)) (:STEP (0 1 0 2 0))
  (:STEP (0 2 0 2 0)) (:STEP (0 2 1 2 0)) (:STEP (0 2 1 0 2)))
 ((:STEP (0 0 1 1 2)) (:STEP (0 0 1 1 0)))
 ((:STEP (1 0 1 0 2)) (:STEP (0 1 0 1 2)) (:STEP (0 1 0 1 0)))
 ((:STEP (0 0 2 1 0)) (:STEP (0 1 1 0 1)) (:STEP (2 1 1 0 1))
  (:STEP (2 0 1 1 0)) (:STEP (0 0 1 2 1)) (:STEP (0 0 1 2 0))
  (:STEP (0 0 1 1 2)))
 ((:STEP (1 1 0 0 1)) (:STEP (1 1 2 0 0)) (:STEP (1 0 0 0 1))
  (:STEP (2 0 0 0 1)) (:STEP (2 1 0 0 0)) (:STEP (1 0 2 0 1))
  (:STEP (0 1 2 0 1)) (:STEP (0 1 0 2 0)) (:STEP (1 0 1 2 1))
  (:STEP (0 1 0 1 2)))
 ((:STEP (0 0 2 1 2)) (:STEP (0 0 2 1 0)) (:STEP (0 1 1 0 2))
  (:STEP (2 1 1 0 2)) (:STEP (2 0 1 1 2)) (:STEP (2 0 1 1 0))
  (:STEP (0 0 1 2 0)))
 ((:STEP (1 1 0 0 2)) (:STEP (1 1 2 0 0)) (:STEP (1 0 0 0 2))
  (:STEP (2 0 0 0 2)) (:STEP (2 1 0 0 0)) (:STEP (1 0 2 0 2))
  (:STEP (0 1 2 0 2)) (:STEP (0 1 0 2 0)))
 ((:STEP (0 0 2 2 1)) (:STEP (0 0 2 2 0)) (:STEP (0 0 1 2 1))
  (:STEP (0 0 2 1 2)) (:STEP (0 1 1 2 1)) (:STEP (2 1 1 2 1))
  (:STEP (2 0 1 1 2)))
 ((:STEP (1 1 2 2 0)) (:STEP (1 1 2 2 1)) (:STEP (1 1 0 2 0))
  (:STEP (1 1 2 0 2)) (:STEP (1 0 0 2 0)) (:STEP (2 0 0 2 0))
  (:STEP (2 1 0 0 2))))
STEENROD> (car (mapcar (lambda (vec) vec)
		   (mapcar #'cdr *deg4quad-basis*)))
((:STEP (0 2 0 1 0)) (:STEP (0 1 2 1 0)) (:STEP (0 1 0 2 0)))
STEENROD> (car (mapcar #'cdr *deg4quad-basis*))
((:STEP (0 2 0 1 0)) (:STEP (0 1 2 1 0)) (:STEP (0 1 0 2 0)))
STEENROD> (reduce #'logior (mapcar #'translate (car (mapcar #'cdr *deg4quad-basis*))))
604462909807314587353345
STEENROD> (funcall (lambda (vec)
		     (reduce #'logior (mapcar #'translate vec)))
		   (car (mapcar #'cdr *deg4quad-basis*)))
604462909807314587353345
STEENROD> (mapcar (lambda (vec)
		     (reduce #'logior (mapcar #'translate vec)))
		  (mapcar #'cdr *deg4quad-basis*))
; Evaluation aborted on #<TYPE-ERROR expected-type: INTEGER datum: NIL>.
STEENROD> (mapcar (lambda (vec)
		     (reduce #'logior (mapcar #'translate vec)))
		  (mapcar #'cdr *deg4quad-basis*))
; Evaluation aborted on #<TYPE-ERROR expected-type: INTEGER datum: NIL>.
STEENROD> (mapcar #'length 
		  (mapcar #'cdr *deg4quad-basis*))
(3 3 2 2 3 3 2 2 3 3 2 2 3 3 2 2 1 3 3 2 2 1 1 3 3 2 2 8 8 8 6 6 6 11 11 11 9 8
 8 9 9 9 7 7 7 7 9 7 7 7 7 3 10 11 10 9 9 9 2 3 7 10 7 8 7 7)
STEENROD> (mapcar #'CAR 
		  (mapcar #'cdr *deg4quad-basis*))
((:STEP (0 2 0 1 0)) (:STEP (1 2 1 0 0)) (:STEP (0 2 0 1 2))
 (:STEP (1 2 1 0 2)) (:STEP (2 0 0 1 0)) (:STEP (2 1 1 0 0))
 (:STEP (2 0 0 1 2)) (:STEP (2 1 1 0 2)) (:STEP (0 2 0 1 0))
 (:STEP (1 2 1 0 0)) (:STEP (0 2 0 1 2)) (:STEP (1 2 1 0 2))
 (:STEP (0 0 2 1 0)) (:STEP (1 1 2 0 0)) (:STEP (0 0 2 1 2))
 (:STEP (1 1 2 0 2)) (1 0 0 1 2) (:STEP (2 0 0 1 0)) (:STEP (2 1 1 0 0))
 (:STEP (2 0 0 1 2)) (:STEP (2 1 1 0 2)) (0 0 1 1 2) (0 1 0 1 2)
 (:STEP (0 0 2 1 0)) (:STEP (1 1 2 0 0)) (:STEP (0 0 2 1 2))
 (:STEP (1 1 2 0 2)) (:STEP (2 0 1 0 1)) (:STEP (2 1 0 0 1))
 (:STEP (2 0 1 0 2)) (:STEP (2 1 0 0 2)) (:STEP (2 0 2 0 1))
 (:STEP (2 1 2 1 0)) (:STEP (0 0 1 0 1)) (:STEP (1 1 0 0 1))
 (:STEP (0 0 1 0 2)) (:STEP (1 1 0 0 2)) (:STEP (0 0 2 0 1))
 (:STEP (1 1 2 1 0)) (:STEP (0 2 1 0 1)) (:STEP (1 2 0 0 1))
 (:STEP (0 2 1 0 2)) (:STEP (1 2 0 0 2)) (:STEP (2 0 2 0 1))
 (:STEP (2 1 2 1 0)) (:STEP (0 0 2 1 0)) (:STEP (1 1 0 0 1))
 (:STEP (0 0 2 1 2)) (:STEP (1 1 0 0 2)) (:STEP (0 0 2 2 1))
 (:STEP (1 1 2 2 0)) (:STEP (0 0 1 0 2)) (:STEP (0 0 1 0 1))
 (:STEP (1 1 0 0 1)) (:STEP (0 0 1 0 2)) (:STEP (1 1 0 0 2))
 (:STEP (0 0 2 0 1)) (:STEP (1 1 2 1 0)) (:STEP (0 0 1 1 2))
 (:STEP (1 0 1 0 2)) (:STEP (0 0 2 1 0)) (:STEP (1 1 0 0 1))
 (:STEP (0 0 2 1 2)) (:STEP (1 1 0 0 2)) (:STEP (0 0 2 2 1))
 (:STEP (1 1 2 2 0)))
STEENROD> (mapcar #'length (mapcar #'cadr *deg4quad-basis*))
(2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 5 2 2 2 2 5 5 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2)
STEENROD> *deg4quad-basis*
((+ (:STEP (0 2 0 1 0)) (:STEP (0 1 2 1 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (1 2 1 0 0)) (:STEP (1 0 2 0 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (0 2 0 1 2)) (:STEP (0 1 2 1 2)))
 (+ (:STEP (1 2 1 0 2)) (:STEP (1 0 2 0 2)))
 (+ (:STEP (2 0 0 1 0)) (:STEP (1 0 2 1 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (2 1 1 0 0)) (:STEP (0 1 2 0 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (2 0 0 1 2)) (:STEP (1 0 2 1 2)))
 (+ (:STEP (2 1 1 0 2)) (:STEP (0 1 2 0 2)))
 (+ (:STEP (0 2 0 1 0)) (:STEP (2 1 0 1 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (1 2 1 0 0)) (:STEP (2 0 1 0 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (0 2 0 1 2)) (:STEP (2 1 0 1 2)))
 (+ (:STEP (1 2 1 0 2)) (:STEP (2 0 1 0 2)))
 (+ (:STEP (0 0 2 1 0)) (:STEP (0 2 1 1 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (1 1 2 0 0)) (:STEP (1 2 0 0 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (0 0 2 1 2)) (:STEP (0 2 1 1 2)))
 (+ (:STEP (1 1 2 0 2)) (:STEP (1 2 0 0 2))) (:STEP (1 0 0 1 2))
 (+ (:STEP (2 0 0 1 0)) (:STEP (1 2 0 1 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (2 1 1 0 0)) (:STEP (0 2 1 0 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (2 0 0 1 2)) (:STEP (1 2 0 1 2)))
 (+ (:STEP (2 1 1 0 2)) (:STEP (0 2 1 0 2))) (:STEP (0 0 1 1 2))
 (:STEP (0 1 0 1 2))
 (+ (:STEP (0 0 2 1 0)) (:STEP (2 0 1 1 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (1 1 2 0 0)) (:STEP (2 1 0 0 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (0 0 2 1 2)) (:STEP (2 0 1 1 2)))
 (+ (:STEP (1 1 2 0 2)) (:STEP (2 1 0 0 2)))
 (+ (:STEP (2 0 1 0 1)) (:STEP (0 2 0 1 0)) (:STEP (1 2 1 0 1))
    (:STEP (0 1 2 1 0)) (:STEP (1 0 2 0 1)) (:STEP (0 1 0 2 0))
    (:STEP (1 0 1 2 1)) (:STEP (0 1 0 1 2)))
 (+ (:STEP (2 1 0 0 1)) (:STEP (1 2 1 0 0)) (:STEP (0 2 0 0 1))
    (:STEP (1 0 2 0 0)) (:STEP (0 0 2 0 1)) (:STEP (1 0 0 2 0))
    (:STEP (0 0 1 2 1)) (:STEP (1 0 0 1 2)))
 (+ (:STEP (2 0 1 0 2)) (:STEP (0 2 0 1 2)) (:STEP (0 2 0 1 0))
    (:STEP (1 2 1 0 2)) (:STEP (0 1 2 1 2)) (:STEP (0 1 2 1 0))
    (:STEP (1 0 2 0 2)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (2 1 0 0 2)) (:STEP (1 2 1 0 0)) (:STEP (0 2 0 0 2))
    (:STEP (1 0 2 0 0)) (:STEP (0 0 2 0 2)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (2 0 2 0 1)) (:STEP (0 2 0 2 0)) (:STEP (2 0 1 2 1))
    (:STEP (0 2 0 1 2)) (:STEP (1 2 1 2 1)) (:STEP (0 1 2 1 2)))
 (+ (:STEP (2 1 2 1 0)) (:STEP (1 2 1 2 1)) (:STEP (2 1 0 2 0))
    (:STEP (1 2 1 0 2)) (:STEP (0 2 0 2 0)) (:STEP (1 0 2 0 2)))
 (+ (:STEP (0 0 1 0 1)) (:STEP (2 0 0 1 0)) (:STEP (0 2 1 0 1))
    (:STEP (1 2 1 0 1)) (:STEP (1 0 1 0 1)) (:STEP (1 0 2 0 1))
    (:STEP (1 0 2 1 0)) (:STEP (0 0 2 0 1)) (:STEP (1 0 0 2 0))
    (:STEP (0 0 1 2 1)) (:STEP (1 0 0 1 2)))
 (+ (:STEP (1 1 0 0 1)) (:STEP (2 1 1 0 0)) (:STEP (1 2 0 0 1))
    (:STEP (0 2 0 0 1)) (:STEP (0 1 0 0 1)) (:STEP (0 1 2 0 1))
    (:STEP (0 1 2 0 0)) (:STEP (1 0 2 0 1)) (:STEP (0 1 0 2 0))
    (:STEP (1 0 1 2 1)) (:STEP (0 1 0 1 2)))
 (+ (:STEP (0 0 1 0 2)) (:STEP (2 0 0 1 2)) (:STEP (2 0 0 1 0))
    (:STEP (0 2 1 0 2)) (:STEP (1 2 1 0 2)) (:STEP (1 0 1 0 2))
    (:STEP (1 0 2 0 2)) (:STEP (1 0 2 1 2)) (:STEP (1 0 2 1 0))
    (:STEP (0 0 2 0 2)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (1 1 0 0 2)) (:STEP (2 1 1 0 0)) (:STEP (1 2 0 0 2))
    (:STEP (0 2 0 0 2)) (:STEP (0 1 0 0 2)) (:STEP (0 1 2 0 2))
    (:STEP (0 1 2 0 0)) (:STEP (1 0 2 0 2)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (0 0 2 0 1)) (:STEP (2 0 0 2 0)) (:STEP (0 0 1 2 1))
    (:STEP (2 0 0 1 2)) (:STEP (0 2 1 2 1)) (:STEP (1 2 1 2 1))
    (:STEP (1 0 1 2 1)) (:STEP (1 0 2 1 2)))
 (+ (:STEP (1 1 2 1 0)) (:STEP (2 1 1 2 1)) (:STEP (1 1 0 2 0))
    (:STEP (2 1 1 0 2)) (:STEP (1 2 0 2 0)) (:STEP (0 2 0 2 0))
    (:STEP (0 1 0 2 0)) (:STEP (0 1 2 0 2)))
 (+ (:STEP (0 2 1 0 1)) (:STEP (0 2 0 1 0)) (:STEP (1 0 1 0 1))
    (:STEP (2 1 0 1 0)) (:STEP (1 0 2 0 1)) (:STEP (0 1 2 0 1))
    (:STEP (0 1 0 2 0)) (:STEP (1 0 1 2 1)) (:STEP (0 1 0 1 2)))
 (+ (:STEP (1 2 0 0 1)) (:STEP (1 2 1 0 0)) (:STEP (0 1 0 0 1))
    (:STEP (2 0 1 0 0)) (:STEP (0 0 2 0 1)) (:STEP (0 0 1 0 1))
    (:STEP (0 0 1 2 1)) (:STEP (0 0 1 2 0)) (:STEP (0 0 1 1 2)))
 (+ (:STEP (0 2 1 0 2)) (:STEP (0 2 0 1 2)) (:STEP (0 2 0 1 0))
    (:STEP (1 0 1 0 2)) (:STEP (2 1 0 1 2)) (:STEP (2 1 0 1 0))
    (:STEP (1 0 2 0 2)) (:STEP (0 1 2 0 2)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (1 2 0 0 2)) (:STEP (1 2 1 0 0)) (:STEP (0 1 0 0 2))
    (:STEP (2 0 1 0 0)) (:STEP (0 0 2 0 2)) (:STEP (0 0 1 0 2))
    (:STEP (0 0 1 2 0)))
 (+ (:STEP (2 0 2 0 1)) (:STEP (0 2 0 2 0)) (:STEP (0 2 1 2 1))
    (:STEP (0 2 0 1 2)) (:STEP (1 0 1 2 1)) (:STEP (2 1 0 2 1))
    (:STEP (2 1 0 1 2)))
 (+ (:STEP (2 1 2 1 0)) (:STEP (1 2 1 2 1)) (:STEP (1 2 0 2 0))
    (:STEP (1 2 1 0 2)) (:STEP (0 1 0 2 0)) (:STEP (2 0 1 2 0))
    (:STEP (2 0 1 0 2)))
 (+ (:STEP (0 0 2 1 0)) (:STEP (2 1 1 0 1)) (:STEP (0 1 1 0 1))
    (:STEP (0 2 1 1 0)) (:STEP (0 0 1 2 1)) (:STEP (0 0 1 2 0))
    (:STEP (0 0 1 1 2)))
 (+ (:STEP (1 1 0 0 1)) (:STEP (1 1 2 0 0)) (:STEP (2 0 0 0 1))
    (:STEP (1 0 0 0 1)) (:STEP (1 2 0 0 0)) (:STEP (0 0 2 0 1))
    (:STEP (1 0 0 2 0)) (:STEP (0 0 1 2 1)) (:STEP (1 0 0 1 2)))
 (+ (:STEP (0 0 2 1 2)) (:STEP (0 0 2 1 0)) (:STEP (2 1 1 0 2))
    (:STEP (0 1 1 0 2)) (:STEP (0 2 1 1 2)) (:STEP (0 2 1 1 0))
    (:STEP (0 0 1 2 0)))
 (+ (:STEP (1 1 0 0 2)) (:STEP (1 1 2 0 0)) (:STEP (2 0 0 0 2))
    (:STEP (1 0 0 0 2)) (:STEP (1 2 0 0 0)) (:STEP (0 0 2 0 2))
    (:STEP (1 0 0 2 0)))
 (+ (:STEP (0 0 2 2 1)) (:STEP (0 0 2 2 0)) (:STEP (0 0 1 2 1))
    (:STEP (0 0 2 1 2)) (:STEP (2 1 1 2 1)) (:STEP (0 1 1 2 1))
    (:STEP (0 2 1 1 2)))
 (+ (:STEP (1 1 2 2 0)) (:STEP (1 1 2 2 1)) (:STEP (1 1 0 2 0))
    (:STEP (1 1 2 0 2)) (:STEP (2 0 0 2 0)) (:STEP (1 0 0 2 0))
    (:STEP (1 2 0 0 2)))
 (+ (:STEP (0 0 1 0 2)) (:STEP (1 0 0 1 2)) (:STEP (1 0 0 1 0)))
 (+ (:STEP (0 0 1 0 1)) (:STEP (2 0 1 0 1)) (:STEP (2 0 0 1 0))
    (:STEP (1 0 1 0 1)) (:STEP (1 2 1 0 1)) (:STEP (1 2 0 1 0))
    (:STEP (0 0 2 0 1)) (:STEP (1 0 0 2 0)) (:STEP (0 0 1 2 1))
    (:STEP (1 0 0 1 2)))
 (+ (:STEP (1 1 0 0 1)) (:STEP (2 1 0 0 1)) (:STEP (2 1 1 0 0))
    (:STEP (0 1 0 0 1)) (:STEP (0 2 0 0 1)) (:STEP (0 2 1 0 0))
    (:STEP (0 0 2 0 1)) (:STEP (0 0 1 0 1)) (:STEP (0 0 1 2 1))
    (:STEP (0 0 1 2 0)) (:STEP (0 0 1 1 2)))
 (+ (:STEP (0 0 1 0 2)) (:STEP (2 0 1 0 2)) (:STEP (2 0 0 1 2))
    (:STEP (2 0 0 1 0)) (:STEP (1 0 1 0 2)) (:STEP (1 2 1 0 2))
    (:STEP (1 2 0 1 2)) (:STEP (1 2 0 1 0)) (:STEP (0 0 2 0 2))
    (:STEP (1 0 0 2 0)))
 (+ (:STEP (1 1 0 0 2)) (:STEP (2 1 0 0 2)) (:STEP (2 1 1 0 0))
    (:STEP (0 1 0 0 2)) (:STEP (0 2 0 0 2)) (:STEP (0 2 1 0 0))
    (:STEP (0 0 2 0 2)) (:STEP (0 0 1 0 2)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (0 0 2 0 1)) (:STEP (2 0 0 2 0)) (:STEP (0 0 1 2 1))
    (:STEP (2 0 1 2 1)) (:STEP (2 0 0 1 2)) (:STEP (1 0 1 2 1))
    (:STEP (1 2 1 2 1)) (:STEP (1 2 0 2 1)) (:STEP (1 2 0 1 2)))
 (+ (:STEP (1 1 2 1 0)) (:STEP (2 1 1 2 1)) (:STEP (1 1 0 2 0))
    (:STEP (2 1 0 2 0)) (:STEP (2 1 1 0 2)) (:STEP (0 1 0 2 0))
    (:STEP (0 2 0 2 0)) (:STEP (0 2 1 2 0)) (:STEP (0 2 1 0 2)))
 (+ (:STEP (0 0 1 1 2)) (:STEP (0 0 1 1 0)))
 (+ (:STEP (1 0 1 0 2)) (:STEP (0 1 0 1 2)) (:STEP (0 1 0 1 0)))
 (+ (:STEP (0 0 2 1 0)) (:STEP (0 1 1 0 1)) (:STEP (2 1 1 0 1))
    (:STEP (2 0 1 1 0)) (:STEP (0 0 1 2 1)) (:STEP (0 0 1 2 0))
    (:STEP (0 0 1 1 2)))
 (+ (:STEP (1 1 0 0 1)) (:STEP (1 1 2 0 0)) (:STEP (1 0 0 0 1))
    (:STEP (2 0 0 0 1)) (:STEP (2 1 0 0 0)) (:STEP (1 0 2 0 1))
    (:STEP (0 1 2 0 1)) (:STEP (0 1 0 2 0)) (:STEP (1 0 1 2 1))
    (:STEP (0 1 0 1 2)))
 (+ (:STEP (0 0 2 1 2)) (:STEP (0 0 2 1 0)) (:STEP (0 1 1 0 2))
    (:STEP (2 1 1 0 2)) (:STEP (2 0 1 1 2)) (:STEP (2 0 1 1 0))
    (:STEP (0 0 1 2 0)))
 (+ (:STEP (1 1 0 0 2)) (:STEP (1 1 2 0 0)) (:STEP (1 0 0 0 2))
    (:STEP (2 0 0 0 2)) (:STEP (2 1 0 0 0)) (:STEP (1 0 2 0 2))
    (:STEP (0 1 2 0 2)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (0 0 2 2 1)) (:STEP (0 0 2 2 0)) (:STEP (0 0 1 2 1))
    (:STEP (0 0 2 1 2)) (:STEP (0 1 1 2 1)) (:STEP (2 1 1 2 1))
    (:STEP (2 0 1 1 2)))
 (+ (:STEP (1 1 2 2 0)) (:STEP (1 1 2 2 1)) (:STEP (1 1 0 2 0))
    (:STEP (1 1 2 0 2)) (:STEP (1 0 0 2 0)) (:STEP (2 0 0 2 0))
    (:STEP (2 1 0 0 2))))
STEENROD> *DEG4*
((:STEP (0 1 0 1 2)) (:STEP (1 0 0 1 2))
 (+ (:STEP (0 2 0 1 0)) (:STEP (0 1 2 1 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (1 2 1 0 0)) (:STEP (1 0 2 0 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (0 2 0 1 2)) (:STEP (0 1 2 1 2)))
 (+ (:STEP (1 2 1 0 2)) (:STEP (1 0 2 0 2))) (:STEP (1 0 0 1 2))
 (:STEP (0 1 0 1 2))
 (+ (:STEP (2 0 0 1 0)) (:STEP (1 0 2 1 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (2 1 1 0 0)) (:STEP (0 1 2 0 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (2 0 0 1 2)) (:STEP (1 0 2 1 2)))
 (+ (:STEP (2 1 1 0 2)) (:STEP (0 1 2 0 2))) (:STEP (0 1 0 1 2))
 (:STEP (0 0 1 1 2))
 (+ (:STEP (0 2 0 1 0)) (:STEP (2 1 0 1 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (1 2 1 0 0)) (:STEP (2 0 1 0 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (0 2 0 1 2)) (:STEP (2 1 0 1 2)))
 (+ (:STEP (1 2 1 0 2)) (:STEP (2 0 1 0 2))) (:STEP (0 0 1 1 2))
 (:STEP (1 0 0 1 2))
 (+ (:STEP (0 0 2 1 0)) (:STEP (0 2 1 1 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (1 1 2 0 0)) (:STEP (1 2 0 0 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (0 0 2 1 2)) (:STEP (0 2 1 1 2)))
 (+ (:STEP (1 1 2 0 2)) (:STEP (1 2 0 0 2))) (:STEP (1 0 0 1 2))
 (:STEP (0 0 1 1 2))
 (+ (:STEP (2 0 0 1 0)) (:STEP (1 2 0 1 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (2 1 1 0 0)) (:STEP (0 2 1 0 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (2 0 0 1 2)) (:STEP (1 2 0 1 2)))
 (+ (:STEP (2 1 1 0 2)) (:STEP (0 2 1 0 2))) (:STEP (0 0 1 1 2))
 (:STEP (0 1 0 1 2))
 (+ (:STEP (0 0 2 1 0)) (:STEP (2 0 1 1 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (1 1 2 0 0)) (:STEP (2 1 0 0 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (0 0 2 1 2)) (:STEP (2 0 1 1 2)))
 (+ (:STEP (1 1 2 0 2)) (:STEP (2 1 0 0 2))))
; compiling (DEFPARAMETER *DEG4* ...)
STEENROD> *DEG4*

((:STEP (0 1 0 1 2)) (:STEP (1 0 0 1 2))
 (+ (:STEP (0 2 0 1 0)) (:STEP (0 1 2 1 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (1 2 1 0 0)) (:STEP (1 0 2 0 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (0 2 0 1 2)) (:STEP (0 1 2 1 2)))
 (+ (:STEP (1 2 1 0 2)) (:STEP (1 0 2 0 2))) (:STEP (1 0 0 1 2))
 (:STEP (0 1 0 1 2))
 (+ (:STEP (2 0 0 1 0)) (:STEP (1 0 2 1 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (2 1 1 0 0)) (:STEP (0 1 2 0 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (2 0 0 1 2)) (:STEP (1 0 2 1 2)))
 (+ (:STEP (2 1 1 0 2)) (:STEP (0 1 2 0 2))) (:STEP (0 1 0 1 2))
 (:STEP (0 0 1 1 2))
 (+ (:STEP (0 2 0 1 0)) (:STEP (2 1 0 1 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (1 2 1 0 0)) (:STEP (2 0 1 0 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (0 2 0 1 2)) (:STEP (2 1 0 1 2)))
 (+ (:STEP (1 2 1 0 2)) (:STEP (2 0 1 0 2))) (:STEP (0 0 1 1 2))
 (:STEP (1 0 0 1 2))
 (+ (:STEP (0 0 2 1 0)) (:STEP (0 2 1 1 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (1 1 2 0 0)) (:STEP (1 2 0 0 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (0 0 2 1 2)) (:STEP (0 2 1 1 2)))
 (+ (:STEP (1 1 2 0 2)) (:STEP (1 2 0 0 2))) (:STEP (1 0 0 1 2))
 (:STEP (0 0 1 1 2))
 (+ (:STEP (2 0 0 1 0)) (:STEP (1 2 0 1 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (2 1 1 0 0)) (:STEP (0 2 1 0 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (2 0 0 1 2)) (:STEP (1 2 0 1 2)))
 (+ (:STEP (2 1 1 0 2)) (:STEP (0 2 1 0 2))) (:STEP (0 0 1 1 2))
 (:STEP (0 1 0 1 2))
 (+ (:STEP (0 0 2 1 0)) (:STEP (2 0 1 1 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (1 1 2 0 0)) (:STEP (2 1 0 0 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (0 0 2 1 2)) (:STEP (2 0 1 1 2)))
 (+ (:STEP (1 1 2 0 2)) (:STEP (2 1 0 0 2))))
STEENROD> *PRE-FLIP-DEG4*
((+ (:STEP (0 1 0 1 2))) (+ (:STEP (1 0 0 1 2)))
 (+ (:STEP (0 2 0 1 0)) (:STEP (0 1 2 1 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (1 2 1 0 0)) (:STEP (1 0 2 0 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (0 2 0 1 2)) (:STEP (0 1 2 1 2)))
 (+ (:STEP (1 2 1 0 2)) (:STEP (1 0 2 0 2))))
; compiling (DEFPARAMETER *DEG4* ...)
STEENROD> *DEG4*

((:STEP (0 1 0 1 2)) (:STEP (1 0 0 1 2))
 (+ (:STEP (0 2 0 1 0)) (:STEP (0 1 2 1 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (1 2 1 0 0)) (:STEP (1 0 2 0 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (0 2 0 1 2)) (:STEP (0 1 2 1 2)))
 (+ (:STEP (1 2 1 0 2)) (:STEP (1 0 2 0 2))) (:STEP (1 0 0 1 2))
 (:STEP (0 1 0 1 2))
 (+ (:STEP (2 0 0 1 0)) (:STEP (1 0 2 1 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (2 1 1 0 0)) (:STEP (0 1 2 0 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (2 0 0 1 2)) (:STEP (1 0 2 1 2)))
 (+ (:STEP (2 1 1 0 2)) (:STEP (0 1 2 0 2))) (:STEP (0 1 0 1 2))
 (:STEP (0 0 1 1 2))
 (+ (:STEP (0 2 0 1 0)) (:STEP (2 1 0 1 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (1 2 1 0 0)) (:STEP (2 0 1 0 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (0 2 0 1 2)) (:STEP (2 1 0 1 2)))
 (+ (:STEP (1 2 1 0 2)) (:STEP (2 0 1 0 2))) (:STEP (0 0 1 1 2))
 (:STEP (1 0 0 1 2))
 (+ (:STEP (0 0 2 1 0)) (:STEP (0 2 1 1 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (1 1 2 0 0)) (:STEP (1 2 0 0 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (0 0 2 1 2)) (:STEP (0 2 1 1 2)))
 (+ (:STEP (1 1 2 0 2)) (:STEP (1 2 0 0 2))) (:STEP (1 0 0 1 2))
 (:STEP (0 0 1 1 2))
 (+ (:STEP (2 0 0 1 0)) (:STEP (1 2 0 1 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (2 1 1 0 0)) (:STEP (0 2 1 0 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (2 0 0 1 2)) (:STEP (1 2 0 1 2)))
 (+ (:STEP (2 1 1 0 2)) (:STEP (0 2 1 0 2))) (:STEP (0 0 1 1 2))
 (:STEP (0 1 0 1 2))
 (+ (:STEP (0 0 2 1 0)) (:STEP (2 0 1 1 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (1 1 2 0 0)) (:STEP (2 1 0 0 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (0 0 2 1 2)) (:STEP (2 0 1 1 2)))
 (+ (:STEP (1 1 2 0 2)) (:STEP (2 1 0 0 2))))
STEENROD> *PRE-FLIP-DEG4*
((+ (:STEP (0 1 0 1 2))) (+ (:STEP (1 0 0 1 2)))
 (+ (:STEP (0 2 0 1 0)) (:STEP (0 1 2 1 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (1 2 1 0 0)) (:STEP (1 0 2 0 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (0 2 0 1 2)) (:STEP (0 1 2 1 2)))
 (+ (:STEP (1 2 1 0 2)) (:STEP (1 0 2 0 2))))
; compiling (DEFUN PERMUTE-STEP ...)
; compiling (DEFPARAMETER *DEG4* ...)
STEENROD> *DEG4*

((:STEP (0 1 0 1 2)) (:STEP (1 0 0 1 2))
 (+ (:STEP (0 2 0 1 0)) (:STEP (0 1 2 1 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (1 2 1 0 0)) (:STEP (1 0 2 0 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (0 2 0 1 2)) (:STEP (0 1 2 1 2)))
 (+ (:STEP (1 2 1 0 2)) (:STEP (1 0 2 0 2))) (:STEP (1 0 0 1 2))
 (:STEP (0 1 0 1 2))
 (+ (:STEP (2 0 0 1 0)) (:STEP (1 0 2 1 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (2 1 1 0 0)) (:STEP (0 1 2 0 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (2 0 0 1 2)) (:STEP (1 0 2 1 2)))
 (+ (:STEP (2 1 1 0 2)) (:STEP (0 1 2 0 2))) (:STEP (0 1 0 1 2))
 (:STEP (0 0 1 1 2))
 (+ (:STEP (0 2 0 1 0)) (:STEP (2 1 0 1 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (1 2 1 0 0)) (:STEP (2 0 1 0 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (0 2 0 1 2)) (:STEP (2 1 0 1 2)))
 (+ (:STEP (1 2 1 0 2)) (:STEP (2 0 1 0 2))) (:STEP (0 0 1 1 2))
 (:STEP (1 0 0 1 2))
 (+ (:STEP (0 0 2 1 0)) (:STEP (0 2 1 1 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (1 1 2 0 0)) (:STEP (1 2 0 0 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (0 0 2 1 2)) (:STEP (0 2 1 1 2)))
 (+ (:STEP (1 1 2 0 2)) (:STEP (1 2 0 0 2))) (:STEP (1 0 0 1 2))
 (:STEP (0 0 1 1 2))
 (+ (:STEP (2 0 0 1 0)) (:STEP (1 2 0 1 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (2 1 1 0 0)) (:STEP (0 2 1 0 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (2 0 0 1 2)) (:STEP (1 2 0 1 2)))
 (+ (:STEP (2 1 1 0 2)) (:STEP (0 2 1 0 2))) (:STEP (0 0 1 1 2))
 (:STEP (0 1 0 1 2))
 (+ (:STEP (0 0 2 1 0)) (:STEP (2 0 1 1 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (1 1 2 0 0)) (:STEP (2 1 0 0 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (0 0 2 1 2)) (:STEP (2 0 1 1 2)))
 (+ (:STEP (1 1 2 0 2)) (:STEP (2 1 0 0 2))))
STEENROD> (PERMUTE-STEP '(:perm ()) '(:step 0 1 0 2 0))
; Evaluation aborted on #<TYPE-ERROR expected-type: SEQUENCE datum: 0>.
STEENROD> (PERMUTE-STEP '(:perm ()) '(:step (0 1 0 2 0)))
(:STEP (0 1 0 2 0))
STEENROD> (PERMUTE-STEP '(:perm ()) '(+ (:step (0 1 0 2 0))))
(:STEP (0 1 0 2 0))
; compiling (DEFPARAMETER *SPARSE-MX* ...)

; file: /tmp/file3NyG4B
; in: DEFPARAMETER *SPARSE-MX*
;     (OPTIMA:MATCH STEENROD::VEC
;       ((LIST :STEP STEENROD::_) (STEENROD::TRANSLATE STEENROD::VEC))
;       ((LIST + STEENROD::STUFF)
;        (REDUCE #'LOGIOR (MAPCAR #'STEENROD::TRANSLATE STEENROD::VEC))))
; --> OPTIMA::%OR BLOCK TAGBODY RETURN-FROM SYMBOL-MACROLET OPTIMA::%IF 
; --> OPTIMA::%OR IF LET OPTIMA::%OR BLOCK TAGBODY RETURN-FROM OPTIMA::%IF 
; --> OPTIMA::%OR IF LET OPTIMA::%IF OPTIMA::%OR IF OPTIMA::%OR 
; ==>
;   (LET ((STEENROD::STUFF #:G2))
;     (LET ((+ #:G0))
;       (REDUCE #'LOGIOR (MAPCAR #'STEENROD::TRANSLATE STEENROD::VEC))))
; 
; caught STYLE-WARNING:
;   The variable STUFF is defined but never used.
; 
; compilation unit finished
;   caught 1 STYLE-WARNING condition
; compiling (DEFPARAMETER *SPARSE-MX* ...)
STEENROD> *SPARSE-MX*

#(NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL 268435456 NIL
  NIL NIL NIL 576460752303423488 73786976294838206464 NIL NIL NIL NIL NIL NIL
  NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
  NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL)
STEENROD> (car *DEG4QUAD-BASIS*)
(+ (:STEP (0 2 0 1 0)) (:STEP (0 1 2 1 0)) (:STEP (0 1 0 2 0)))
STEENROD> *DEG4*
((:STEP (0 1 0 1 2)) (:STEP (1 0 0 1 2))
 (+ (:STEP (0 2 0 1 0)) (:STEP (0 1 2 1 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (1 2 1 0 0)) (:STEP (1 0 2 0 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (0 2 0 1 2)) (:STEP (0 1 2 1 2)))
 (+ (:STEP (1 2 1 0 2)) (:STEP (1 0 2 0 2))) (:STEP (1 0 0 1 2))
 (:STEP (0 1 0 1 2))
 (+ (:STEP (2 0 0 1 0)) (:STEP (1 0 2 1 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (2 1 1 0 0)) (:STEP (0 1 2 0 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (2 0 0 1 2)) (:STEP (1 0 2 1 2)))
 (+ (:STEP (2 1 1 0 2)) (:STEP (0 1 2 0 2))) (:STEP (0 1 0 1 2))
 (:STEP (0 0 1 1 2))
 (+ (:STEP (0 2 0 1 0)) (:STEP (2 1 0 1 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (1 2 1 0 0)) (:STEP (2 0 1 0 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (0 2 0 1 2)) (:STEP (2 1 0 1 2)))
 (+ (:STEP (1 2 1 0 2)) (:STEP (2 0 1 0 2))) (:STEP (0 0 1 1 2))
 (:STEP (1 0 0 1 2))
 (+ (:STEP (0 0 2 1 0)) (:STEP (0 2 1 1 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (1 1 2 0 0)) (:STEP (1 2 0 0 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (0 0 2 1 2)) (:STEP (0 2 1 1 2)))
 (+ (:STEP (1 1 2 0 2)) (:STEP (1 2 0 0 2))) (:STEP (1 0 0 1 2))
 (:STEP (0 0 1 1 2))
 (+ (:STEP (2 0 0 1 0)) (:STEP (1 2 0 1 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (2 1 1 0 0)) (:STEP (0 2 1 0 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (2 0 0 1 2)) (:STEP (1 2 0 1 2)))
 (+ (:STEP (2 1 1 0 2)) (:STEP (0 2 1 0 2))) (:STEP (0 0 1 1 2))
 (:STEP (0 1 0 1 2))
 (+ (:STEP (0 0 2 1 0)) (:STEP (2 0 1 1 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (1 1 2 0 0)) (:STEP (2 1 0 0 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (0 0 2 1 2)) (:STEP (2 0 1 1 2)))
 (+ (:STEP (1 1 2 0 2)) (:STEP (2 1 0 0 2))))
; compiling (DEFPARAMETER *DEG4QUAD-BASIS* ...)
STEENROD> (car *DEG4QUAD-BASIS*)

(+ (:STEP (0 2 0 1 0)) (:STEP (0 1 2 1 0)) (:STEP (0 1 0 2 0)))
; compiling (DEFPARAMETER *ALL-THINGS* ...)
; compiling (DEFPARAMETER *SPARSE-MX* ...)
STEENROD> *SPARSE-MX*

#(NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL 268435456 NIL
  NIL NIL NIL 576460752303423488 73786976294838206464 NIL NIL NIL NIL NIL NIL
  NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
  NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL)
; compiling (DEFPARAMETER *SPARSE-MX* ...)
STEENROD> *SPARSE-MX*

#(604462909807314587353345 2475880078570760549798249474 16388
  151115727451863006576640 2475880078570760566978117640
  604462909807452026306576 35184372088864 302821750714015999328256
  604462909807314587353856 2361183241434822609920 81920 42949672960
  2508757194024500068352 2475889523303726289090772992 9671406556917033401843712
  1237940039285380274907512832 268435456 2475880078570760635697594368
  2361183242671773188096 316659348799488 590304817557960392704
  576460752303423488 73786976294838206464 3689348814741910323200
  689465506498968201199616 87042659012253300578844672
  11141460353568422474092118016 604582813643793867211009
  2480715781849227865542886402 755578637259186183880965
  12379400392853805497770312706 2339760743927812 151115730899931471413248
  2480715791072599921389469768 604602413309512676016272
  2476031194343290207700254760 1062532458646632254144528
  4956595897313582112923721760 658562930533694351394209792
  604601260387867476099904 4838065038169505286589568 1057810137198796801655552
  2361183248306778672128 36895739947232915456 604462909877726282121216
  4838213044458857729884160 2480725234652644134398984192
  9674800757826595960389632 2475950914068005793501806592
  76162326635721638010683392 9748777809372369664838991872 4398331723776
  2480715781849227953287725056 4838066191092249528369152
  2475880078607112732084797440 9903527397832775162314883072
  4956595897314021917574823936 658260699093427392889225216 594475150812905472
  73895062685895098368 4839393636079575140139008 689611927530053270765568
  87047233804783580547645440 1204203453131759529492480
  153533579091057905187684352 19652298123655411864023597056)
; compiling (DEFUN TRANSLATE ...)
; compiling (DEFPARAMETER *MATRIX* ...)
STEENROD> (translate '(:step (0 1 0 2 0)))

1208925819614629174706176
STEENROD> (ash 2 1)
4
; compiling (DEFPARAMETER *MATRIX* ...)
; compiling (INCF (AREF # ...))

; file: /tmp/filesDkYoE
; in: INCF (AREF (GET-POS '(:STEP 0 1 0 2 0)) *MATRIX*)
;     (INCF (AREF (STEENROD::GET-POS '(:STEP 0 1 0 2 0)) STEENROD::*MATRIX*))
; ==>
;   (LET* ((#:G2 (STEENROD::GET-POS '(:STEP 0 1 0 2 0)))
;          (#:*MATRIX*1 STEENROD::*MATRIX*)
;          (#:G3 1)
;          (#:NEW0 (+ (AREF #:G2 #:*MATRIX*1) #:G3)))
;     (FUNCALL #'(SETF AREF) #:NEW0 #:G2 #:*MATRIX*1))
; 
; caught STYLE-WARNING:
;   undefined function: GET-POS
; 
; compilation unit finished
;   Undefined function:
;     GET-POS
;   caught 1 STYLE-WARNING condition
; compiling (DEFUN GET-POS ...)
; compiling (DEFUN TRANSLATE ...)
; compiling (DEFPARAMETER *MATRIX* ...)
; compiling (INCF (AREF # ...))
STEENROD> *MATRIX*

#(1208925819614629174706690 4951760157141521099596498948 32776
  302231454903726013153280 4951760157141521133956235280
  1208925819614904052613152 70368744177728 605643501428031998656512
  1208925819614629174707712 4722366482869645219840 163840 85899345920
  5017514388049000136704 4951779046607452578181545984
  19342813113834066803687424 2475880078570760549815025664 536870912
  4951760157141521271395188736 4722366485343546376192 633318697598976
  1180609635115920785408 1152921504606846976 147573952589676412928
  7378697629483820646400 1378931012997936402399232 174085318024506601157689344
  22282920707136844948184236032 1209165627287587734422018
  4961431563698455731085772804 1511157274518372367761930
  24758800785707610995540625412 4679521487855624 302231461799862942826496
  4961431582145199842778939536 1209204826619025352032544
  4952062388686580415400509520 2125064917293264508289056
  9913191794627164225847443520 1317125861067388702788419584
  1209202520775734952199808 9676130076339010573179136 2115620274397593603311104
  4722366496613557344256 73791479894465830912 1208925819755452564242432
  9676426088917715459768320 4961450469305288268797968384
  19349601515653191920779264 4951901828136011587003613184
  152324653271443276021366784 19497555618744739329677983744 8796663447552
  4961431563698455906575450112 9676132382184499056738304
  4951760157214225464169594880 19807054795665550324629766144
  9913191794628043835149647872 1316521398186854785778450432 1188950301625810944
  147790125371790196736 9678787272159150280278016 1379223855060106541531136
  174094467609567161095290880 2408406906263519058984960
  307067158182115810375368704 39304596247310823728047194112)
STEENROD> (aref (get-pos '(:step 0 1 0 2 0) *MATRIX*))
; compiling (DEFPARAMETER *MATRIX* ...)
; compiling (DEFPARAMETER *MATRIX* ...)
; compiling (DEFPARAMETER *MATRIX* ...); Evaluation aborted on #<SB-INT:SIMPLE-PROGRAM-ERROR "invalid number of arguments: ~S" {10032B5B23}>.
STEENROD> 

; No value; compiling (DEFPARAMETER *MATRIX* ...)
STEENROD> *MATRIX*

#(1208925819614629174706690 4951760157141521099596498948 32776
  302231454903726013153280 4951760157141521133956235280
  1208925819614904052613152 70368744177728 605643501428031998656512
  1208925819614629174707712 4722366482869645219840 163840 85899345920
  5017514388049000136704 4951779046607452578181545984
  19342813113834066803687424 2475880078570760549815025664 536870912
  4951760157141521271395188736 4722366485343546376192 633318697598976
  1180609635115920785408 1152921504606846976 147573952589676412928
  7378697629483820646400 1378931012997936402399232 174085318024506601157689344
  22282920707136844948184236032 1209165627287587734422018
  4961431563698455731085772804 1511157274518372367761930
  24758800785707610995540625412 4679521487855624 302231461799862942826496
  4961431582145199842778939536 1209204826619025352032544
  4952062388686580415400509520 2125064917293264508289056
  9913191794627164225847443520 1317125861067388702788419584
  1209202520775734952199808 9676130076339010573179136 2115620274397593603311104
  4722366496613557344256 73791479894465830912 1208925819755452564242432
  9676426088917715459768320 4961450469305288268797968384
  19349601515653191920779264 4951901828136011587003613184
  152324653271443276021366784 19497555618744739329677983744 8796663447552
  4961431563698455906575450112 9676132382184499056738304
  4951760157214225464169594880 19807054795665550324629766144
  9913191794628043835149647872 1316521398186854785778450432 1188950301625810944
  147790125371790196736 9678787272159150280278016 1379223855060106541531136
  174094467609567161095290880 2408406906263519058984960
)
STEENROD> *MATRIX*
#(1208925819614629174706690 4951760157141521099596498948 32776
  302231454903726013153280 4951760157141521133956235280
  1208925819614904052613152 70368744177728 605643501428031998656512
  1208925819614629174707712 4722366482869645219840 163840 85899345920
  5017514388049000136704 4951779046607452578181545984
  19342813113834066803687424 2475880078570760549815025664 536870912
  4951760157141521271395188736 4722366485343546376192 633318697598976
  1180609635115920785408 1152921504606846976 147573952589676412928
  7378697629483820646400 1378931012997936402399232 174085318024506601157689344
  22282920707136844948184236032 1209165627287587734422018
  4961431563698455731085772804 1511157274518372367761930
  24758800785707610995540625412 4679521487855624 302231461799862942826496
  4961431582145199842778939536 1209204826619025352032544
  4952062388686580415400509520 2125064917293264508289056
  9913191794627164225847443520 1317125861067388702788419584
  1209202520775734952199808 9676130076339010573179136 2115620274397593603311104
  4722366496613557344256 73791479894465830912 1208925819755452564242432
  9676426088917715459768320 4961450469305288268797968384
  19349601515653191920779264 4951901828136011587003613184
  152324653271443276021366784 19497555618744739329677983744 8796663447552
  4961431563698455906575450112 9676132382184499056738304
  4951760157214225464169594880 19807054795665550324629766144
  9913191794628043835149647872 1316521398186854785778450432 1188950301625810944
  147790125371790196736 9678787272159150280278016 1379223855060106541531136
  174094467609567161095290880 2408406906263519058984960
  307067158182115810375368704 39304596247310823728047194112)
; compiling (DEFPARAMETER *MATRIX* ...)
STEENROD> *MATRIX*

#(39304596247310823728047194112 24758800785707610995540625412
  22282920707136844948184236032 19807054795665550324629766144
  19497555618744739329677983744 9913191794628043835149647872
  9913191794627164225847443520 4961450469305288268797968384
  4961431582145199842778939536 4961431563698455906575450112
  4961431563698455731085772804 4952062388686580415400509520
  4951901828136011587003613184 4951779046607452578181545984
  4951760157214225464169594880 4951760157141521271395188736
  4951760157141521133956235280 4951760157141521099596498948
  2475880078570760549815025664 1317125861067388702788419584
  1316521398186854785778450432 307067158182115810375368704
  174094467609567161095290880 174085318024506601157689344
  152324653271443276021366784 19349601515653191920779264
  19342813113834066803687424 9678787272159150280278016
  9676426088917715459768320 9676132382184499056738304 9676130076339010573179136
  2408406906263519058984960 2125064917293264508289056 2115620274397593603311104
  1511157274518372367761930 1379223855060106541531136 1378931012997936402399232
  1209204826619025352032544 1209202520775734952199808 1209165627287587734422018
  1208925819755452564242432 1208925819614904052613152 1208925819614629174707712
  1208925819614629174706690 605643501428031998656512 302231461799862942826496
  302231454903726013153280 7378697629483820646400 5017514388049000136704
  4722366496613557344256 4722366485343546376192 4722366482869645219840
  1180609635115920785408 147790125371790196736 147573952589676412928
  73791479894465830912 1188950301625810944 1152921504606846976 4679521487855624
  633318697598976 70368744177728 8796663447552 85899345920 536870912 163840
  32776)
; compiling (DEFUN TRANSLATE ...)

; file: /tmp/fileQv9BHH
; in: DEFUN TRANSLATE
;     #'STEENROD::GETPOS
; 
; caught STYLE-WARNING:
;   undefined function: GETPOS
; 
; compilation unit finished
;   Undefined function:
;     GETPOS
;   caught 1 STYLE-WARNING condition

STEENROD> (translate *deg4quad-basis*)
; compiling (DEFUN TRANSLATE ...); Evaluation aborted on #<UNDEFINED-FUNCTION GETPOS {10079B76F3}>.
STEENROD> (translate *deg4quad-basis*)

(NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
 NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
 NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL
 NIL NIL NIL NIL NIL NIL NIL NIL NIL)
; compiling (DEFUN TRANSLATE ...)

; file: /tmp/fileXd55AR
; in: DEFUN TRANSLATE
;     (MAPCAR
;      (LAMBDA (STEENROD::VEC)
;        (OPTIMA:MATCH STEENROD::VEC
;          ((LIST* :STEP STEENROD::_) (LIST #))
;          ((LIST* + STEENROD::_) (MAPCAR #'STEENROD::GET-POS STEENROD::VEC)))))
; 
; caught WARNING:
;   The function was called with one argument, but wants at least two.
; 
; compilation unit finished
;   caught 1 WARNING condition
; compiling (DEFUN TRANSLATE ...)
STEENROD> (translate *deg4quad-basis*)

((8 0 79) (10 1 91) (14 2) (35 77) (34 3 91) (37 4 79) (45 5) (69 78) (8 9 79)
 (10 11 71) (14 16) (35 33) (67 20 71) (73 21 91) (83 22) (90 23) (NIL)
 (34 36 91) (37 40 71) (45 48) (69 53) (NIL) (NIL) (67 70 71) (73 76 79)
 (83 86) (90 93) (25 8 27 0 63 79 65 66) (29 10 31 1 43 91 82 28)
 (33 14 8 35 2 0 77 79) (93 10 39 1 41 91) (12 51 44 14 46 2)
 (17 46 50 35 51 77) (32 34 6 27 26 63 3 43 91 82 28)
 (60 37 7 31 30 64 4 63 79 65 66) (42 45 34 53 35 55 77 5 3 41 91)
 (72 37 23 39 38 78 4 77 79) (43 92 82 45 13 46 65 5) (49 85 89 69 18 51 79 78)
 (6 8 26 9 63 64 79 65 66) (7 10 30 11 43 32 82 71 59)
 (53 14 8 55 16 9 77 78 79) (23 10 38 11 41 42 71) (12 51 13 14 65 15 16)
 (17 46 18 35 79 19 33) (67 58 57 20 82 71 59) (60 73 62 61 21 43 91 82 28)
 (83 67 69 68 22 20 71) (72 73 75 74 21 41 91) (80 81 82 83 85 84 22)
 (87 88 89 90 92 91 23) (42 28 24) (32 25 34 26 27 36 43 91 82 28)
 (60 29 37 30 31 40 43 32 82 71 59) (42 33 45 34 55 35 48 36 41 91)
 (72 93 37 38 39 40 41 42 71) (43 92 82 44 45 65 46 47 48)
 (49 85 89 50 69 79 51 52 53) (59 54) (55 66 56) (67 57 58 70 82 71 59)
 (60 73 61 62 76 63 64 79 65 66) (83 67 68 69 86 70 71)
 (72 73 74 75 76 77 78 79) (80 81 82 83 84 85 86) (87 88 89 90 91 92 93))
; compiling (DEFPARAMETER *MATRIX* ...)
; compiling (DEFPARAMETER *MATRIX* ...)
; compiling (ITER (FOR EQN ...) ...)

; file: /tmp/fileuo3QTN
; in: ITER (FOR EQN IN (TRANSLATE *DEG4QUAD-BASIS*))
;     (ITERATE:ITER
;       (ITERATE:FOR STEENROD::EQN ITERATE:IN
;        (STEENROD::TRANSLATE STEENROD::*DEG4QUAD-BASIS*))
;       (ITERATE:FOR STEENROD::I FIRST 0 STEENROD::THEN (1+ STEENROD::I))
;       (DO (ITERATE:ITER
;            (ITERATE:FOR STEENROD::VEC ITERATE:IN STEENROD::EQN)
;            (DO (INCF # #)))))
; 
; caught ERROR:
;   (during macroexpansion of (ITER
;     (FOR EQN ...)
;     ...))
;   error while parsing arguments to DEFMACRO DO:
;     invalid number of elements in
;       ((ITER
;          (FOR VEC IN EQN)
;          (DO (INCF
;               (AREF VEC *MATRIX*)
;               (EXPT 2 I)))))
;     to satisfy lambda list
;       (SB-IMPL::VARLIST SB-IMPL::ENDLIST &BODY SB-IMPL::BODY):
;     at least 2 expected, but 1 found
; 
; compilation unit finished
;   caught 1 ERROR condition
; compiling (ITER (FOR EQN ...) ...)

; file: /tmp/fileT36uTG
; in: ITER (FOR EQN IN (TRANSLATE *DEG4QUAD-BASIS*))
;     (ITERATE:ITER
;       (ITERATE:FOR STEENROD::EQN ITERATE:IN
;        (STEENROD::TRANSLATE STEENROD::*DEG4QUAD-BASIS*))
;       (ITERATE:FOR STEENROD::I FIRST 0 STEENROD::THEN (1+ STEENROD::I))
;       (DO (ITERATE:ITER
;            (ITERATE:FOR STEENROD::VEC ITERATE:IN STEENROD::EQN)
;            (DO (INCF # #)))))
; 
; caught ERROR:
;   (during macroexpansion of (ITER
;     (FOR EQN ...)
;     ...))
;   error while parsing arguments to DEFMACRO DO:
;     invalid number of elements in
;       ((ITER
;          (FOR VEC IN EQN)
;          (DO (INCF
;               (AREF *MATRIX* VEC)
;               (EXPT 2 I)))))
;     to satisfy lambda list
;       (SB-IMPL::VARLIST SB-IMPL::ENDLIST &BODY SB-IMPL::BODY):
;     at least 2 expected, but 1 found
; 
; compilation unit finished
;   caught 1 ERROR condition
; compiling (DEFPARAMETER *MATRIX* ...)
; compiling (ITER (FOR EQN ...) ...)

; file: /tmp/file87MXNB
; in: ITER (FOR EQN IN (TRANSLATE *DEG4QUAD-BASIS*))
;     (ITERATE:ITER
;       (ITERATE:FOR STEENROD::EQN ITERATE:IN
;        (STEENROD::TRANSLATE STEENROD::*DEG4QUAD-BASIS*))
;       (ITERATE:FOR STEENROD::I FIRST 0 STEENROD::THEN (1+ STEENROD::I))
;       (DO (ITERATE:ITER
;            (ITERATE:FOR STEENROD::VEC ITERATE:IN STEENROD::EQN)
;            (DO (INCF # #)))))
; 
; caught ERROR:
;   (during macroexpansion of (ITER
;     (FOR EQN ...)
;     ...))
;   error while parsing arguments to DEFMACRO DO:
;     invalid number of elements in
;       ((ITER
;          (FOR VEC IN EQN)
;          (DO (INCF
;               (AREF *MATRIX* VEC)
;               (EXPT 2 I)))))
;     to satisfy lambda list
;       (SB-IMPL::VARLIST SB-IMPL::ENDLIST &BODY SB-IMPL::BODY):
;     at least 2 expected, but 1 found
; 
; compilation unit finished
;   caught 1 ERROR condition

STEENROD> (translate *DEG4QUAD-BASIS*)
((8 0 79) (10 1 91) (14 2) (35 77) (34 3 91) (37 4 79) (45 5) (69 78) (8 9 79)
 (10 11 71) (14 16) (35 33) (67 20 71) (73 21 91) (83 22) (90 23) (NIL)
 (34 36 91) (37 40 71) (45 48) (69 53) (NIL) (NIL) (67 70 71) (73 76 79)
 (83 86) (90 93) (25 8 27 0 63 79 65 66) (29 10 31 1 43 91 82 28)
 (33 14 8 35 2 0 77 79) (93 10 39 1 41 91) (12 51 44 14 46 2)
 (17 46 50 35 51 77) (32 34 6 27 26 63 3 43 91 82 28)
 (60 37 7 31 30 64 4 63 79 65 66) (42 45 34 53 35 55 77 5 3 41 91)
 (72 37 23 39 38 78 4 77 79) (43 92 82 45 13 46 65 5) (49 85 89 69 18 51 79 78)
 (6 8 26 9 63 64 79 65 66) (7 10 30 11 43 32 82 71 59)
 (53 14 8 55 16 9 77 78 79) (23 10 38 11 41 42 71) (12 51 13 14 65 15 16)
 (17 46 18 35 79 19 33) (67 58 57 20 82 71 59) (60 73 62 61 21 43 91 82 28)
 (83 67 69 68 22 20 71) (72 73 75 74 21 41 91) (80 81 82 83 85 84 22)
 (87 88 89 90 92 91 23) (42 28 24) (32 25 34 26 27 36 43 91 82 28)
 (60 29 37 30 31 40 43 32 82 71 59) (42 33 45 34 55 35 48 36 41 91)
 (72 93 37 38 39 40 41 42 71) (43 92 82 44 45 65 46 47 48)
 (49 85 89 50 69 79 51 52 53) (59 54) (55 66 56) (67 57 58 70 82 71 59)
 (60 73 61 62 76 63 64 79 65 66) (83 67 68 69 86 70 71)
 (72 73 74 75 76 77 78 79) (80 81 82 83 84 85 86) (87 88 89 90 91 92 93))
; compiling (ITER (FOR EQN ...) ...)

; file: /tmp/file7ufFGQ
; in: ITER (FOR EQN IN (TRANSLATE *DEG4QUAD-BASIS*))
;     (ITERATE:ITER
;       (ITERATE:FOR STEENROD::EQN ITERATE:IN
;        (STEENROD::TRANSLATE STEENROD::*DEG4QUAD-BASIS*))
;       (ITERATE:FOR STEENROD::I FIRST 0 STEENROD::THEN (1+ STEENROD::I))
;       (DO (ITERATE:ITER
;            (ITERATE:FOR STEENROD::VEC ITERATE:IN STEENROD::EQN)
;            (DO (INCF # #)))))
; 
; caught ERROR:
;   (during macroexpansion of (ITER
;     (FOR EQN ...)
;     ...))
;   error while parsing arguments to DEFMACRO DO:
;     invalid number of elements in
;       ((ITER
;          (FOR VEC IN EQN)
;          (DO (INCF
;               (AREF *MATRIX* VEC)
;               (EXPT 2 I)))))
;     to satisfy lambda list
;       (SB-IMPL::VARLIST SB-IMPL::ENDLIST &BODY SB-IMPL::BODY):
;     at least 2 expected, but 1 found
; 
; compilation unit finished
;   caught 1 ERROR condition
; compiling (ITER (FOR EQN ...) ...)
; compiling (ITER (FOR EQN ...) ...)
; compiling (ITER (FOR EQN ...) ...)
STEENROD> (iter (for vec in (car (translate *deg4quad-basis*)))
		(collect (expt 2 i)))

; in: ITER (FOR VEC IN (CAR (TRANSLATE *DEG4QUAD-BASIS*)))
;     (EXPT 2 STEENROD::I)
; 
; caught WARNING:
;   undefined variable: I
; 
; compilation unit finished
;   Undefined variable:
;     I
;   caught 1 WARNING condition
; Evaluation aborted on #<UNBOUND-VARIABLE I {1006D14C83}>.
STEENROD> (iter (for vec in (car (translate *deg4quad-basis*)))
		(collect (expt 2 vec)))
(256 1 604462909807314587353088)
STEENROD> (iter (for vec in (car (translate *deg4quad-basis*)))
		(afte-each (format t (expt 2 vec))))
; in: ITER (FOR VEC IN (CAR (TRANSLATE *DEG4QUAD-BASIS*)))
;     (FORMAT T (EXPT 2 STEENROD::VEC))
; 
; caught WARNING:
;   Derived type of (EXPT 2 VEC) is
;     (VALUES NUMBER &OPTIONAL),
;   conflicting with its asserted type
;     (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING FUNCTION).
;   See also:
;     The SBCL Manual, Node "Handling of Types"

;     (STEENROD::AFTE-EACH (FORMAT T (EXPT 2 STEENROD::VEC)))
; 
; caught STYLE-WARNING:
;   undefined function: AFTE-EACH
; 
; compilation unit finished
;   Undefined function:
;     AFTE-EACH
;   caught 1 WARNING condition
;   caught 1 STYLE-WARNING condition
; Evaluation aborted on #<SIMPLE-TYPE-ERROR expected-type:
                    (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING FUNCTION)
                    datum: 256>.
STEENROD> (iter (for vec in (car (translate *deg4quad-basis*)))
		(afte-each (write (expt 2 vec))))

;     (STEENROD::AFTE-EACH (WRITE (EXPT 2 STEENROD::VEC)))
; 
; caught STYLE-WARNING:
;   undefined function: AFTE-EACH
; 
; compilation unit finished
;   Undefined function:
;     AFTE-EACH
;   caught 1 STYLE-WARNING condition
256; Evaluation aborted on #<UNDEFINED-FUNCTION AFTE-EACH {1007293D83}>.
STEENROD> (iter (for vec in (car (translate *deg4quad-basis*)))
		(after-each (write (expt 2 vec))))
2561604462909807314587353088
NIL
STEENROD> (iter (for vec in (car (translate *deg4quad-basis*)))
		(write (expt 2 vec)))
2561604462909807314587353088
NIL
; compiling (ITER (FOR EQN ...) ...)
; compiling (ITER (FOR EQN ...) ...)
STEENROD> *

NIL
STEENROD> (iter (for eqn in (translate *deg4quad-basis*))
      (for i first 0 then (1+ i)); pow of 2
      (collect
       (iter (for vec in eqn)		; vec => row
	     (collect (expt 2 i)))))
((1 1 1) (2 2 2) (4 4) (8 8) (16 16 16) (32 32 32) (64 64) (128 128)
 (256 256 256) (512 512 512) (1024 1024) (2048 2048) (4096 4096 4096)
 (8192 8192 8192) (16384 16384) (32768 32768) (65536) (131072 131072 131072)
 (262144 262144 262144) (524288 524288) (1048576 1048576) (2097152) (4194304)
 (8388608 8388608 8388608) (16777216 16777216 16777216) (33554432 33554432)
 (67108864 67108864)
 (134217728 134217728 134217728 134217728 134217728 134217728 134217728
  134217728)
 (268435456 268435456 268435456 268435456 268435456 268435456 268435456
  268435456)
 (536870912 536870912 536870912 536870912 536870912 536870912 536870912
  536870912)
 (1073741824 1073741824 1073741824 1073741824 1073741824 1073741824)
 (2147483648 2147483648 2147483648 2147483648 2147483648 2147483648)
 (4294967296 4294967296 4294967296 4294967296 4294967296 4294967296)
 (8589934592 8589934592 8589934592 8589934592 8589934592 8589934592 8589934592
  8589934592 8589934592 8589934592 8589934592)
 (17179869184 17179869184 17179869184 17179869184 17179869184 17179869184
  17179869184 17179869184 17179869184 17179869184 17179869184)
 (34359738368 34359738368 34359738368 34359738368 34359738368 34359738368
  34359738368 34359738368 34359738368 34359738368 34359738368)
 (68719476736 68719476736 68719476736 68719476736 68719476736 68719476736
  68719476736 68719476736 68719476736)
 (137438953472 137438953472 137438953472 137438953472 137438953472 137438953472
  137438953472 137438953472)
 (274877906944 274877906944 274877906944 274877906944 274877906944 274877906944
  274877906944 274877906944)
 (549755813888 549755813888 549755813888 549755813888 549755813888 549755813888
  549755813888 549755813888 549755813888)
 (1099511627776 1099511627776 1099511627776 1099511627776 1099511627776
  1099511627776 1099511627776 1099511627776 1099511627776)
 (2199023255552 2199023255552 2199023255552 2199023255552 2199023255552
  2199023255552 2199023255552 2199023255552 2199023255552)
 (4398046511104 4398046511104 4398046511104 4398046511104 4398046511104
  4398046511104 4398046511104)
 (8796093022208 8796093022208 8796093022208 8796093022208 8796093022208
  8796093022208 8796093022208)
 (17592186044416 17592186044416 17592186044416 17592186044416 17592186044416
  17592186044416 17592186044416)
 (35184372088832 35184372088832 35184372088832 35184372088832 35184372088832
  35184372088832 35184372088832)
 (70368744177664 70368744177664 70368744177664 70368744177664 70368744177664
  70368744177664 70368744177664 70368744177664 70368744177664)
 (140737488355328 140737488355328 140737488355328 140737488355328
  140737488355328 140737488355328 140737488355328)
 (281474976710656 281474976710656 281474976710656 281474976710656
  281474976710656 281474976710656 281474976710656)
 (562949953421312 562949953421312 562949953421312 562949953421312
  562949953421312 562949953421312 562949953421312)
 (1125899906842624 1125899906842624 1125899906842624 1125899906842624
  1125899906842624 1125899906842624 1125899906842624)
 (2251799813685248 2251799813685248 2251799813685248)
 (4503599627370496 4503599627370496 4503599627370496 4503599627370496
  4503599627370496 4503599627370496 4503599627370496 4503599627370496
  4503599627370496 4503599627370496)
 (9007199254740992 9007199254740992 9007199254740992 9007199254740992
  9007199254740992 9007199254740992 9007199254740992 9007199254740992
  9007199254740992 9007199254740992 9007199254740992)
 (18014398509481984 18014398509481984 18014398509481984 18014398509481984
  18014398509481984 18014398509481984 18014398509481984 18014398509481984
  18014398509481984 18014398509481984)
 (36028797018963968 36028797018963968 36028797018963968 36028797018963968
  36028797018963968 36028797018963968 36028797018963968 36028797018963968
  36028797018963968)
 (72057594037927936 72057594037927936 72057594037927936 72057594037927936
  72057594037927936 72057594037927936 72057594037927936 72057594037927936
  72057594037927936)
 (144115188075855872 144115188075855872 144115188075855872 144115188075855872
  144115188075855872 144115188075855872 144115188075855872 144115188075855872
  144115188075855872)
 (288230376151711744 288230376151711744)
 (576460752303423488 576460752303423488 576460752303423488)
 (1152921504606846976 1152921504606846976 1152921504606846976
  1152921504606846976 1152921504606846976 1152921504606846976
  1152921504606846976)
 (2305843009213693952 2305843009213693952 2305843009213693952
  2305843009213693952 2305843009213693952 2305843009213693952
  2305843009213693952 2305843009213693952 2305843009213693952
  2305843009213693952)
 (4611686018427387904 4611686018427387904 4611686018427387904
  4611686018427387904 4611686018427387904 4611686018427387904
  4611686018427387904)
 (9223372036854775808 9223372036854775808 9223372036854775808
  9223372036854775808 9223372036854775808 9223372036854775808
  9223372036854775808 9223372036854775808)
 (18446744073709551616 18446744073709551616 18446744073709551616
  18446744073709551616 18446744073709551616 18446744073709551616
  18446744073709551616)
 (36893488147419103232 36893488147419103232 36893488147419103232
  36893488147419103232 36893488147419103232 36893488147419103232
  36893488147419103232))
; compiling (ITER (FOR EQN ...) ...)
; compiling (ITER (FOR EQN ...) ...)
STEENROD> *MATRIX*

#(7 14 24 80 176 352 128 256 1796 2560 4104 6144 12288 24576 36880 65536 69632
  393216 786432 1048576 2113536 2129920 4259840 25296896 50331648 67108864
  134217728 1073741824 2147483648 4294967296 6442450944 12884901888 25769803776
  94489288704 188978561088 377957130272 618475290624 1099511627904
  2199023255552 4947802324992 9895604649984 19791209299968 30786325577728
  61572651155456 123145302310912 246290604622080 633318697598976
  985162418487296 1970324836974592 3940649673949184 7881299347898368
  6755399441055744 45035996273704960 99079191802150912 180143985094819840
  324259173170675712 648518346341351424 1297036692682702848 576460752303423488
  1729382256910270464 8070450532247928832 23058430092136939520
  32281802128991715328 73786976294838206464 129127208515966861312
  258254417031933722624 0 16384 0 512 0 18432 0 32768 0 0 0 32 512 1156 0 0 0
  65536 0 0 0 0 0 0 131072 32840 0 0)
; compiling (ITER (FOR EQN ...) ...)
STEENROD> (translate *deg4quad-basis*)

((8 0 79) (10 1 91) (14 2) (35 77) (34 3 91) (37 4 79) (45 5) (69 78) (8 9 79)
 (10 11 71) (14 16) (35 33) (67 20 71) (73 21 91) (83 22) (90 23) (NIL)
 (34 36 91) (37 40 71) (45 48) (69 53) (NIL) (NIL) (67 70 71) (73 76 79)
 (83 86) (90 93) (25 8 27 0 63 79 65 66) (29 10 31 1 43 91 82 28)
 (33 14 8 35 2 0 77 79) (93 10 39 1 41 91) (12 51 44 14 46 2)
 (17 46 50 35 51 77) (32 34 6 27 26 63 3 43 91 82 28)
 (60 37 7 31 30 64 4 63 79 65 66) (42 45 34 53 35 55 77 5 3 41 91)
 (72 37 23 39 38 78 4 77 79) (43 92 82 45 13 46 65 5) (49 85 89 69 18 51 79 78)
 (6 8 26 9 63 64 79 65 66) (7 10 30 11 43 32 82 71 59)
 (53 14 8 55 16 9 77 78 79) (23 10 38 11 41 42 71) (12 51 13 14 65 15 16)
 (17 46 18 35 79 19 33) (67 58 57 20 82 71 59) (60 73 62 61 21 43 91 82 28)
 (83 67 69 68 22 20 71) (72 73 75 74 21 41 91) (80 81 82 83 85 84 22)
 (87 88 89 90 92 91 23) (42 28 24) (32 25 34 26 27 36 43 91 82 28)
 (60 29 37 30 31 40 43 32 82 71 59) (42 33 45 34 55 35 48 36 41 91)
 (72 93 37 38 39 40 41 42 71) (43 92 82 44 45 65 46 47 48)
 (49 85 89 50 69 79 51 52 53) (59 54) (55 66 56) (67 57 58 70 82 71 59)
 (60 73 61 62 76 63 64 79 65 66) (83 67 68 69 86 70 71)
 (72 73 74 75 76 77 78 79) (80 81 82 83 84 85 86) (87 88 89 90 91 92 93))
STEENROD> (length *all-things*)
94
; compiling (ITER (FOR EQN ...) ...)
; compiling (ITER (FOR EQN ...) ...)
STEENROD> *MATRIX*

#(529501868205946516282 18 32 112 240 480 128 256 2310 3072 5132 7168 12288
  24576 38936 65536 71680 393216 786432 1048576 2121728 2146304 4292608
  25362432 50331648 67108864 134217728 1073741824 2147483648 4294967296
  6442450944 12884901888 25769803776 94489292800 188978561120 377957134384
  618475290624 1099511627968 2199023255552 4947802324992 9895604649984
  19791209299968 30786325577728 61572651155456 123145302310912 246290604622208
  633318697598976 985162418487296 1970324836974592 3940649673949184
  7881299347898368 6755399441055744 45035996273704960 99079191802150912
  180143985094819840 324259173170675712 648518346341351424 1297036692682702848
  576460752303423488 1729382256910270464 8070450532247928832
  23058430092136939520 32281802128991715328 73786976294838206464
  129127208515966861312 258254417031933722624 0 24576 0 768 0 27648 0 49152 0 0
  0 48 768 1734 0 0 0 98304 0 0 0 0 0 0 196608 49260 0 0)
; compiling (DEFPARAMETER *MATRIX* ...)
STEENROD> (aref *MATRIX* 93)

0
STEENROD> (aref *MATRIX* 90)
0
; compiling (ITER (FOR EQN ...) ...)
; compiling (ITER (FOR EQN ...) ...)
STEENROD> (incf (aref *MATRIX* 90))

32770
; compiling (DEFPARAMETER *MATRIX* ...)
; compiling (ITER (FOR EQN ...) ...)
STEENROD> *MATRIX*

#(1 2 4 16 32 64 0 0 257 256 514 512 0 0 1028 0 1024 0 0 0 4096 8192 16384
  32768 0 0 0 0 0 0 0 0 0 2048 16 2056 0 32 0 0 0 0 0 0 0 64 0 0 0 0 0 0 0 0 0
  0 0 0 0 0 0 0 0 0 0 0 0 4096 0 128 0 4608 0 8192 0 0 0 8 128 289 0 0 0 16384
  0 0 0 0 0 0 32768 8210 0 0)
; compiling (ITER (FOR EQN ...) ...)
; compiling (DEFPARAMETER *MATRIX* ...)
; compiling (ITER (FOR EQN ...) ...)
; compiling (ITER (FOR EQN ...) ...)
; compiling (ITER (FOR EQN ...) ...)
; compiling (ITER (FOR EQN ...) ...)
; compiling (ITER (FOR EQN ...) ...)
; compiling (DEFPARAMETER *MATRIX* ...)
; compiling (ITER (FOR EQN ...) ...)
STEENROD> *MATRIX*

#(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
; compiling (ITER (FOR EQN ...) ...)
; compiling (ITER (FOR EQN ...) ...)
STEENROD> (translate *deg4quad-basis*)

((8 0 79) (10 1 91) (14 2) (35 77) (34 3 91) (37 4 79) (45 5) (69 78) (8 9 79)
 (10 11 71) (14 16) (35 33) (67 20 71) (73 21 91) (83 22) (90 23) (NIL)
 (34 36 91) (37 40 71) (45 48) (69 53) (NIL) (NIL) (67 70 71) (73 76 79)
 (83 86) (90 93) (25 8 27 0 63 79 65 66) (29 10 31 1 43 91 82 28)
 (33 14 8 35 2 0 77 79) (93 10 39 1 41 91) (12 51 44 14 46 2)
 (17 46 50 35 51 77) (32 34 6 27 26 63 3 43 91 82 28)
 (60 37 7 31 30 64 4 63 79 65 66) (42 45 34 53 35 55 77 5 3 41 91)
 (72 37 23 39 38 78 4 77 79) (43 92 82 45 13 46 65 5) (49 85 89 69 18 51 79 78)
 (6 8 26 9 63 64 79 65 66) (7 10 30 11 43 32 82 71 59)
 (53 14 8 55 16 9 77 78 79) (23 10 38 11 41 42 71) (12 51 13 14 65 15 16)
 (17 46 18 35 79 19 33) (67 58 57 20 82 71 59) (60 73 62 61 21 43 91 82 28)
 (83 67 69 68 22 20 71) (72 73 75 74 21 41 91) (80 81 82 83 85 84 22)
 (87 88 89 90 92 91 23) (42 28 24) (32 25 34 26 27 36 43 91 82 28)
 (60 29 37 30 31 40 43 32 82 71 59) (42 33 45 34 55 35 48 36 41 91)
 (72 93 37 38 39 40 41 42 71) (43 92 82 44 45 65 46 47 48)
 (49 85 89 50 69 79 51 52 53) (59 54) (55 66 56) (67 57 58 70 82 71 59)
 (60 73 61 62 76 63 64 79 65 66) (83 67 68 69 86 70 71)
 (72 73 74 75 76 77 78 79) (80 81 82 83 84 85 86) (87 88 89 90 91 92 93))
STEENROD> (nth 16 (translate *deg4quad-basis*))
(NIL)
STEENROD> (nth 16 *deg4quad-basis*)
(:STEP (1 0 0 1 2))
STEENROD> (get-pos (nth 16 *deg4quad-basis*))
28
STEENROD> *deg4quad-basis*
((+ (:STEP (0 2 0 1 0)) (:STEP (0 1 2 1 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (1 2 1 0 0)) (:STEP (1 0 2 0 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (0 2 0 1 2)) (:STEP (0 1 2 1 2)))
 (+ (:STEP (1 2 1 0 2)) (:STEP (1 0 2 0 2)))
 (+ (:STEP (2 0 0 1 0)) (:STEP (1 0 2 1 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (2 1 1 0 0)) (:STEP (0 1 2 0 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (2 0 0 1 2)) (:STEP (1 0 2 1 2)))
 (+ (:STEP (2 1 1 0 2)) (:STEP (0 1 2 0 2)))
 (+ (:STEP (0 2 0 1 0)) (:STEP (2 1 0 1 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (1 2 1 0 0)) (:STEP (2 0 1 0 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (0 2 0 1 2)) (:STEP (2 1 0 1 2)))
 (+ (:STEP (1 2 1 0 2)) (:STEP (2 0 1 0 2)))
 (+ (:STEP (0 0 2 1 0)) (:STEP (0 2 1 1 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (1 1 2 0 0)) (:STEP (1 2 0 0 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (0 0 2 1 2)) (:STEP (0 2 1 1 2)))
 (+ (:STEP (1 1 2 0 2)) (:STEP (1 2 0 0 2))) (:STEP (1 0 0 1 2))
 (+ (:STEP (2 0 0 1 0)) (:STEP (1 2 0 1 0)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (2 1 1 0 0)) (:STEP (0 2 1 0 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (2 0 0 1 2)) (:STEP (1 2 0 1 2)))
 (+ (:STEP (2 1 1 0 2)) (:STEP (0 2 1 0 2))) (:STEP (0 0 1 1 2))
 (:STEP (0 1 0 1 2))
 (+ (:STEP (0 0 2 1 0)) (:STEP (2 0 1 1 0)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (1 1 2 0 0)) (:STEP (2 1 0 0 0)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (0 0 2 1 2)) (:STEP (2 0 1 1 2)))
 (+ (:STEP (1 1 2 0 2)) (:STEP (2 1 0 0 2)))
 (+ (:STEP (2 0 1 0 1)) (:STEP (0 2 0 1 0)) (:STEP (1 2 1 0 1))
    (:STEP (0 1 2 1 0)) (:STEP (1 0 2 0 1)) (:STEP (0 1 0 2 0))
    (:STEP (1 0 1 2 1)) (:STEP (0 1 0 1 2)))
 (+ (:STEP (2 1 0 0 1)) (:STEP (1 2 1 0 0)) (:STEP (0 2 0 0 1))
    (:STEP (1 0 2 0 0)) (:STEP (0 0 2 0 1)) (:STEP (1 0 0 2 0))
    (:STEP (0 0 1 2 1)) (:STEP (1 0 0 1 2)))
 (+ (:STEP (2 0 1 0 2)) (:STEP (0 2 0 1 2)) (:STEP (0 2 0 1 0))
    (:STEP (1 2 1 0 2)) (:STEP (0 1 2 1 2)) (:STEP (0 1 2 1 0))
    (:STEP (1 0 2 0 2)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (2 1 0 0 2)) (:STEP (1 2 1 0 0)) (:STEP (0 2 0 0 2))
    (:STEP (1 0 2 0 0)) (:STEP (0 0 2 0 2)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (2 0 2 0 1)) (:STEP (0 2 0 2 0)) (:STEP (2 0 1 2 1))
    (:STEP (0 2 0 1 2)) (:STEP (1 2 1 2 1)) (:STEP (0 1 2 1 2)))
 (+ (:STEP (2 1 2 1 0)) (:STEP (1 2 1 2 1)) (:STEP (2 1 0 2 0))
    (:STEP (1 2 1 0 2)) (:STEP (0 2 0 2 0)) (:STEP (1 0 2 0 2)))
 (+ (:STEP (0 0 1 0 1)) (:STEP (2 0 0 1 0)) (:STEP (0 2 1 0 1))
    (:STEP (1 2 1 0 1)) (:STEP (1 0 1 0 1)) (:STEP (1 0 2 0 1))
    (:STEP (1 0 2 1 0)) (:STEP (0 0 2 0 1)) (:STEP (1 0 0 2 0))
    (:STEP (0 0 1 2 1)) (:STEP (1 0 0 1 2)))
 (+ (:STEP (1 1 0 0 1)) (:STEP (2 1 1 0 0)) (:STEP (1 2 0 0 1))
    (:STEP (0 2 0 0 1)) (:STEP (0 1 0 0 1)) (:STEP (0 1 2 0 1))
    (:STEP (0 1 2 0 0)) (:STEP (1 0 2 0 1)) (:STEP (0 1 0 2 0))
    (:STEP (1 0 1 2 1)) (:STEP (0 1 0 1 2)))
 (+ (:STEP (0 0 1 0 2)) (:STEP (2 0 0 1 2)) (:STEP (2 0 0 1 0))
    (:STEP (0 2 1 0 2)) (:STEP (1 2 1 0 2)) (:STEP (1 0 1 0 2))
    (:STEP (1 0 2 0 2)) (:STEP (1 0 2 1 2)) (:STEP (1 0 2 1 0))
    (:STEP (0 0 2 0 2)) (:STEP (1 0 0 2 0)))
 (+ (:STEP (1 1 0 0 2)) (:STEP (2 1 1 0 0)) (:STEP (1 2 0 0 2))
    (:STEP (0 2 0 0 2)) (:STEP (0 1 0 0 2)) (:STEP (0 1 2 0 2))
    (:STEP (0 1 2 0 0)) (:STEP (1 0 2 0 2)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (0 0 2 0 1)) (:STEP (2 0 0 2 0)) (:STEP (0 0 1 2 1))
    (:STEP (2 0 0 1 2)) (:STEP (0 2 1 2 1)) (:STEP (1 2 1 2 1))
    (:STEP (1 0 1 2 1)) (:STEP (1 0 2 1 2)))
 (+ (:STEP (1 1 2 1 0)) (:STEP (2 1 1 2 1)) (:STEP (1 1 0 2 0))
    (:STEP (2 1 1 0 2)) (:STEP (1 2 0 2 0)) (:STEP (0 2 0 2 0))
    (:STEP (0 1 0 2 0)) (:STEP (0 1 2 0 2)))
 (+ (:STEP (0 2 1 0 1)) (:STEP (0 2 0 1 0)) (:STEP (1 0 1 0 1))
    (:STEP (2 1 0 1 0)) (:STEP (1 0 2 0 1)) (:STEP (0 1 2 0 1))
    (:STEP (0 1 0 2 0)) (:STEP (1 0 1 2 1)) (:STEP (0 1 0 1 2)))
 (+ (:STEP (1 2 0 0 1)) (:STEP (1 2 1 0 0)) (:STEP (0 1 0 0 1))
    (:STEP (2 0 1 0 0)) (:STEP (0 0 2 0 1)) (:STEP (0 0 1 0 1))
    (:STEP (0 0 1 2 1)) (:STEP (0 0 1 2 0)) (:STEP (0 0 1 1 2)))
 (+ (:STEP (0 2 1 0 2)) (:STEP (0 2 0 1 2)) (:STEP (0 2 0 1 0))
    (:STEP (1 0 1 0 2)) (:STEP (2 1 0 1 2)) (:STEP (2 1 0 1 0))
    (:STEP (1 0 2 0 2)) (:STEP (0 1 2 0 2)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (1 2 0 0 2)) (:STEP (1 2 1 0 0)) (:STEP (0 1 0 0 2))
    (:STEP (2 0 1 0 0)) (:STEP (0 0 2 0 2)) (:STEP (0 0 1 0 2))
    (:STEP (0 0 1 2 0)))
 (+ (:STEP (2 0 2 0 1)) (:STEP (0 2 0 2 0)) (:STEP (0 2 1 2 1))
    (:STEP (0 2 0 1 2)) (:STEP (1 0 1 2 1)) (:STEP (2 1 0 2 1))
    (:STEP (2 1 0 1 2)))
 (+ (:STEP (2 1 2 1 0)) (:STEP (1 2 1 2 1)) (:STEP (1 2 0 2 0))
    (:STEP (1 2 1 0 2)) (:STEP (0 1 0 2 0)) (:STEP (2 0 1 2 0))
    (:STEP (2 0 1 0 2)))
 (+ (:STEP (0 0 2 1 0)) (:STEP (2 1 1 0 1)) (:STEP (0 1 1 0 1))
    (:STEP (0 2 1 1 0)) (:STEP (0 0 1 2 1)) (:STEP (0 0 1 2 0))
    (:STEP (0 0 1 1 2)))
 (+ (:STEP (1 1 0 0 1)) (:STEP (1 1 2 0 0)) (:STEP (2 0 0 0 1))
    (:STEP (1 0 0 0 1)) (:STEP (1 2 0 0 0)) (:STEP (0 0 2 0 1))
    (:STEP (1 0 0 2 0)) (:STEP (0 0 1 2 1)) (:STEP (1 0 0 1 2)))
 (+ (:STEP (0 0 2 1 2)) (:STEP (0 0 2 1 0)) (:STEP (2 1 1 0 2))
    (:STEP (0 1 1 0 2)) (:STEP (0 2 1 1 2)) (:STEP (0 2 1 1 0))
    (:STEP (0 0 1 2 0)))
 (+ (:STEP (1 1 0 0 2)) (:STEP (1 1 2 0 0)) (:STEP (2 0 0 0 2))
    (:STEP (1 0 0 0 2)) (:STEP (1 2 0 0 0)) (:STEP (0 0 2 0 2))
    (:STEP (1 0 0 2 0)))
 (+ (:STEP (0 0 2 2 1)) (:STEP (0 0 2 2 0)) (:STEP (0 0 1 2 1))
    (:STEP (0 0 2 1 2)) (:STEP (2 1 1 2 1)) (:STEP (0 1 1 2 1))
    (:STEP (0 2 1 1 2)))
 (+ (:STEP (1 1 2 2 0)) (:STEP (1 1 2 2 1)) (:STEP (1 1 0 2 0))
    (:STEP (1 1 2 0 2)) (:STEP (2 0 0 2 0)) (:STEP (1 0 0 2 0))
    (:STEP (1 2 0 0 2)))
 (+ (:STEP (0 0 1 0 2)) (:STEP (1 0 0 1 2)) (:STEP (1 0 0 1 0)))
 (+ (:STEP (0 0 1 0 1)) (:STEP (2 0 1 0 1)) (:STEP (2 0 0 1 0))
    (:STEP (1 0 1 0 1)) (:STEP (1 2 1 0 1)) (:STEP (1 2 0 1 0))
    (:STEP (0 0 2 0 1)) (:STEP (1 0 0 2 0)) (:STEP (0 0 1 2 1))
    (:STEP (1 0 0 1 2)))
 (+ (:STEP (1 1 0 0 1)) (:STEP (2 1 0 0 1)) (:STEP (2 1 1 0 0))
    (:STEP (0 1 0 0 1)) (:STEP (0 2 0 0 1)) (:STEP (0 2 1 0 0))
    (:STEP (0 0 2 0 1)) (:STEP (0 0 1 0 1)) (:STEP (0 0 1 2 1))
    (:STEP (0 0 1 2 0)) (:STEP (0 0 1 1 2)))
 (+ (:STEP (0 0 1 0 2)) (:STEP (2 0 1 0 2)) (:STEP (2 0 0 1 2))
    (:STEP (2 0 0 1 0)) (:STEP (1 0 1 0 2)) (:STEP (1 2 1 0 2))
    (:STEP (1 2 0 1 2)) (:STEP (1 2 0 1 0)) (:STEP (0 0 2 0 2))
    (:STEP (1 0 0 2 0)))
 (+ (:STEP (1 1 0 0 2)) (:STEP (2 1 0 0 2)) (:STEP (2 1 1 0 0))
    (:STEP (0 1 0 0 2)) (:STEP (0 2 0 0 2)) (:STEP (0 2 1 0 0))
    (:STEP (0 0 2 0 2)) (:STEP (0 0 1 0 2)) (:STEP (0 0 1 2 0)))
 (+ (:STEP (0 0 2 0 1)) (:STEP (2 0 0 2 0)) (:STEP (0 0 1 2 1))
    (:STEP (2 0 1 2 1)) (:STEP (2 0 0 1 2)) (:STEP (1 0 1 2 1))
    (:STEP (1 2 1 2 1)) (:STEP (1 2 0 2 1)) (:STEP (1 2 0 1 2)))
 (+ (:STEP (1 1 2 1 0)) (:STEP (2 1 1 2 1)) (:STEP (1 1 0 2 0))
    (:STEP (2 1 0 2 0)) (:STEP (2 1 1 0 2)) (:STEP (0 1 0 2 0))
    (:STEP (0 2 0 2 0)) (:STEP (0 2 1 2 0)) (:STEP (0 2 1 0 2)))
 (+ (:STEP (0 0 1 1 2)) (:STEP (0 0 1 1 0)))
 (+ (:STEP (1 0 1 0 2)) (:STEP (0 1 0 1 2)) (:STEP (0 1 0 1 0)))
 (+ (:STEP (0 0 2 1 0)) (:STEP (0 1 1 0 1)) (:STEP (2 1 1 0 1))
    (:STEP (2 0 1 1 0)) (:STEP (0 0 1 2 1)) (:STEP (0 0 1 2 0))
    (:STEP (0 0 1 1 2)))
 (+ (:STEP (1 1 0 0 1)) (:STEP (1 1 2 0 0)) (:STEP (1 0 0 0 1))
    (:STEP (2 0 0 0 1)) (:STEP (2 1 0 0 0)) (:STEP (1 0 2 0 1))
    (:STEP (0 1 2 0 1)) (:STEP (0 1 0 2 0)) (:STEP (1 0 1 2 1))
    (:STEP (0 1 0 1 2)))
 (+ (:STEP (0 0 2 1 2)) (:STEP (0 0 2 1 0)) (:STEP (0 1 1 0 2))
    (:STEP (2 1 1 0 2)) (:STEP (2 0 1 1 2)) (:STEP (2 0 1 1 0))
    (:STEP (0 0 1 2 0)))
 (+ (:STEP (1 1 0 0 2)) (:STEP (1 1 2 0 0)) (:STEP (1 0 0 0 2))
    (:STEP (2 0 0 0 2)) (:STEP (2 1 0 0 0)) (:STEP (1 0 2 0 2))
    (:STEP (0 1 2 0 2)) (:STEP (0 1 0 2 0)))
 (+ (:STEP (0 0 2 2 1)) (:STEP (0 0 2 2 0)) (:STEP (0 0 1 2 1))
    (:STEP (0 0 2 1 2)) (:STEP (0 1 1 2 1)) (:STEP (2 1 1 2 1))
    (:STEP (2 0 1 1 2)))
 (+ (:STEP (1 1 2 2 0)) (:STEP (1 1 2 2 1)) (:STEP (1 1 0 2 0))
    (:STEP (1 1 2 0 2)) (:STEP (1 0 0 2 0)) (:STEP (2 0 0 2 0))
    (:STEP (2 1 0 0 2))))
; compiling (DEFUN TRANSLATE ...)

; file: /tmp/filewCD3yt
; in: DEFUN TRANSLATE
;     (MAPCAR
;      (LAMBDA (STEENROD::VEC)
;        (OPTIMA:MATCH STEENROD::VEC
;          ((LIST* :STEP STEENROD::_) (LIST #))
;          ((LIST* + STEENROD::_) (MAPCAR #'STEENROD::GET-POS STEENROD::VEC)))))
; 
; caught WARNING:
;   The function was called with one argument, but wants at least two.

;     (DEFUN STEENROD::TRANSLATE (STEENROD::STEPS)
;       (MAPCAR
;        (LAMBDA (STEENROD::VEC)
;          (OPTIMA:MATCH STEENROD::VEC
;            (# #)
;            (# #)))))
; --> PROGN 
; ==>
;   (SB-IMPL::%DEFUN 'STEENROD::TRANSLATE
;                    (SB-INT:NAMED-LAMBDA STEENROD::TRANSLATE
;                        (STEENROD::STEPS)
;                      (BLOCK STEENROD::TRANSLATE (MAPCAR (LAMBDA # #))))
;                    NIL 'NIL (SB-C:SOURCE-LOCATION))
; 
; caught STYLE-WARNING:
;   The variable STEPS is defined but never used.
; 
; compilation unit finished
;   caught 1 WARNING condition
;   caught 1 STYLE-WARNING condition
; compiling (DEFUN TRANSLATE ...)
; compiling (DEFPARAMETER *MATRIX* ...)
; compiling (ITER (FOR EQN ...) ...)
STEENROD> (nth 16 (translate *deg4quad-basis*))

(28)
STEENROD> (nth 17 (translate *deg4quad-basis*))
(NIL 34 36 91)
STEENROD> (nth 17 *deg4quad-basis*)
(+ (:STEP (2 0 0 1 0)) (:STEP (1 2 0 1 0)) (:STEP (1 0 0 2 0)))
; compiling (DEFUN TRANSLATE ...)
; compiling (DEFPARAMETER *MATRIX* ...)
; compiling (ITER (FOR EQN ...) ...)
STEENROD> *MATRIX*

#(671088641 1342177282 2684354564 42949672976 85899345952 171798691904
  558345748480 1116691496960 2749450158337 2748779069696 5498900316674
  5497558139392 8798240505856 8933531975680 10997800633348 8796093022208
  10995116278784 17596481011712 17867063951360 17592186044416 175921860448256
  351843720896512 703687441793024 1130366672863232 2251799813685248
  4503599761588224 4504157973118976 4503608351522816 6825777043668992
  9007199523176448 9008315946237952 9007216703045632 13511906983673856
  18031991232399360 22518041086656528 18032029887105032 22517998136983552
  45036082173313056 36033263784951808 36028866812182528 45035996273967104
  54329103985147904 56299427748380672 85640007473168384 72057596185411584
  90072164346626112 72075330105376768 72057594037927936 90071992547934208
  144115462953762816 144115192370823168 144124265489235968 144115188075855872
  144117421459898368 288230376151711744 594477384195899392 576460752303423488
  1152956688978935808 1152956688978935808 1450195363899113472
  2314920594392481792 2305913377957871616 2305913377957871616
  2305843584873529344 2305843576149377024 2377910103853498368
  2882304328591212544 5764783444903071744 4611826755915743232
  4755942218870554752 5764607523042623488 5809824938735178240
  9259682377569927168 11529566889806143488 9223653511831486464
  9223653511831486464 11529215046085246976 9223374343789084680
  9223374579475415168 11673350936574558497 18447307023662972928
  18447307023662972928 19685903720115077120 23059133779612286976
  18447307023662972928 18591422486616735744 23058430092170493952
  36894614047325945856 36894614047325945856 37038729510279708672
  36894614047393087488 36917483933475676178 36966671778802827264
  36929516945578917888)
; compiling (INCF (AREF *MATRIX ...) ...)

; file: /tmp/file7NWpsH
; in: INCF (AREF *MATRIX (GET-POS '(:STEP 0 1 0 2 0)))
;     (INCF (AREF STEENROD::*MATRIX (STEENROD::GET-POS '(:STEP 0 1 0 2 0)))
;           (EXPT 2 (LENGTH STEENROD::*ALL-THINGS*)))
; ==>
;   (LET* ((#:*MATRIX2 STEENROD::*MATRIX)
;          (#:G1 (STEENROD::GET-POS '(:STEP 0 1 0 2 0)))
;          (#:G3 (EXPT 2 (LENGTH STEENROD::*ALL-THINGS*)))
;          (#:NEW0 (+ (AREF #:*MATRIX2 #:G1) #:G3)))
;     (FUNCALL #'(SETF AREF) #:NEW0 #:*MATRIX2 #:G1))
; 
; caught WARNING:
;   undefined variable: *MATRIX
; 
; compilation unit finished
;   Undefined variable:
;     *MATRIX
;   caught 1 WARNING condition
; compiling (INCF (AREF *MATRIX* ...) ...)
; compiling (INCF (AREF *MATRIX* ...) ...)
STEENROD> *MATRIX*

#(671088641 1342177282 2684354564 42949672976 85899345952 171798691904
  558345748480 1116691496960 2749450158337 2748779069696 5498900316674
  5497558139392 8798240505856 8933531975680 10997800633348 8796093022208
  10995116278784 17596481011712 17867063951360 17592186044416 175921860448256
  351843720896512 703687441793024 1130366672863232 2251799813685248
  4503599761588224 4504157973118976 4503608351522816 6825777043668992
  9007199523176448 9008315946237952 9007216703045632 13511906983673856
  18031991232399360 22518041086656528 18032029887105032 22517998136983552
  45036082173313056 36033263784951808 36028866812182528 45035996273967104
  54329103985147904 56299427748380672 85640007473168384 72057596185411584
  90072164346626112 72075330105376768 72057594037927936 90071992547934208
  144115462953762816 144115192370823168 144124265489235968 144115188075855872
  144117421459898368 288230376151711744 594477384195899392 576460752303423488
  1152956688978935808 1152956688978935808 1450195363899113472
  2314920594392481792 2305913377957871616 2305913377957871616
  2305843584873529344 2305843576149377024 2377910103853498368
  2882304328591212544 5764783444903071744 4611826755915743232
  4755942218870554752 5764607523042623488 5809824938735178240
  9259682377569927168 11529566889806143488 9223653511831486464
  9223653511831486464 11529215046085246976 9223374343789084680
  9223374579475415168 19807040640239435334960546081 18447307023662972928
  18447307023662972928 19685903720115077120 23059133779612286976
  18447307023662972928 18591422486616735744 23058430092170493952
  36894614047325945856 36894614047325945856 37038729510279708672
  36894614047393087488 36917483933475676178 36966671778802827264
  36929516945578917888)
STEENROD> (ash 1 (- 1 1))
1
; compiling (DEFUN N-BIT ...)
STEENROD> (n-bit (expt 2 3))
; Evaluation aborted on #<SB-INT:SIMPLE-PROGRAM-ERROR "invalid number of arguments: ~S" {1008F92C43}>.
STEENROD> (n-bit (expt 2 3) 3)

0
; compiling (DEFUN N-BIT ...)
STEENROD> (n-bit (expt 2 3) 3)

1
; compiling (DEFUN GAUSS-ELIM ...)

; file: /tmp/filezNk9zD
; in: DEFUN GAUSS-ELIM
;     (ITERATE:ITER
;       (ITERATE:FOR STEENROD::I STEENROD::FROM 0 STEENROD::BELOW
;        (LENGTH STEENROD::*ALL-THINGS*))
;       (ITERATE:FOR STEENROD::PIVOT-POS
;        (POSITION-IF (LAMBDA (STEENROD::X) (= # 1)) STEENROD::MTX :START
;                     STEENROD::I))
;       (WHEN STEENROD::PIVOT-POS
;         (ROTATEF (AREF STEENROD::MTX STEENROD::I)
;                  (AREF STEENROD::MTX STEENROD::PIVOT-POS))
;         (ITERATE:ITER
;           (ITERATE:FOR STEENROD::J STEENROD::FROM STEENROD::I STEENROD::BELOW
;            (LENGTH STEENROD::*ALL-THINGS*))
;           (IF (= # 1)
;               (SETF #)))))
; 
; caught ERROR:
;   during macroexpansion of
;   (ITER
;     (FOR I FROM ...)
;     (FOR PIVOT-POS #)
;     ...).
;   Use *BREAK-ON-SIGNALS* to intercept.
;   
;    Iterate, in (FOR PIVOT-POS
;                 (POSITION-IF (LAMBDA (X) (= (N-BIT X I) 1)) MTX START I)):
;   (POSITION-IF (LAMBDA (X) (= (N-BIT X I) 1)) MTX START I) should be a symbol

;     (DEFUN STEENROD::GAUSS-ELIM (STEENROD::MTX)
;       (ITERATE:ITER
;         (ITERATE:FOR STEENROD::I STEENROD::FROM 0 STEENROD::BELOW
;          (LENGTH STEENROD::*ALL-THINGS*))
;         (ITERATE:FOR STEENROD::PIVOT-POS
;          (POSITION-IF (LAMBDA # #) STEENROD::MTX :START STEENROD::I))
;         (WHEN STEENROD::PIVOT-POS
;           (ROTATEF (AREF STEENROD::MTX STEENROD::I)
;                    (AREF STEENROD::MTX STEENROD::PIVOT-POS))
;           (ITERATE:ITER
;             (ITERATE:FOR STEENROD::J STEENROD::FROM STEENROD::I STEENROD::BELOW #)
;             (IF #
;                 #)))))
; --> PROGN 
; ==>
;   (SB-IMPL::%DEFUN 'STEENROD::GAUSS-ELIM
;                    (SB-INT:NAMED-LAMBDA STEENROD::GAUSS-ELIM
;                        (STEENROD::MTX)
;                      (BLOCK STEENROD::GAUSS-ELIM
;                        (ITERATE:ITER
;                          (ITERATE:FOR STEENROD::I STEENROD::FROM 0
;                           STEENROD::BELOW #)
;                          (ITERATE:FOR STEENROD::PIVOT-POS #)
;                          (WHEN STEENROD::PIVOT-POS # #))))
;                    NIL 'NIL (SB-C:SOURCE-LOCATION))
; 
; caught STYLE-WARNING:
;   The variable MTX is defined but never used.
; 
; compilation unit finished
;   caught 1 ERROR condition
;   caught 1 STYLE-WARNING condition
; compiling (DEFUN GAUSS-ELIM ...)

; file: /tmp/fileVmqW0X
; in: DEFUN GAUSS-ELIM
;     (ITERATE:ITER
;       (ITERATE:FOR STEENROD::I STEENROD::FROM 0 STEENROD::BELOW
;        (LENGTH STEENROD::*ALL-THINGS*))
;       (ITERATE:FOR STEENROD::PIVOT-POS
;        (POSITION-IF (LAMBDA (STEENROD::X) (= # 1)) STEENROD::MTX :START
;                     STEENROD::I))
;       (WHEN STEENROD::PIVOT-POS
;         (ROTATEF (AREF STEENROD::MTX STEENROD::I)
;                  (AREF STEENROD::MTX STEENROD::PIVOT-POS))
;         (ITERATE:ITER
;           (ITERATE:FOR STEENROD::J STEENROD::FROM STEENROD::I STEENROD::BELOW
;            (LENGTH STEENROD::*ALL-THINGS*))
;           (IF (= # 1)
;               (SETF #)))))
; 
; caught ERROR:
;   during macroexpansion of
;   (ITER
;     (FOR I FROM ...)
;     (FOR PIVOT-POS #)
;     ...).
;   Use *BREAK-ON-SIGNALS* to intercept.
;   
;    Iterate, in (FOR PIVOT-POS
;                 (POSITION-IF (LAMBDA (X) (= (N-BIT X I) 1)) MTX START I)):
;   (POSITION-IF (LAMBDA (X) (= (N-BIT X I) 1)) MTX START I) should be a symbol

;     (DEFUN STEENROD::GAUSS-ELIM (STEENROD::MTX)
;       (ITERATE:ITER
;         (ITERATE:FOR STEENROD::I STEENROD::FROM 0 STEENROD::BELOW
;          (LENGTH STEENROD::*ALL-THINGS*))
;         (ITERATE:FOR STEENROD::PIVOT-POS
;          (POSITION-IF (LAMBDA # #) STEENROD::MTX :START STEENROD::I))
;         (WHEN STEENROD::PIVOT-POS
;           (ROTATEF (AREF STEENROD::MTX STEENROD::I)
;                    (AREF STEENROD::MTX STEENROD::PIVOT-POS))
;           (ITERATE:ITER
;             (ITERATE:FOR STEENROD::J STEENROD::FROM STEENROD::I STEENROD::BELOW #)
;             (IF #
;                 #)))))
; --> PROGN 
; ==>
;   (SB-IMPL::%DEFUN 'STEENROD::GAUSS-ELIM
;                    (SB-INT:NAMED-LAMBDA STEENROD::GAUSS-ELIM
;                        (STEENROD::MTX)
;                      (BLOCK STEENROD::GAUSS-ELIM
;                        (ITERATE:ITER
;                          (ITERATE:FOR STEENROD::I STEENROD::FROM 0
;                           STEENROD::BELOW #)
;                          (ITERATE:FOR STEENROD::PIVOT-POS #)
;                          (WHEN STEENROD::PIVOT-POS # #))))
;                    NIL 'NIL (SB-C:SOURCE-LOCATION))
; 
; caught STYLE-WARNING:
;   The variable MTX is defined but never used.
; 
; compilation unit finished
;   caught 1 ERROR condition
;   caught 1 STYLE-WARNING condition
; compiling (DEFUN GAUSS-ELIM ...)

; file: /tmp/fileWQ8mNE
; in: DEFUN GAUSS-ELIM
;     (ITERATE:ITER
;       (ITERATE:FOR STEENROD::I STEENROD::FROM 0 STEENROD::BELOW
;        (LENGTH STEENROD::*ALL-THINGS*))
;       (ITERATE:FOR STEENROD::PIVOT-POS =
;        (POSITION-IF (LAMBDA (STEENROD::X) (= # 1)) STEENROD::MTX :START
;                     STEENROD::I))
;       (WHEN STEENROD::PIVOT-POS
;         (ROTATEF (AREF STEENROD::MTX STEENROD::I)
;                  (AREF STEENROD::MTX STEENROD::PIVOT-POS))
;         (ITERATE:ITER
;           (ITERATE:FOR STEENROD::J STEENROD::FROM STEENROD::I STEENROD::BELOW
;            (LENGTH STEENROD::*ALL-THINGS*))
;           (IF (= # 1)
;               (SETF #)))))
; --> LET* BLOCK TAGBODY PROGN IF PROGN LET* BLOCK TAGBODY PROGN IF = 
; ==>
;   (STEENROD::N-BIT (AREF STEENROD::MTX STEENROD::J))
; 
; caught STYLE-WARNING:
;   The function was called with one argument, but wants exactly two.
; 
; compilation unit finished
;   caught 1 STYLE-WARNING condition
; compiling (DEFUN GAUSS-ELIM ...)

; file: /tmp/filerlNhHy
; in: DEFUN GAUSS-ELIM
;     (ITERATE:ITER
;       (ITERATE:FOR STEENROD::I STEENROD::FROM 0 STEENROD::BELOW
;        (LENGTH STEENROD::*ALL-THINGS*))
;       (ITERATE:FOR STEENROD::PIVOT-POS =
;        (POSITION-IF (LAMBDA (STEENROD::X) (= # 1)) STEENROD::MTX :START
;                     STEENROD::I))
;       (WHEN STEENROD::PIVOT-POS
;         (ROTATEF (AREF STEENROD::MTX STEENROD::I)
;                  (AREF STEENROD::MTX STEENROD::PIVOT-POS))
;         (ITERATE:ITER
;           (ITERATE:FOR STEENROD::J STEENROD::FROM STEENROD::I STEENROD::BELOW
;            (LENGTH STEENROD::*ALL-THINGS*))
;           (IF (= # 1)
;               (SETF #)))))
; --> LET* BLOCK TAGBODY PROGN IF PROGN LET* BLOCK TAGBODY PROGN IF = 
; ==>
;   (STEENROD::N-BIT (AREF STEENROD::MTX STEENROD::J))
; 
; caught STYLE-WARNING:
;   The function was called with one argument, but wants exactly two.
; 
; compilation unit finished
;   caught 1 STYLE-WARNING condition
; compiling (DEFUN GAUSS-ELIM ...)
STEENROD> (GAUSS-ELIM *MATRIX*)

NIL
STEENROD> *MATRIX
; Evaluation aborted on #<UNBOUND-VARIABLE *MATRIX {10079C3C73}>.
STEENROD> *MATRIX*
#(671088641 1342177282 2684354564 18032029887105032 22518041086656528
  85899345952 171798691904 4755942218870554752 2749450158337 5498900316674
  10997800633348 18031991232399360 175921860448256 351843720896512
  703687441793024 1130366672863232 6825777043668992 22518041086656528
  45036082173313056 90072164346626112 144117421459898368 1450195363899113472
  2882304328591212544 5764783444903071744 11529566889806143488
  23059133779612286976 36894618514159075328 4503608351522816 9007199523176448
  10997800633348 9012698155057666 72057596185411584 17596481011712 558345748480
  9008315946237952 22518590842470416 36033263784951808 85640557228982272
  17867063951360 67841560993202706 45041579731451936 644304598219489842
  70093446706496050 216199451713208320 17592186044416 1152956688978935808
  142239145556050482 4611826755915743232 142239145556574834
  18447307023662972928 36894614047325945856 142239145556574834
  142239145556574834 142239145556574834 286363404603359858 2592206413817053810
  216199451713208320 144115188075855872 288230376151711744 576460752303423488
  1152956688978935808 2592206413817053810 5764783444903071744
  11815578450671829618 18447307023662972928 36894614047325945856
  3168669365814822775 216199451713208320 216199451713208320 2592206413817053810
  2592206413817053810 8356989858720125554 2592206413951271538
  2592206413817053810 11815578450671829618 11815578450671829618
  11815578450688615026 12392041402535382654 18156824846902629106
  19807040640958125801072371575 144133055139807232 2592206413817053810
  22192470126458962546 2592206413951271538 18447307023662972928
  18591440078802780160 24212090468599615488 144132784556867584
  2592206413951271538 37038747102465753088 2592206413817053810
  39486820461143007858 39486820461142999666 39486820461210141298)
; compiling (DEFUN GAUSS-ELIM ...)
; compiling (INCF (AREF *MATRIX* ...) ...)
STEENROD> (GAUSS-ELIM *MATRIX*)

NIL
STEENROD> *MATRIX*
#(0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3168669365814822775
  216199451713208320 216199451713208320 2592206413817053810 2592206413817053810
  8356989858720125554 2592206413951271538 2592206413817053810
  11815578450671829618 11815578450671829618 11815578450688615026
  12392041402535382654 18156824846902629106 39614081269524210199458359159
  144133055139807232 2592206413817053810 22192470126458962546
  2592206413951271538 18447307023662972928 18591440078802780160
  24212090468599615488 144132784556867584 2592206413951271538
  37038747102465753088 2592206413817053810 39486820461143007858
  39486820461142999666 39486820461210141298)
; compiling (DEFUN GAUSS-ELIM ...)
; compiling (ITER (FOR EQN ...) ...)
; compiling (DEFPARAMETER *MATRIX* ...)
; compiling (ITER (FOR EQN ...) ...)
STEENROD> *MATRIX*

#(671088641 1342177282 2684354564 42949672976 85899345952 171798691904
  558345748480 1116691496960 2749450158337 2748779069696 5498900316674
  5497558139392 8798240505856 8933531975680 10997800633348 8796093022208
  10995116278784 17596481011712 17867063951360 17592186044416 175921860448256
  351843720896512 703687441793024 1130366672863232 2251799813685248
  4503599761588224 4504157973118976 4503608351522816 6825777043668992
  9007199523176448 9008315946237952 9007216703045632 13511906983673856
  18031991232399360 22518041086656528 18032029887105032 22517998136983552
  45036082173313056 36033263784951808 36028866812182528 45035996273967104
  54329103985147904 56299427748380672 85640007473168384 72057596185411584
  90072164346626112 72075330105376768 72057594037927936 90071992547934208
  144115462953762816 144115192370823168 144124265489235968 144115188075855872
  144117421459898368 288230376151711744 594477384195899392 576460752303423488
  1152956688978935808 1152956688978935808 1450195363899113472
  2314920594392481792 2305913377957871616 2305913377957871616
  2305843584873529344 2305843576149377024 2377910103853498368
  2882304328591212544 5764783444903071744 4611826755915743232
  4755942218870554752 5764607523042623488 5809824938735178240
  9259682377569927168 11529566889806143488 9223653511831486464
  9223653511831486464 11529215046085246976 9223374343789084680
  9223374579475415168 11673350936574558497 18447307023662972928
  18447307023662972928 19685903720115077120 23059133779612286976
  18447307023662972928 18591422486616735744 23058430092170493952
  36894614047325945856 36894614047325945856 37038729510279708672
  36894614047393087488 36917483933475676178 36966671778802827264
  36929516945578917888)
; compiling (DEFUN GAUSS-ELIM ...)
STEENROD> (GAUSS-ELIM *MATRIX*)

NIL
STEENROD> *MATRIX*
#(1 2 4 36028797018963976 36028797018963984 36028797018964000 36028797018964032
  128 36028797018964224 512 36028797018964992 2048 5764607523034238976 8192
  23058430092136955904 36929516944438099968 65536 131072 36028797019226112
  524288 1048576 2097152 4194304 5764607523042623488 16777216
  23058430092170493952 36929516944505176064 134217728 268435456 536870912
  1073741824 2147483648 4294967296 8589934592 17179869184 36028831378702336
  36028865738440704 137438953472 274877906944 549755813888 1099511627776
  36030996042219520 4398046511104 8796093022208 17592186044416
  1152956688978935808 70368744177664 4611826755915743232 281474976710656
  18447307023662972928 36894614047325945856 2251799813685248 4503599627370496
  9007199254740992 18014398509481984 0 72057594037927936 144115188075855872
  288230376151711744 576460752303423488 0 2305843009213693952 0
  9223372036854775808 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
  0)
STEENROD> (iter (for x in-array *MATRIX*) (max x))
; Evaluation aborted on #<SIMPLE-ERROR "Iterate~@[, in ~a~]:~%Unknown keyword ~a" {10087D9453}>.
STEENROD> (iter (for x in *MATRIX*) (max x))
; Evaluation aborted on #<TYPE-ERROR expected-type: LIST datum: #<(SIMPLE-VECTOR 94) {10082BA6BF}>>.
STEENROD> (iter (for x in-seq *MATRIX*) (max x))
; Evaluation aborted on #<SIMPLE-ERROR "Iterate~@[, in ~a~]:~%Unknown keyword ~a" {1008BFB513}>.
STEENROD> (iter (for x in-sequence *MATRIX*) (max x))
NIL
STEENROD> (iter (for x in-sequence *MATRIX*) (maximizing x))
36929516944505176064
STEENROD> (iter (for x in-sequence *MATRIX*) (maximizing x))
36929516944505176064
STEENROD> (format t "~x" *)
20080000004000000
NIL
STEENROD> (iter (for x in-sequence *MATRIX*) (maximizing x))
36929516944505176064
STEENROD> (format t "~b" *)
100000000010000000000000000000000000000100000000000000000000000000
NIL
STEENROD> (format t "~{~b~%~}" *mtx*)
; Evaluation aborted on #<UNBOUND-VARIABLE *MTX* {1009CF8FD3}>.
STEENROD> (format t "~{~b~%~}" *MATRIX*x*)
; Evaluation aborted on #<UNBOUND-VARIABLE *MATRIX*X* {10035CCCE3}>.
STEENROD> (format t "~{~b~%~}" *MATRIX**)
; Evaluation aborted on #<UNBOUND-VARIABLE *MATRIX** {100468A983}>.
STEENROD> (format t "~{~b~%~}" *MATRIX*)
; Evaluation aborted on #<TYPE-ERROR expected-type: LIST datum: #<(SIMPLE-VECTOR 94) {10030FB3EF}>>.
STEENROD> (setf *print-base* 2)
10
STEENROD> *MATRIX*
#(1 10 100 10000000000000000000000000000000000000000000000000001000
  10000000000000000000000000000000000000000000000000010000
  10000000000000000000000000000000000000000000000000100000
  10000000000000000000000000000000000000000000000001000000 10000000
  10000000000000000000000000000000000000000000000100000000 1000000000
  10000000000000000000000000000000000000000000010000000000 100000000000
  101000000000000000000000000000000000000000000000001000000000000
  10000000000000
  10100000000000000000000000000000000000000000000000100000000000000
  100000000010000000000000000000000000000000000000001000000000000000
  10000000000000000 100000000000000000
  10000000000000000000000000000000000001000000000000000000 10000000000000000000
  100000000000000000000 1000000000000000000000 10000000000000000000000
  101000000000000000000000000000000000000100000000000000000000000
  1000000000000000000000000
  10100000000000000000000000000000000000010000000000000000000000000
  100000000010000000000000000000000000000100000000000000000000000000
  1000000000000000000000000000 10000000000000000000000000000
  100000000000000000000000000000 1000000000000000000000000000000
  10000000000000000000000000000000 100000000000000000000000000000000
  1000000000000000000000000000000000 10000000000000000000000000000000000
  10000000000000000000100000000000000000000000000000000000
  10000000000000000001000000000000000000000000000000000000
  10000000000000000000000000000000000000
  100000000000000000000000000000000000000
  1000000000000000000000000000000000000000
  10000000000000000000000000000000000000000
  10000000000000100000000000000000000000000000000000000000
  1000000000000000000000000000000000000000000
  10000000000000000000000000000000000000000000
  100000000000000000000000000000000000000000000
  1000000000000001000000000000000000000000000000000000000000000
  10000000000000000000000000000000000000000000000
  100000000000000100000000000000000000000000000000000000000000000
  1000000000000000000000000000000000000000000000000
  10000000000000010000000000000000000000000000000000000000000000000
  100000000000000100000000000000000000000000000000000000000000000000
  1000000000000000000000000000000000000000000000000000
  10000000000000000000000000000000000000000000000000000
  100000000000000000000000000000000000000000000000000000
  1000000000000000000000000000000000000000000000000000000 0
  100000000000000000000000000000000000000000000000000000000
  1000000000000000000000000000000000000000000000000000000000
  10000000000000000000000000000000000000000000000000000000000
  100000000000000000000000000000000000000000000000000000000000 0
  10000000000000000000000000000000000000000000000000000000000000 0
  1000000000000000000000000000000000000000000000000000000000000000 0 0 0 0 0 0
  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
STEENROD> (setf *print-base* 10)
10
STEENROD> 2
2
STEENROD> 3
3
STEENROD> (length *all-things*)
94
STEENROD> (format t "~{~94,'0b~%~}" *MATRIX*)
; Evaluation aborted on #<TYPE-ERROR expected-type: LIST datum: #<(SIMPLE-VECTOR 94) {10030FB3EF}>>.
STEENROD> (format t "~{~94,'0b~%~}" (coerce *MATRIX* 'list))
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100
0000000000000000000000000000000000000010000000000000000000000000000000000000000000000000001000
0000000000000000000000000000000000000010000000000000000000000000000000000000000000000000010000
0000000000000000000000000000000000000010000000000000000000000000000000000000000000000000100000
0000000000000000000000000000000000000010000000000000000000000000000000000000000000000001000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000
0000000000000000000000000000000000000010000000000000000000000000000000000000000000000100000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000
0000000000000000000000000000000000000010000000000000000000000000000000000000000000010000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000
0000000000000000000000000000000101000000000000000000000000000000000000000000000001000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000
0000000000000000000000000000010100000000000000000000000000000000000000000000000100000000000000
0000000000000000000000000000100000000010000000000000000000000000000000000000001000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000
0000000000000000000000000000000000000010000000000000000000000000000000000001000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000(iter (for ))
0000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000
0000000000000000000000000000000101000000000000000000000000000000000000100000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000
0000000000000000000000000000010100000000000000000000000000000000000010000000000000000000000000
0000000000000000000000000000100000000010000000000000000000000000000100000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000
0000000000000000000000000000000000000010000000000000000000100000000000000000000000000000000000
0000000000000000000000000000000000000010000000000000000001000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000
0000000000000000000000000000000000000010000000000000100000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000
0000000000000000000000000000000001000000000000001000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000
0000000000000000000000000000000100000000000000100000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000
0000000000000000000000000000010000000000000010000000000000000000000000000000000000000000000000
0000000000000000000000000000100000000000000100000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
NIL
STEENROD> (GAUSS-ELIM #(#b001 #b010 #b100))
; compiling (DEFUN GAUSS-ELIM ...); Evaluation aborted on #<SB-INT:INVALID-ARRAY-INDEX-ERROR expected-type: (INTEGER 0 (3)) datum: 3>.
STEENROD> (GAUSS-ELIM #(#b001 #b010 #b100))
; Evaluation aborted on #<SB-INT:SIMPLE-PROGRAM-ERROR "invalid number of arguments: ~S" {100773E8F3}>.
STEENROD> (GAUSS-ELIM #(#b001 #b010 #b100) 3)

NIL
; compiling (DEFUN GAUSS-ELIM ...)
STEENROD> (GAUSS-ELIM #(#b001 #b010 #b100) 3)

#(1 2 4)
STEENROD> (format t "~{~3,'0b~%~}" (coerce *MATRIX* 'list))
001
010
100
10000000000000000000000000000000000000000000000000001000
10000000000000000000000000000000000000000000000000010000
10000000000000000000000000000000000000000000000000100000
10000000000000000000000000000000000000000000000001000000
10000000
10000000000000000000000000000000000000000000000100000000
1000000000
10000000000000000000000000000000000000000000010000000000
100000000000
101000000000000000000000000000000000000000000000001000000000000
10000000000000
10100000000000000000000000000000000000000000000000100000000000000
100000000010000000000000000000000000000000000000001000000000000000
10000000000000000
100000000000000000
10000000000000000000000000000000000001000000000000000000
10000000000000000000
100000000000000000000
1000000000000000000000
10000000000000000000000
101000000000000000000000000000000000000100000000000000000000000
1000000000000000000000000
10100000000000000000000000000000000000010000000000000000000000000
100000000010000000000000000000000000000100000000000000000000000000
1000000000000000000000000000
10000000000000000000000000000
100000000000000000000000000000
1000000000000000000000000000000
10000000000000000000000000000000
100000000000000000000000000000000
1000000000000000000000000000000000
10000000000000000000000000000000000
10000000000000000000100000000000000000000000000000000000
10000000000000000001000000000000000000000000000000000000
10000000000000000000000000000000000000
100000000000000000000000000000000000000
1000000000000000000000000000000000000000
10000000000000000000000000000000000000000
10000000000000100000000000000000000000000000000000000000
1000000000000000000000000000000000000000000
10000000000000000000000000000000000000000000
100000000000000000000000000000000000000000000
1000000000000001000000000000000000000000000000000000000000000
10000000000000000000000000000000000000000000000
100000000000000100000000000000000000000000000000000000000000000
1000000000000000000000000000000000000000000000000
10000000000000010000000000000000000000000000000000000000000000000
100000000000000100000000000000000000000000000000000000000000000000
1000000000000000000000000000000000000000000000000000
10000000000000000000000000000000000000000000000000000
100000000000000000000000000000000000000000000000000000
1000000000000000000000000000000000000000000000000000000
000
100000000000000000000000000000000000000000000000000000000
1000000000000000000000000000000000000000000000000000000000
10000000000000000000000000000000000000000000000000000000000
100000000000000000000000000000000000000000000000000000000000
000
10000000000000000000000000000000000000000000000000000000000000
000
1000000000000000000000000000000000000000000000000000000000000000
000
000
000
000
000
000
000
000
000
000
000
000
000
000
000
000
000
000
000
000
000
000
000
000
000
000
000
000
000
000
NIL
STEENROD> (GAUSS-ELIM #(#b001 #b010 #b100) 3)
#(1 2 4)
STEENROD> (format t "~{~3,'0b~%~}" (coerce * 'list))
001
010
100
NIL
STEENROD> (format t "~{~3,'0b~%~}" (coerce (gauss-elim #(#b011 #b110 #b100)) 'list))
; Evaluation aborted on #<SB-INT:SIMPLE-PROGRAM-ERROR "invalid number of arguments: ~S" {1007E52753}>.
STEENROD> (format t "~{~3,'0b~%~}" (coerce (gauss-elim #(#b011 #b110 #b100) 3) 'list))
001
010
100
NIL
STEENROD> (format t "~{~3,'0b~%~}" (coerce (gauss-elim #(#b011 #b110 #b110) 3) 'list))
101
110
000
NIL
STEENROD> (format t "~{~94,'0b~%~}" (coerce *MATRIX* 'list))
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100
0000000000000000000000000000000000000010000000000000000000000000000000000000000000000000001000
0000000000000000000000000000000000000010000000000000000000000000000000000000000000000000010000
0000000000000000000000000000000000000010000000000000000000000000000000000000000000000000100000
0000000000000000000000000000000000000010000000000000000000000000000000000000000000000001000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000
0000000000000000000000000000000000000010000000000000000000000000000000000000000000000100000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000
0000000000000000000000000000000000000010000000000000000000000000000000000000000000010000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000
0000000000000000000000000000000101000000000000000000000000000000000000000000000001000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000
0000000000000000000000000000010100000000000000000000000000000000000000000000000100000000000000
0000000000000000000000000000100000000010000000000000000000000000000000000000001000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000
0000000000000000000000000000000000000010000000000000000000000000000000000001000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000
0000000000000000000000000000000101000000000000000000000000000000000000100000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000
0000000000000000000000000000010100000000000000000000000000000000000010000000000000000000000000
0000000000000000000000000000100000000010000000000000000000000000000100000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000
0000000000000000000000000000000000000010000000000000000000100000000000000000000000000000000000
0000000000000000000000000000000000000010000000000000000001000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000
0000000000000000000000000000000000000010000000000000100000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000
0000000000000000000000000000000001000000000000001000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000
0000000000000000000000000000000100000000000000100000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000
0000000000000000000000000000010000000000000010000000000000000000000000000000000000000000000000
0000000000000000000000000000100000000000000100000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
NIL
; compiling (DEFPARAMETER *MATRIX* ...)
; compiling (ITER (FOR EQN ...) ...)
; compiling (INCF (AREF *MATRIX* ...) ...)
; compiling (DEFUN GAUSS-ELIM ...)
STEENROD> (GAUSS-ELIM *MATRIX* (1+ (length *all-things*)))

; compiling (DEFUN GAUSS-ELIM ...); Evaluation aborted on #<SB-INT:INVALID-ARRAY-INDEX-ERROR expected-type: (INTEGER 0 (94)) datum: 94>.
STEENROD> (GAUSS-ELIM *MATRIX*)

#(1 2 4 36028797018963976 36028797018963984 36028797018964000 36028797018964032
  128 36028797018964224 512 36028797018964992 2048 5764607523034238976 8192
  23058430092136955904 36929516944438099968 65536 131072 36028797019226112
  524288 1048576 2097152 4194304 5764607523042623488 16777216
  23058430092170493952 36929516944505176064 134217728 268435456 536870912
  1073741824 2147483648 4294967296 8589934592 17179869184 36028831378702336
  36028865738440704 137438953472 274877906944 549755813888 1099511627776
  36030996042219520 4398046511104 8796093022208 17592186044416
  1152956688978935808 70368744177664 4611826755915743232 281474976710656
  18447307023662972928 36894614047325945856 2251799813685248 4503599627370496
  9007199254740992 18014398509481984 0 72057594037927936 144115188075855872
  288230376151711744 576460752303423488 0 2305843009213693952 0
  9223372036854775808 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
  19807040628566084398385987584 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
STEENROD> (format t "~{~94,'0b~%~}" (coerce *MATRIX* 'list))
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100
0000000000000000000000000000000000000010000000000000000000000000000000000000000000000000001000
0000000000000000000000000000000000000010000000000000000000000000000000000000000000000000010000
0000000000000000000000000000000000000010000000000000000000000000000000000000000000000000100000
0000000000000000000000000000000000000010000000000000000000000000000000000000000000000001000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000
0000000000000000000000000000000000000010000000000000000000000000000000000000000000000100000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000
0000000000000000000000000000000000000010000000000000000000000000000000000000000000010000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000
0000000000000000000000000000000101000000000000000000000000000000000000000000000001000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000
0000000000000000000000000000010100000000000000000000000000000000000000000000000100000000000000
0000000000000000000000000000100000000010000000000000000000000000000000000000001000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000
0000000000000000000000000000000000000010000000000000000000000000000000000001000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000
0000000000000000000000000000000101000000000000000000000000000000000000100000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000
0000000000000000000000000000010100000000000000000000000000000000000010000000000000000000000000
0000000000000000000000000000100000000010000000000000000000000000000100000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000
0000000000000000000000000000000000000010000000000000000000100000000000000000000000000000000000
0000000000000000000000000000000000000010000000000000000001000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000
0000000000000000000000000000000000000010000000000000100000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000
0000000000000000000000000000000001000000000000001000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000
0000000000000000000000000000000100000000000000100000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000
0000000000000000000000000000010000000000000010000000000000000000000000000000000000000000000000
0000000000000000000000000000100000000000000100000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
NIL
STEENROD> (format t "~{~94,'0b~%~}" (map 'list #'reverse *MATRIX*))
; Evaluation aborted on #<TYPE-ERROR expected-type: SEQUENCE datum: 1>.
STEENROD> (format t "~{~94,'0b~%~}" (mapcar #'reverse (coerce *MATRIX* 'list)))
; Evaluation aborted on #<TYPE-ERROR expected-type: SEQUENCE datum: 1>.
STEENROD> (format t "~{~94,'0b~%~}" (reverse (coerce *MATRIX* 'list)))
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000
0000000000000000000000000000100000000000000100000000000000000000000000000000000000000000000000
0000000000000000000000000000010000000000000010000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000
0000000000000000000000000000000100000000000000100000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000
0000000000000000000000000000000001000000000000001000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000
0000000000000000000000000000000000000010000000000000100000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000
0000000000000000000000000000000000000010000000000000000001000000000000000000000000000000000000
0000000000000000000000000000000000000010000000000000000000100000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000
0000000000000000000000000000100000000010000000000000000000000000000100000000000000000000000000
0000000000000000000000000000010100000000000000000000000000000000000010000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000
0000000000000000000000000000000101000000000000000000000000000000000000100000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000
0000000000000000000000000000000000000010000000000000000000000000000000000001000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000
0000000000000000000000000000100000000010000000000000000000000000000000000000001000000000000000
0000000000000000000000000000010100000000000000000000000000000000000000000000000100000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000
0000000000000000000000000000000101000000000000000000000000000000000000000000000001000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000
0000000000000000000000000000000000000010000000000000000000000000000000000000000000010000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000
0000000000000000000000000000000000000010000000000000000000000000000000000000000000000100000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000
0000000000000000000000000000000000000010000000000000000000000000000000000000000000000001000000
0000000000000000000000000000000000000010000000000000000000000000000000000000000000000000100000
0000000000000000000000000000000000000010000000000000000000000000000000000000000000000000010000
0000000000000000000000000000000000000010000000000000000000000000000000000000000000000000001000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
NIL
STEENROD> (mapcar #'reverse (mapcar (partial #'format nil "~94,'0b") (coerce *MATRIX* 'list)))
("1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
 "0100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
 "0010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
 "0001000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000"
 "0000100000000000000000000000000000000000000000000000000100000000000000000000000000000000000000"
 "0000010000000000000000000000000000000000000000000000000100000000000000000000000000000000000000"
 "0000001000000000000000000000000000000000000000000000000100000000000000000000000000000000000000"
 "0000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
 "0000000010000000000000000000000000000000000000000000000100000000000000000000000000000000000000"
 "0000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
 "0000000000100000000000000000000000000000000000000000000100000000000000000000000000000000000000"
 "0000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000"
 "0000000000001000000000000000000000000000000000000000000000001010000000000000000000000000000000"
 "0000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000"
 "0000000000000010000000000000000000000000000000000000000000000010100000000000000000000000000000"
 "0000000000000001000000000000000000000000000000000000000100000000010000000000000000000000000000"
 "0000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000"
 "0000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000"
 "0000000000000000001000000000000000000000000000000000000100000000000000000000000000000000000000"
 "0000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000"
 "0000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000"
 "0000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000"
 "0000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000"
 "0000000000000000000000010000000000000000000000000000000000001010000000000000000000000000000000"
 "0000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000"
 "0000000000000000000000000100000000000000000000000000000000000010100000000000000000000000000000"
 "0000000000000000000000000010000000000000000000000000000100000000010000000000000000000000000000"
 "0000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000"
 "0000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000"
 "0000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000"
 "0000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000"
 "0000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000"
 "0000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000"
 "0000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000"
 "0000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000"
 "0000000000000000000000000000000000010000000000000000000100000000000000000000000000000000000000"
 "0000000000000000000000000000000000001000000000000000000100000000000000000000000000000000000000"
 "0000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000"
 "0000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000"
 "0000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000"
 "0000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000"
 "0000000000000000000000000000000000000000010000000000000100000000000000000000000000000000000000"
 "0000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000"
 "0000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000"
 "0000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000"
 "0000000000000000000000000000000000000000000001000000000000001000000000000000000000000000000000"
 "0000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000"
 "0000000000000000000000000000000000000000000000010000000000000010000000000000000000000000000000"
 "0000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000"
 "0000000000000000000000000000000000000000000000000100000000000000100000000000000000000000000000"
 "0000000000000000000000000000000000000000000000000010000000000000010000000000000000000000000000"
 "0000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000"
 "0000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000"
 "0000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000"
 "0000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000"
 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
 "0000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000"
 "0000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000"
 "0000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000"
 "0000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000"
 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
 "0000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000"
 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
 "0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000"
 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
 "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001"
 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
 "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
STEENROD> (format t "~{~a~%~}" (mapcar #'reverse (mapcar (partial #'format nil "~94,'0b") (coerce *MATRIX* 'list))))
1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0001000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000
0000100000000000000000000000000000000000000000000000000100000000000000000000000000000000000000
0000010000000000000000000000000000000000000000000000000100000000000000000000000000000000000000
0000001000000000000000000000000000000000000000000000000100000000000000000000000000000000000000
0000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000010000000000000000000000000000000000000000000000100000000000000000000000000000000000000
0000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000100000000000000000000000000000000000000000000100000000000000000000000000000000000000
0000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000001000000000000000000000000000000000000000000000001010000000000000000000000000000000
0000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000010000000000000000000000000000000000000000000000010100000000000000000000000000000
0000000000000001000000000000000000000000000000000000000100000000010000000000000000000000000000
0000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000001000000000000000000000000000000000000100000000000000000000000000000000000000
0000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000010000000000000000000000000000000000001010000000000000000000000000000000
0000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000100000000000000000000000000000000000010100000000000000000000000000000
0000000000000000000000000010000000000000000000000000000100000000010000000000000000000000000000
0000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000010000000000000000000100000000000000000000000000000000000000
0000000000000000000000000000000000001000000000000000000100000000000000000000000000000000000000
0000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000010000000000000100000000000000000000000000000000000000
0000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000001000000000000001000000000000000000000000000000000
0000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000010000000000000010000000000000000000000000000000
0000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000100000000000000100000000000000000000000000000
0000000000000000000000000000000000000000000000000010000000000000010000000000000000000000000000
0000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
NIL
STEENROD> (format t "~{~a~%~}" (mapcar #'reverse (mapcar (partial #'format nil "~95,'0b") (coerce *MATRIX* 'list))))
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
01000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00010000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000
00001000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000
00000100000000000000000000000000000000000000000000000001000000000000000000000000000000000000000
00000010000000000000000000000000000000000000000000000001000000000000000000000000000000000000000
00000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000100000000000000000000000000000000000000000000001000000000000000000000000000000000000000
00000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000001000000000000000000000000000000000000000000001000000000000000000000000000000000000000
00000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000010000000000000000000000000000000000000000000000010100000000000000000000000000000000
00000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000100000000000000000000000000000000000000000000000101000000000000000000000000000000
00000000000000010000000000000000000000000000000000000001000000000100000000000000000000000000000
00000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000010000000000000000000000000000000000001000000000000000000000000000000000000000
00000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000100000000000000000000000000000000000010100000000000000000000000000000000
00000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000001000000000000000000000000000000000000101000000000000000000000000000000
00000000000000000000000000100000000000000000000000000001000000000100000000000000000000000000000
00000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000100000000000000000001000000000000000000000000000000000000000
00000000000000000000000000000000000010000000000000000001000000000000000000000000000000000000000
00000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000100000000000001000000000000000000000000000000000000000
00000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000010000000000000010000000000000000000000000000000000
00000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000100000000000000100000000000000000000000000000000
00000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000001000000000000001000000000000000000000000000000
00000000000000000000000000000000000000000000000000100000000000000100000000000000000000000000000
00000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
NIL
; compiling (DEFPARAMETER *MATRIX* ...)
; compiling (ITER (FOR EQN ...) ...)
STEENROD> (format t "~{~a~%~}" (mapcar #'reverse (mapcar (partial #'format nil "~95,'0b") (coerce *MATRIX* 'list))))
10000000000000000000000000010100000000000000000000000000000000000000000000000000000000000000000
01000000000000000000000000001010000000000000000000000000000000000000000000000000000000000000000
00100000000000000000000000000101000000000000000000000000000000000000000000000000000000000000000
00001000000000000000000000000000010100000000000000000000000000000000000000000000000000000000000
00000100000000000000000000000000001010000000000000000000000000000000000000000000000000000000000
00000010000000000000000000000000000101000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000010000010000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000001000001000000000000000000000000000000000000000000000000000000
10000000100000000000000000010100000000010100000000000000000000000000000000000000000000000000000
00000000100000000000000000000000000000010100000000000000000000000000000000000000000000000000000
0100000001000000000000000001010000000001010000000000000000000000000000000000000000000000000000
00000000010000000000000000000000000000001010000000000000000000000000000000000000000000000000000
00000000000000000000000000000001000000000001000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000001000001000000000000000000000000000000000000000000000000000
00100000001000000000000000000101000000000101000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000
00000000001000000000000000000000000000000101000000000000000000000000000000000000000000000000000
00000000000000000000000000000000100000000000100000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000100000100000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000
00000000000010000000000000000000000000000000010100000000000000000000000000000000000000000000000
00000000000001000000000000000000000000000000001010000000000000000000000000000000000000000000000
00000000000000100000000000000000000000000000000101000000000000000000000000000000000000000000000
00000000000000010000000000000000000010000010000000100000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000
00000000000000000000000000010000000000000000000000001000000000000000000000000000000000000000000
00000000000000000000000000000000010000010000000000001000000000000000000000000000000000000000000
00000000000000000000000000010000010000000000000000001000000000000000000000000000000000000000000
00000000000000001000000000001000010000000000001000011000000000000000000000000000000000000000000
00000000000000000000000000001000000000000000000000000100000000000000000000000000000000000000000
00000000000000000000000000000000001000001000000000000100000000000000000000000000000000000000000
00000000000000000000000000001000001000000000000000000100000000000000000000000000000000000000000
00000000000000000000000000000000010000001000000000001100000000000000000000000000000000000000000
00000000000100000000000000000100000000000000100000000010000000000000000000000000000000000000000
00001000000000000100000000000000010100000000000000001010000000000000000000000000000000000000000
00010000000100000000000000000100100100000000100000000010000000000000000000000000000000000000000
00000000000000000100000000000000000000000000000000001010000000000000000000000000000000000000000
00000100000000000010000000000000001010000000000000000101000000000000000000000000000000000000000
00000000000000000000000000000000000010000010000000000001000000000000000000000000000000000000000
00000000000000000000000000000010000010000000000000000001000000000000000000000000000000000000000
00000000000000000010000000000000000000000000000000000101000000000000000000000000000000000000000
00000000000000000000000000000010000100000010000010000011000000000000000000000000000000000000000
00000000000000000000000000000000000100000010000000010011000000000000000000000000000000000000000
00000000000000000000000000001000010001001000001000001100100000000000000000000000000000000000000
00000000000000000000000000000001000000000000000000000000100000000000000000000000000000000000000
00000010000000000001000000000000000101000000000000000010100000000000000000000000000000000000000
00000000000000000000000000000001100001000000100000000000100000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000
00000000000000000001000000000000000000000000000000000010100000000000000000000000000000000000000
00000000000000000000000000000000000000100000000000000000010000000000000000000000000000000000000
00000000000000000000000000000000100000000000000000000000010000000000000000000000000000000000000
00000000000000000000000000000001100000100001000000000000010000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000
00000000000000000000100000000000000100000100000000000000010000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000
00000000000000000000000000000000000100000100000000000010000100000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000
00000000000000000000000000000000000000000000010000000000000010000000000000000000000000000000000
00000000000000000000000000000000000000000000010000000000000010000000000000000000000000000000000
00000000000000000000010000000000000000001000010000000100001010000000000000000000000000000000000
00000000000000000000000000000000001000000000001000000100000001000000000000000000000000000000000
00000000000000000000000000000000000000000000001000000000000001000000000000000000000000000000000
00000000000000000000000000000000000000000000001000000000000001000000000000000000000000000000000
00000000000000000000000000010000011000010000000000000000000001000000000000000000000000000000000
00000000000000000000000000000000001000010000000000000000000001000000000000000000000000000000000
00000000000000000000000000010000001001010001000000000000100001000000000000000000000000000000000
00000000000000000000001000010000001000010000000000000000000101000000000000000000000000000000000
00000000000010000000000100000000000000000000010100000000000010100000000000000000000000000000000
00000000000000000000000000000000000000000000000100000000000000100000000000000000000000000000000
00000001000000000000100000000000000000100000000100000000010000100000000000000000000000000000000
00000000000000000000000100000000000000000000000000000000000010100000000000000000000000000000000
00000000010010000010000100000000000000001010010100000101000010100000000000000000000000000000000
00000000000000000000000000000000000010000000000010000001000000010000000000000000000000000000000
00000000000001000000000010000000000000000000001010000000000001010000000000000000000000000000000
00000000000000000000000000000000000000000000000010000000000000010000000000000000000000000000000
00000000000000000000000000000000000000000000000010000000000000010000000000000000000000000000000
00000000000000000000000010000000000000000000000000000000000001010000000000000000000000000000000
00010000000000000000000000000100100110000100000000000000000000010000000000000000000000000000000
00000001000000000000000000000000000010100100000000000000000000010000000000000000000000000000000
10000100100000000000000010010100001010110100100000000000010001010000000000000000000000000000000
00000000000000000000000000000000000000000000000001000000000000001000000000000000000000000000000
00000000000000000000000000000000000000000000000001000000000000001000000000000000000000000000000
00000000000000000000000000001000010001001000011001001100100010001000000000000000000000000000000
00000000000000100000000001000000000000000000000101000000000000101000000000000000000000000000000
00000000000000000000000000000000000000000000000001000000000000001000000000000000000000000000000
00000000000000000000000000000000000000100000000001000000010000001000000000000000000000000000000
00000000000000000000000001000000000000000000000000000000000000101000000000000000000000000000000
00000000000000000000000000000000000000000000000000100000000000000100000000000000000000000000000
00000000000000000000000000000000000000000000000000100000000000000100000000000000000000000000000
00000000000000000000000000000000000000100000000000100000010000000100000000000000000000000000000
00000000000000010000000000100000000000000000000000100000000000000100000000000000000000000000000
01001000000001000100000000001010010100000000001010101010000000000100000000000000000000000000000
00000000000000000000000000000000000001000000000000100000100000000100000000000000000000000000000
00000000000000000000000000100010000000000000000000000001000000000100000000000000000000000000000
NIL
; compiling (DEFPARAMETER *MATRIX* ...)
; compiling (ITER (FOR EQN ...) ...)
STEENROD> (format t "~{~a~%~}" (mapcar #'reverse (mapcar (partial #'format nil "~95,'0b") (coerce *MATRIX* 'list))))
10000000000000000000000000010100000000000000000000000000000000000000000000000000000000000000000
01000000000000000000000000001010000000000000000000000000000000000000000000000000000000000000000
00100000000000000000000000000101000000000000000000000000000000000000000000000000000000000000000
00001000000000000000000000000000010100000000000000000000000000000000000000000000000000000000000
00000100000000000000000000000000001010000000000000000000000000000000000000000000000000000000000
00000010000000000000000000000000000101000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000010000010000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000001000001000000000000000000000000000000000000000000000000000000
10000000100000000000000000010100000000010100000000000000000000000000000000000000000000000000000
00000000100000000000000000000000000000010100000000000000000000000000000000000000000000000000000
01000000010000000000000000001010000000001010000000000000000000000000000000000000000000000000000
00000000010000000000000000000000000000001010000000000000000000000000000000000000000000000000000
00000000000000000000000000000001000000000001000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000001000001000000000000000000000000000000000000000000000000000
00100000001000000000000000000101000000000101000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000
00000000001000000000000000000000000000000101000000000000000000000000000000000000000000000000000
00000000000000000000000000000000100000000000100000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000100000100000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000
00000000000010000000000000000000000000000000010100000000000000000000000000000000000000000000000
00000000000001000000000000000000000000000000001010000000000000000000000000000000000000000000000
00000000000000100000000000000000000000000000000101000000000000000000000000000000000000000000000
00000000000000010000000000000000000010000010000000100000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000
00000000000000000000000000010000000000000000000000001000000000000000000000000000000000000000000
00000000000000000000000000000000010000010000000000001000000000000000000000000000000000000000000
00000000000000000000000000010000010000000000000000001000000000000000000000000000000000000000000
00000000000000001000000000001000010000000000001000011000000000000000000000000000000000000000000
00000000000000000000000000001000000000000000000000000100000000000000000000000000000000000000000
00000000000000000000000000000000001000001000000000000100000000000000000000000000000000000000000
00000000000000000000000000001000001000000000000000000100000000000000000000000000000000000000000
00000000000000000000000000000000010000001000000000001100000000000000000000000000000000000000000
00000000000100000000000000000100000000000000100000000010000000000000000000000000000000000000000
00001000000000000100000000000000010100000000000000001010000000000000000000000000000000000000000
00010000000100000000000000000100100100000000100000000010000000000000000000000000000000000000000
00000000000000000100000000000000000000000000000000001010000000000000000000000000000000000000000
00000100000000000010000000000000001010000000000000000101000000000000000000000000000000000000000
00000000000000000000000000000000000010000010000000000001000000000000000000000000000000000000000
00000000000000000000000000000010000010000000000000000001000000000000000000000000000000000000000
00000000000000000010000000000000000000000000000000000101000000000000000000000000000000000000000
00000000000000000000000000000010000100000010000010000011000000000000000000000000000000000000000
00000000000000000000000000000000000100000010000000010011000000000000000000000000000000000000000
00000000000000000000000000001000010001001000001000001100100000000000000000000000000000000000000
00000000000000000000000000000001000000000000000000000000100000000000000000000000000000000000000
00000010000000000001000000000000000101000000000000000010100000000000000000000000000000000000000
00000000000000000000000000000001100001000000100000000000100000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000
00000000000000000001000000000000000000000000000000000010100000000000000000000000000000000000000
00000000000000000000000000000000000000100000000000000000010000000000000000000000000000000000000
00000000000000000000000000000000100000000000000000000000010000000000000000000000000000000000000
00000000000000000000000000000001100000100001000000000000010000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000
00000000000000000000100000000000000100000100000000000000010000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000
00000000000000000000000000000000000100000100000000000010000100000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000
00000000000000000000000000000000000000000000010000000000000010000000000000000000000000000000000
00000000000000000000000000000000000000000000010000000000000010000000000000000000000000000000000
00000000000000000000010000000000000000001000010000000100001010000000000000000000000000000000000
00000000000000000000000000000000001000000000001000000100000001000000000000000000000000000000000
00000000000000000000000000000000000000000000001000000000000001000000000000000000000000000000000
00000000000000000000000000000000000000000000001000000000000001000000000000000000000000000000000
00000000000000000000000000010000011000010000000000000000000001000000000000000000000000000000000
00000000000000000000000000000000001000010000000000000000000001000000000000000000000000000000000
00000000000000000000000000010000001001010001000000000000100001000000000000000000000000000000000
00000000000000000000001000010000001000010000000000000000000101000000000000000000000000000000000
00000000000010000000000100000000000000000000010100000000000010100000000000000000000000000000000
00000000000000000000000000000000000000000000000100000000000000100000000000000000000000000000000
00000001000000000000100000000000000000100000000100000000010000100000000000000000000000000000000
00000000000000000000000100000000000000000000000000000000000010100000000000000000000000000000000
00000000010010000010000100000000000000001010010100000101000010100000000000000000000000000000000
00000000000000000000000000000000000010000000000010000001000000010000000000000000000000000000000
00000000000001000000000010000000000000000000001010000000000001010000000000000000000000000000000
00000000000000000000000000000000000000000000000010000000000000010000000000000000000000000000000
00000000000000000000000000000000000000000000000010000000000000010000000000000000000000000000000
00000000000000000000000010000000000000000000000000000000000001010000000000000000000000000000000
00010000000000000000000000000100100110000100000000000000000000010000000000000000000000000000000
00000001000000000000000000000000000010100100000000000000000000010000000000000000000000000000000
10000100100000000000000010010100001010110100100000000000010001010000000000000000000000000000000
00000000000000000000000000000000000000000000000001000000000000001000000000000000000000000000000
00000000000000000000000000000000000000000000000001000000000000001000000000000000000000000000000
00000000000000000000000000001000010001001000011001001100100010001000000000000000000000000000000
00000000000000100000000001000000000000000000000101000000000000101000000000000000000000000000000
00000000000000000000000000000000000000000000000001000000000000001000000000000000000000000000000
00000000000000000000000000000000000000100000000001000000010000001000000000000000000000000000000
00000000000000000000000001000000000000000000000000000000000000101000000000000000000000000000000
00000000000000000000000000000000000000000000000000100000000000000100000000000000000000000000000
00000000000000000000000000000000000000000000000000100000000000000100000000000000000000000000000
00000000000000000000000000000000000000100000000000100000010000000100000000000000000000000000000
00000000000000010000000000100000000000000000000000100000000000000100000000000000000000000000000
01001000000001000100000000001010010100000000001010101010000000000100000000000000000000000000000
00000000000000000000000000000000000001000000000000100000100000000100000000000000000000000000000
00000000000000000000000000100010000000000000000000000001000000000100000000000000000000000000000
NIL
; compiling (INCF (AREF *MATRIX* ...) ...)
STEENROD> (format t "~{~a~%~}" (mapcar #'reverse (mapcar (partial #'format nil "~95,'0b") (coerce *MATRIX* 'list))))
10000000000000000000000000010100000000000000000000000000000000000000000000000000000000000000000
01000000000000000000000000001010000000000000000000000000000000000000000000000000000000000000000
00100000000000000000000000000101000000000000000000000000000000000000000000000000000000000000000
00001000000000000000000000000000010100000000000000000000000000000000000000000000000000000000000
00000100000000000000000000000000001010000000000000000000000000000000000000000000000000000000000
00000010000000000000000000000000000101000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000010000010000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000001000001000000000000000000000000000000000000000000000000000000
10000000100000000000000000010100000000010100000000000000000000000000000000000000000000000000000
00000000100000000000000000000000000000010100000000000000000000000000000000000000000000000000000
01000000010000000000000000001010000000001010000000000000000000000000000000000000000000000000000
00000000010000000000000000000000000000001010000000000000000000000000000000000000000000000000000
00000000000000000000000000000001000000000001000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000001000001000000000000000000000000000000000000000000000000000
00100000001000000000000000000101000000000101000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000
00000000001000000000000000000000000000000101000000000000000000000000000000000000000000000000000
00000000000000000000000000000000100000000000100000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000100000100000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000
00000000000010000000000000000000000000000000010100000000000000000000000000000000000000000000000
00000000000001000000000000000000000000000000001010000000000000000000000000000000000000000000000
00000000000000100000000000000000000000000000000101000000000000000000000000000000000000000000000
00000000000000010000000000000000000010000010000000100000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000
00000000000000000000000000010000000000000000000000001000000000000000000000000000000000000000000
00000000000000000000000000000000010000010000000000001000000000000000000000000000000000000000000
00000000000000000000000000010000010000000000000000001000000000000000000000000000000000000000000
00000000000000001000000000001000010000000000001000011000000000000000000000000000000000000000000
00000000000000000000000000001000000000000000000000000100000000000000000000000000000000000000000
00000000000000000000000000000000001000001000000000000100000000000000000000000000000000000000000
00000000000000000000000000001000001000000000000000000100000000000000000000000000000000000000000
00000000000000000000000000000000010000001000000000001100000000000000000000000000000000000000000
00000000000100000000000000000100000000000000100000000010000000000000000000000000000000000000000
00001000000000000100000000000000010100000000000000001010000000000000000000000000000000000000000
00010000000100000000000000000100100100000000100000000010000000000000000000000000000000000000000
00000000000000000100000000000000000000000000000000001010000000000000000000000000000000000000000
00000100000000000010000000000000001010000000000000000101000000000000000000000000000000000000000
00000000000000000000000000000000000010000010000000000001000000000000000000000000000000000000000
00000000000000000000000000000010000010000000000000000001000000000000000000000000000000000000000
00000000000000000010000000000000000000000000000000000101000000000000000000000000000000000000000
00000000000000000000000000000010000100000010000010000011000000000000000000000000000000000000000
00000000000000000000000000000000000100000010000000010011000000000000000000000000000000000000000
00000000000000000000000000001000010001001000001000001100100000000000000000000000000000000000000
00000000000000000000000000000001000000000000000000000000100000000000000000000000000000000000000
00000010000000000001000000000000000101000000000000000010100000000000000000000000000000000000000
00000000000000000000000000000001100001000000100000000000100000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000
00000000000000000001000000000000000000000000000000000010100000000000000000000000000000000000000
00000000000000000000000000000000000000100000000000000000010000000000000000000000000000000000000
00000000000000000000000000000000100000000000000000000000010000000000000000000000000000000000000
00000000000000000000000000000001100000100001000000000000010000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000
00000000000000000000100000000000000100000100000000000000010000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000
00000000000000000000000000000000000100000100000000000010000100000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000
00000000000000000000000000000000000000000000010000000000000010000000000000000000000000000000000
00000000000000000000000000000000000000000000010000000000000010000000000000000000000000000000000
00000000000000000000010000000000000000001000010000000100001010000000000000000000000000000000000
00000000000000000000000000000000001000000000001000000100000001000000000000000000000000000000000
00000000000000000000000000000000000000000000001000000000000001000000000000000000000000000000000
00000000000000000000000000000000000000000000001000000000000001000000000000000000000000000000000
00000000000000000000000000010000011000010000000000000000000001000000000000000000000000000000000
00000000000000000000000000000000001000010000000000000000000001000000000000000000000000000000000
00000000000000000000000000010000001001010001000000000000100001000000000000000000000000000000000
00000000000000000000001000010000001000010000000000000000000101000000000000000000000000000000000
00000000000010000000000100000000000000000000010100000000000010100000000000000000000000000000000
00000000000000000000000000000000000000000000000100000000000000100000000000000000000000000000000
00000001000000000000100000000000000000100000000100000000010000100000000000000000000000000000000
00000000000000000000000100000000000000000000000000000000000010100000000000000000000000000000000
00000000010010000010000100000000000000001010010100000101000010100000000000000000000000000000000
00000000000000000000000000000000000010000000000010000001000000010000000000000000000000000000000
00000000000001000000000010000000000000000000001010000000000001010000000000000000000000000000000
00000000000000000000000000000000000000000000000010000000000000010000000000000000000000000000000
00000000000000000000000000000000000000000000000010000000000000010000000000000000000000000000000
00000000000000000000000010000000000000000000000000000000000001010000000000000000000000000000000
00010000000000000000000000000100100110000100000000000000000000010000000000000000000000000000000
00000001000000000000000000000000000010100100000000000000000000010000000000000000000000000000000
10000100100000000000000010010100001010110100100000000000010001010000000000000000000000000000001
00000000000000000000000000000000000000000000000001000000000000001000000000000000000000000000000
00000000000000000000000000000000000000000000000001000000000000001000000000000000000000000000000
00000000000000000000000000001000010001001000011001001100100010001000000000000000000000000000000
00000000000000100000000001000000000000000000000101000000000000101000000000000000000000000000000
00000000000000000000000000000000000000000000000001000000000000001000000000000000000000000000000
00000000000000000000000000000000000000100000000001000000010000001000000000000000000000000000000
00000000000000000000000001000000000000000000000000000000000000101000000000000000000000000000000
00000000000000000000000000000000000000000000000000100000000000000100000000000000000000000000000
00000000000000000000000000000000000000000000000000100000000000000100000000000000000000000000000
00000000000000000000000000000000000000100000000000100000010000000100000000000000000000000000000
00000000000000010000000000100000000000000000000000100000000000000100000000000000000000000000000
01001000000001000100000000001010010100000000001010101010000000000100000000000000000000000000000
00000000000000000000000000000000000001000000000000100000100000000100000000000000000000000000000
00000000000000000000000000100010000000000000000000000001000000000100000000000000000000000000000
NIL
STEENROD> (car *deg4quad-basis*)
(+ (:STEP (0 2 0 1 0)) (:STEP (0 1 2 1 0)) (:STEP (0 1 0 2 0)))
STEENROD> (GAUSS-ELIM *MATRIX*)
#(1 2 4 36028797018963976 36028797018963984 36028797018964000 36028797018964032
  128 36028797018964224 512 36028797018964992 2048 5764607523034238976 8192
  23058430092136955904 36929516944438099968 65536 131072 36028797019226112
  524288 1048576 2097152 4194304 5764607523042623488 16777216
  23058430092170493952 36929516944505176064 134217728 268435456 536870912
  1073741824 2147483648 4294967296 8589934592 17179869184 36028831378702336
  36028865738440704 137438953472 274877906944 549755813888 1099511627776
  36030996042219520 4398046511104 8796093022208 17592186044416
  1152956688978935808 70368744177664 4611826755915743232 281474976710656
  18447307023662972928 36894614047325945856 2251799813685248 4503599627370496
  9007199254740992 18014398509481984 0 72057594037927936 144115188075855872
  288230376151711744 576460752303423488 0 2305843009213693952 0
  9223372036854775808 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
  19807040628566084398385987584 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
STEENROD> (format t "~{~a~%~}" (mapcar #'reverse (mapcar (partial #'format nil "~95,'0b") (coerce *MATRIX* 'list))))
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
01000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00010000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000
00001000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000
00000100000000000000000000000000000000000000000000000001000000000000000000000000000000000000000
00000010000000000000000000000000000000000000000000000001000000000000000000000000000000000000000
00000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000100000000000000000000000000000000000000000000001000000000000000000000000000000000000000
00000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000001000000000000000000000000000000000000000000001000000000000000000000000000000000000000
00000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000010000000000000000000000000000000000000000000000010100000000000000000000000000000000
00000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000100000000000000000000000000000000000000000000000101000000000000000000000000000000
00000000000000010000000000000000000000000000000000000001000000000100000000000000000000000000000
00000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000010000000000000000000000000000000000001000000000000000000000000000000000000000
00000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000100000000000000000000000000000000000010100000000000000000000000000000000
00000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000001000000000000000000000000000000000000101000000000000000000000000000000
00000000000000000000000000100000000000000000000000000001000000000100000000000000000000000000000
00000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000100000000000000000001000000000000000000000000000000000000000
00000000000000000000000000000000000010000000000000000001000000000000000000000000000000000000000
00000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000100000000000001000000000000000000000000000000000000000
00000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000010000000000000010000000000000000000000000000000000
00000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000100000000000000100000000000000000000000000000000
00000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000001000000000000001000000000000000000000000000000
00000000000000000000000000000000000000000000000000100000000000000100000000000000000000000000000
00000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
NIL
STEENROD> 